{"version":3,"sources":["htmx.js"],"names":["root","factory","define","amd","htmx","self","this","onLoad","onLoadHelper","process","processNode","on","addEventListenerImpl","off","removeEventListenerImpl","trigger","triggerEvent","ajax","ajaxHelper","find","findAll","closest","values","elt","type","getInputValues","remove","removeElement","addClass","addClassToElement","removeClass","removeClassFromElement","toggleClass","toggleClassOnElement","takeClass","takeClassForElement","defineExtension","removeExtension","logAll","logger","config","historyEnabled","historyCacheSize","refreshOnHistoryMiss","defaultSwapStyle","defaultSwapDelay","defaultSettleDelay","includeIndicatorStyles","indicatorClass","requestClass","settlingClass","swappingClass","allowEval","attributesToSettle","withCredentials","timeout","wsReconnectDelay","disableSelector","useTemplateFragments","scrollBehavior","parseInterval","_","internalEval","createEventSource","url","EventSource","createWebSocket","WebSocket","version","VERBS","VERB_SELECTOR","map","verb","join","str","undefined","slice","parseFloat","getRawAttribute","name","getAttribute","hasAttribute","qualifiedName","getAttributeValue","parentElt","parentElement","getDocument","document","getClosestMatch","condition","getClosestAttributeValue","attributeName","closestAttr","e","matches","selector","matchesFunction","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","getStartTag","match","exec","toLowerCase","parseHTML","resp","depth","responseNode","DOMParser","parseFromString","body","firstChild","createDocumentFragment","makeFragment","querySelector","content","maybeCall","func","isType","o","Object","prototype","toString","isFunction","isRawObject","getInternalData","data","toArray","arr","returnArr","i","length","push","forEach","isScrolledIntoView","el","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","bodyContains","contains","splitOnWhitespace","trim","split","mergeObjects","obj1","obj2","key","hasOwnProperty","parseJSON","jString","JSON","parse","error","logError","maybeEval","eval","callback","evt","detail","event","console","log","eltOrSelector","querySelectorAll","delay","resolveTarget","setTimeout","removeChild","clazz","classList","add","toggle","children","child","querySelectorAllExt","indexOf","substr","querySelectorExt","arg2","processEventArgs","arg1","arg3","target","listener","ready","eventArgs","addEventListener","removeEventListener","getTarget","explicitTarget","targetStr","boosted","shouldSettleAttribute","cloneAttributes","mergeTo","mergeFrom","attributes","attr","removeAttribute","setAttribute","value","isInlineSwap","swapStyle","extensions","getExtensions","extension","oobSwap","oobValue","oobElement","settleInfo","id","fragment","appendChild","swap","parentNode","triggerErrorEvent","handleOutOfBandSwaps","handlePreservedElements","preservedElt","oldElt","getElementById","replaceChild","handleAttributes","newNode","oldNode","tagName","newAttributes","cloneNode","tasks","makeAjaxLoadTask","processScripts","processFocus","autoFocusedElt","focus","insertNodesBefore","insertBefore","childNodes","nodeType","Node","TEXT_NODE","COMMENT_NODE","cleanUpElement","element","internalData","webSocket","close","sseEventSource","listenerInfos","info","swapOuterHTML","swapInnerHTML","eltBeforeNewContent","previousSibling","newElt","nextSibling","replacedWith","elts","ELEMENT_NODE","nextElementSibling","swapAfterBegin","swapBeforeBegin","swapBeforeEnd","swapAfterEnd","maybeSelectFromResponse","newFragment","node","ext","newElements","handleSwap","j","TITLE_FINDER","findTitle","result","selectAndSwap","responseText","title","titleElt","innerHTML","handleTrigger","xhr","header","triggerBody","getResponseHeader","triggers","eventName","WHITESPACE","WHITESPACE_OR_COMMA","SYMBOL_START","SYMBOL_CONT","STRINGISH_START","NOT_WHITESPACE","tokenizeString","tokens","position","charAt","startPosition","startChar","symbol","isPossibleRelativeReference","token","last","paramName","maybeGenerateConditional","shift","bracketCount","conditionalSource","conditionFunction","Function","source","consumeUntil","INPUT_SELECTOR","getTriggerSpecs","explicitTrigger","triggerSpecs","initialLength","every","pollInterval","eventFilter","sseEvent","triggerSpec","changed","once","consume","from","throttle","queue","cancelPolling","cancelled","processPolling","path","spec","nodeData","maybeFilterEvent","makeEvent","issueAjaxRequest","isLocalLink","location","hostname","boostElement","pushURL","rawAttribute","shouldCancel","href","ignoreBoostedAnchorCtrlClick","ctrlKey","metaKey","explicitCancel","eltToListenOn","eventListener","preventDefault","eventData","handledFor","elementData","stopPropagation","triggeredOnce","lastValue","delayed","clearTimeout","windowIsScrolling","scrollHandler","initScrollHandler","setInterval","maybeReveal","revealed","initialized","processWebSocketInfo","ensureWebSocket","processWebSocketSend","wssSource","retryCount","base_part","port","protocol","socket","onerror","maybeCloseWebSocketSource","onclose","code","getWebSocketReconnectDelay","onopen","response","withExtensions","transformResponse","makeSettleInfo","settleImmediately","webSocketSourceElt","parent","headers","getHeaders","results","errors","filteredParameters","filterValues","getExpressionVars","send","stringify","exp","Math","min","pow","random","processSSEInfo","processSSESource","processSSESwap","sseSrc","maybeCloseSSESource","sseEventName","sseSourceElt","hasEventSource","sseListener","swapSpec","getSwapSpecification","processSSETrigger","loadImmediately","load","loaded","processVerbs","explicitAction","observerOptions","threshold","IntersectionObserver","entries","isIntersecting","observe","polling","evalScript","script","innerText","isBoosted","findElementsToProcess","boostedElts","initButtonTracking","form","maybeSetLastButtonClicked","lastButtonClicked","initNode","sseInfo","wsInfo","kebabEventName","replace","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","ignoreEventForLogging","toDo","msg","errorInfo","eventResult","dispatchEvent","kebabName","kebabedEvent","onEvent","currentPathForHistory","getHistoryElement","saveToHistoryCache","scroll","historyCache","localStorage","getItem","splice","setItem","cause","cache","getCachedHistory","cleanInnerHtmlForHistory","className","clone","saveHistory","pathname","search","historyElt","history","replaceState","scrollY","pushUrlIntoHistory","pushState","task","loadHistoryFromServer","request","XMLHttpRequest","details","open","setRequestHeader","onload","status","historyElement","restoreHistory","cached","scrollTo","reload","shouldPush","pushUrl","getPushUrl","addRequestIndicatorClasses","indicator","indicators","ic","removeRequestIndicatorClasses","haveSeenNode","processed","isSameNode","shouldInclude","disabled","checked","processInputValue","validate","multiple","files","current","Array","isArray","concat","validateElement","elements","input","willValidate","checkValidity","message","validationMessage","validity","formValues","noValidate","includes","descendant","appendParam","returnStr","realValue","encodeURIComponent","urlEncode","v","makeFormData","formData","FormData","append","prompt","HX-Request","HX-Trigger","HX-Trigger-Name","HX-Target","HX-Current-URL","getValuesForElement","inputValues","paramsValue","newValues","isAnchorLink","swapInfo","swapDelay","settleDelay","modifier","scrollVal","splitSpec","pop","selectorVal","showVal","encodeParamsForBody","encodedParameters","encodeParameters","updateScrollState","first","scrollTarget","scrollTop","scrollHeight","show","showTarget","scrollIntoView","block","behavior","evalAsDefault","attributeValue","varsValues","evaluateValue","toEval","defaultVal","getHXVarsForElement","expressionVars","getHXValsForElement","safelySetHeaderValue","headerValue","getResponseURL","responseURL","URL","hasHeader","regexp","getAllResponseHeaders","context","Element","targetOverride","handler","hierarchyForElt","etc","resolve","reject","Promise","promise","_resolve","_reject","responseHandler","handleAjaxResponse","eltData","requestInFlight","queueStrategy","queuedRequests","endRequestLock","queuedRequest","promptQuestion","promptResponse","confirmQuestion","confirm","rawParameters","allParameters","requestAttrValues","requestConfig","parameters","unfilteredParameters","credentials","triggeringEvent","splitPath","pathNoAnchor","anchor","finalPathForGet","keys","toUpperCase","overrideMimeType","noHeaders","responseInfo","pathInfo","finalPath","hierarchy","secondaryTriggerElt","parentEltInHierarchy","onabort","ontimeout","upload","lengthComputable","total","pushedUrl","shouldSaveHistory","serverResponse","doSwap","activeElt","activeElement","selectionInfo","start","selectionStart","end","selectionEnd","newActiveElt","setSelectionRange","hash","finalElt","doSettle","pathToPush","extensionBase","text","extensionsToReturn","extensionsToIgnore","extensionsForElement","extensionName","fn","readyState","insertIndicatorStyles","head","insertAdjacentHTML","getMetaConfig","mergeMetaConfig","metaConfig","onpopstate","state"],"mappings":"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","file":"htmx.js","sourcesContent":["//AMD insanity\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.htmx = factory();\n    }\n}(typeof self !== 'undefined' ? self : this, function () {\nreturn (function () {\n        'use strict';\n\n        // Public API\n        var htmx = {\n            onLoad: onLoadHelper,\n            process: processNode,\n            on: addEventListenerImpl,\n            off: removeEventListenerImpl,\n            trigger : triggerEvent,\n            ajax : ajaxHelper,\n            find : find,\n            findAll : findAll,\n            closest : closest,\n            values : function(elt, type){\n                var inputValues = getInputValues(elt, type || \"post\");\n                return inputValues.values;\n            },\n            remove : removeElement,\n            addClass : addClassToElement,\n            removeClass : removeClassFromElement,\n            toggleClass : toggleClassOnElement,\n            takeClass : takeClassForElement,\n            defineExtension : defineExtension,\n            removeExtension : removeExtension,\n            logAll : logAll,\n            logger : null,\n            config : {\n                historyEnabled:true,\n                historyCacheSize:10,\n                refreshOnHistoryMiss:false,\n                defaultSwapStyle:'innerHTML',\n                defaultSwapDelay:0,\n                defaultSettleDelay:20,\n                includeIndicatorStyles:true,\n                indicatorClass:'htmx-indicator',\n                requestClass:'htmx-request',\n                settlingClass:'htmx-settling',\n                swappingClass:'htmx-swapping',\n                allowEval:true,\n                attributesToSettle:[\"class\", \"style\", \"width\", \"height\"],\n                withCredentials:false,\n                timeout:0,\n                wsReconnectDelay: 'full-jitter',\n                disableSelector: \"[hx-disable], [data-hx-disable]\",\n                useTemplateFragments: false,\n                scrollBehavior: 'smooth',\n            },\n            parseInterval:parseInterval,\n            _:internalEval,\n            createEventSource: function(url){\n                return new EventSource(url, {withCredentials:true})\n            },\n            createWebSocket: function(url){\n                return new WebSocket(url, []);\n            },\n            version: \"1.5.0\"\n        };\n\n        var VERBS = ['get', 'post', 'put', 'delete', 'patch'];\n        var VERB_SELECTOR = VERBS.map(function(verb){\n            return \"[hx-\" + verb + \"], [data-hx-\" + verb + \"]\"\n        }).join(\", \");\n\n        //====================================================================\n        // Utilities\n        //====================================================================\n\n\t\tfunction parseInterval(str) {\n\t\t\tif (str == undefined)  {\n\t\t\t\treturn undefined\n\t\t\t}\n\t\t\tif (str.slice(-2) == \"ms\") {\n\t\t\t\treturn parseFloat(str.slice(0,-2)) || undefined\n\t\t\t}\n\t\t\tif (str.slice(-1) == \"s\") {\n\t\t\t\treturn (parseFloat(str.slice(0,-1)) * 1000) || undefined\n\t\t\t}\n\t\t\treturn parseFloat(str) || undefined\n        }\n\n        function getRawAttribute(elt, name) {\n            return elt.getAttribute && elt.getAttribute(name);\n        }\n\n        // resolve with both hx and data-hx prefixes\n        function hasAttribute(elt, qualifiedName) {\n            return elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n                elt.hasAttribute(\"data-\" + qualifiedName));\n        }\n\n        function getAttributeValue(elt, qualifiedName) {\n            return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, \"data-\" + qualifiedName);\n        }\n\n        function parentElt(elt) {\n            return elt.parentElement;\n        }\n\n        function getDocument() {\n            return document;\n        }\n\n        function getClosestMatch(elt, condition) {\n            if (condition(elt)) {\n                return elt;\n            } else if (parentElt(elt)) {\n                return getClosestMatch(parentElt(elt), condition);\n            } else {\n                return null;\n            }\n        }\n\n        function getClosestAttributeValue(elt, attributeName) {\n            var closestAttr = null;\n            getClosestMatch(elt, function (e) {\n                return closestAttr = getAttributeValue(e, attributeName);\n            });\n            return closestAttr;\n        }\n\n        function matches(elt, selector) {\n            // noinspection JSUnresolvedVariable\n            var matchesFunction = elt.matches ||\n                elt.matchesSelector || elt.msMatchesSelector || elt.mozMatchesSelector\n                || elt.webkitMatchesSelector || elt.oMatchesSelector;\n            return matchesFunction && matchesFunction.call(elt, selector);\n        }\n\n        function getStartTag(str) {\n            var tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n            var match = tagMatcher.exec( str );\n            if (match) {\n                return match[1].toLowerCase();\n            } else {\n                return \"\";\n            }\n        }\n\n        function parseHTML(resp, depth) {\n            var parser = new DOMParser();\n            var responseDoc = parser.parseFromString(resp, \"text/html\");\n            var responseNode = responseDoc.body;\n            while (depth > 0) {\n                depth--;\n                responseNode = responseNode.firstChild;\n            }\n            if (responseNode == null) {\n                responseNode = getDocument().createDocumentFragment();\n            }\n            return responseNode;\n        }\n\n        function makeFragment(resp) {\n            if (htmx.config.useTemplateFragments) {\n                var documentFragment = parseHTML(\"<body><template>\" + resp + \"</template></body>\", 0);\n                return documentFragment.querySelector('template').content;\n            } else {\n                var startTag = getStartTag(resp);\n                switch (startTag) {\n                    case \"thead\":\n                    case \"tbody\":\n                    case \"tfoot\":\n                    case \"colgroup\":\n                    case \"caption\":\n                        return parseHTML(\"<table>\" + resp + \"</table>\", 1);\n                    case \"col\":\n                        return parseHTML(\"<table><colgroup>\" + resp + \"</colgroup></table>\", 2);\n                    case \"tr\":\n                        return parseHTML(\"<table><tbody>\" + resp + \"</tbody></table>\", 2);\n                    case \"td\":\n                    case \"th\":\n                        return parseHTML(\"<table><tbody><tr>\" + resp + \"</tr></tbody></table>\", 3);\n                    case \"script\":\n                        return parseHTML(\"<div>\" + resp + \"</div>\", 1);\n                    default:\n                        return parseHTML(resp, 0);\n                }\n            }\n        }\n\n        function maybeCall(func){\n            if(func) {\n                func();\n            }\n        }\n\n        function isType(o, type) {\n            return Object.prototype.toString.call(o) === \"[object \" + type + \"]\";\n        }\n\n        function isFunction(o) {\n            return isType(o, \"Function\");\n        }\n\n        function isRawObject(o) {\n            return isType(o, \"Object\");\n        }\n\n        function getInternalData(elt) {\n            var dataProp = 'htmx-internal-data';\n            var data = elt[dataProp];\n            if (!data) {\n                data = elt[dataProp] = {};\n            }\n            return data;\n        }\n\n        function toArray(arr) {\n            var returnArr = [];\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    returnArr.push(arr[i]);\n                }\n            }\n            return returnArr\n        }\n\n        function forEach(arr, func) {\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    func(arr[i]);\n                }\n            }\n        }\n\n        function isScrolledIntoView(el) {\n            var rect = el.getBoundingClientRect();\n            var elemTop = rect.top;\n            var elemBottom = rect.bottom;\n            return elemTop < window.innerHeight && elemBottom >= 0;\n        }\n\n        function bodyContains(elt) {\n            return getDocument().body.contains(elt);\n        }\n\n        function splitOnWhitespace(trigger) {\n            return trigger.trim().split(/\\s+/);\n        }\n\n        function mergeObjects(obj1, obj2) {\n            for (var key in obj2) {\n                if (obj2.hasOwnProperty(key)) {\n                    obj1[key] = obj2[key];\n                }\n            }\n            return obj1;\n        }\n\n        function parseJSON(jString) {\n            try {\n                return JSON.parse(jString);\n            } catch(error) {\n                logError(error);\n                return null;\n            }\n        }\n\n        //==========================================================================================\n        // public API\n        //==========================================================================================\n\n        function internalEval(str){\n            return maybeEval(getDocument().body, function () {\n                return eval(str);\n            });\n        }\n\n        function onLoadHelper(callback) {\n            var value = htmx.on(\"htmx:load\", function(evt) {\n                callback(evt.detail.elt);\n            });\n            return value;\n        }\n\n        function logAll(){\n            htmx.logger = function(elt, event, data) {\n                if(console) {\n                    console.log(event, elt, data);\n                }\n            }\n        }\n\n        function find(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelector(selector);\n            } else {\n                return find(getDocument(), eltOrSelector);\n            }\n        }\n\n        function findAll(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelectorAll(selector);\n            } else {\n                return findAll(getDocument(), eltOrSelector);\n            }\n        }\n\n        function removeElement(elt, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeElement(elt);}, delay)\n            } else {\n                elt.parentElement.removeChild(elt);\n            }\n        }\n\n        function addClassToElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){addClassToElement(elt, clazz);}, delay)\n            } else {\n                elt.classList.add(clazz);\n            }\n        }\n\n        function removeClassFromElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeClassFromElement(elt, clazz);}, delay)\n            } else {\n                elt.classList.remove(clazz);\n            }\n        }\n\n        function toggleClassOnElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            elt.classList.toggle(clazz);\n        }\n\n        function takeClassForElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            forEach(elt.parentElement.children, function(child){\n                removeClassFromElement(child, clazz);\n            })\n            addClassToElement(elt, clazz);\n        }\n\n        function closest(elt, selector) {\n            elt = resolveTarget(elt);\n            if (elt.closest) {\n                return elt.closest(selector);\n            } else {\n                do{\n                    if (elt == null || matches(elt, selector)){\n                        return elt;\n                    }\n                }\n                while (elt = elt && parentElt(elt));\n            }\n        }\n\n        function querySelectorAllExt(elt, selector) {\n\t\t    if (selector.indexOf(\"closest \") === 0) {\n                return [closest(elt, selector.substr(8))];\n            } else if (selector.indexOf(\"find \") === 0) {\n                return [find(elt, selector.substr(5))];\n            } else if (selector === 'document') {\n                return [document];\n            } else {\n                return getDocument().querySelectorAll(selector);\n            }\n        }\n\n        function querySelectorExt(eltOrSelector, selector) {\n            return querySelectorAllExt(eltOrSelector, selector)[0]\n        }\n\n        function resolveTarget(arg2) {\n            if (isType(arg2, 'String')) {\n                return find(arg2);\n            } else {\n                return arg2;\n            }\n        }\n\n        function processEventArgs(arg1, arg2, arg3) {\n            if (isFunction(arg2)) {\n                return {\n                    target: getDocument().body,\n                    event: arg1,\n                    listener: arg2\n                }\n            } else {\n                return {\n                    target: resolveTarget(arg1),\n                    event: arg2,\n                    listener: arg3\n                }\n            }\n\n        }\n\n        function addEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener);\n            })\n            var b = isFunction(arg2);\n            return b ? arg2 : arg3;\n        }\n\n        function removeEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener);\n            })\n            return isFunction(arg2) ? arg2 : arg3;\n        }\n\n        //====================================================================\n        // Node processing\n        //====================================================================\n\n        function getTarget(elt) {\n            var explicitTarget = getClosestMatch(elt, function(e){return getAttributeValue(e,\"hx-target\") !== null});\n            if (explicitTarget) {\n                var targetStr = getAttributeValue(explicitTarget, \"hx-target\");\n                if (targetStr === \"this\") {\n                    return explicitTarget;\n                } else {\n                    return querySelectorExt(elt, targetStr)\n                }\n            } else {\n                var data = getInternalData(elt);\n                if (data.boosted) {\n                    return getDocument().body;\n                } else {\n                    return elt;\n                }\n            }\n        }\n\n        function shouldSettleAttribute(name) {\n            var attributesToSettle = htmx.config.attributesToSettle;\n            for (var i = 0; i < attributesToSettle.length; i++) {\n                if (name === attributesToSettle[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function cloneAttributes(mergeTo, mergeFrom) {\n            forEach(mergeTo.attributes, function (attr) {\n                if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n                    mergeTo.removeAttribute(attr.name)\n                }\n            });\n            forEach(mergeFrom.attributes, function (attr) {\n                if (shouldSettleAttribute(attr.name)) {\n                    mergeTo.setAttribute(attr.name, attr.value);\n                }\n            });\n        }\n\n        function isInlineSwap(swapStyle, target) {\n            var extensions = getExtensions(target);\n            for (var i = 0; i < extensions.length; i++) {\n                var extension = extensions[i];\n                try {\n                    if (extension.isInlineSwap(swapStyle)) {\n                        return true;\n                    }\n                } catch(e) {\n                    logError(e);\n                }\n            }\n            return swapStyle === \"outerHTML\";\n        }\n\n        function oobSwap(oobValue, oobElement, settleInfo) {\n            var selector = \"#\" + oobElement.id;\n            var swapStyle = \"outerHTML\";\n            if (oobValue === \"true\") {\n                // do nothing\n            } else if (oobValue.indexOf(\":\") > 0) {\n                swapStyle = oobValue.substr(0, oobValue.indexOf(\":\"));\n                selector  = oobValue.substr(oobValue.indexOf(\":\") + 1, oobValue.length);\n            } else {\n                swapStyle = oobValue;\n            }\n\n            var target = getDocument().querySelector(selector);\n            if (target) {\n                var fragment;\n                fragment = getDocument().createDocumentFragment();\n                fragment.appendChild(oobElement); // pulls the child out of the existing fragment\n                if (!isInlineSwap(swapStyle, target)) {\n                    fragment = oobElement; // if this is not an inline swap, we use the content of the node, not the node itself\n                }\n                swap(swapStyle, target, target, fragment, settleInfo);\n            } else {\n                oobElement.parentNode.removeChild(oobElement);\n                triggerErrorEvent(getDocument().body, \"htmx:oobErrorNoTarget\", {content: oobElement})\n            }\n            return oobValue;\n        }\n\n        function handleOutOfBandSwaps(fragment, settleInfo) {\n            forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\n                var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\n                if (oobValue != null) {\n                    oobSwap(oobValue, oobElement, settleInfo);\n                }\n            });\n        }\n\n        function handlePreservedElements(fragment) {\n            forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function (preservedElt) {\n                var id = getAttributeValue(preservedElt, \"id\");\n                var oldElt = getDocument().getElementById(id);\n                if (oldElt != null) {\n                    preservedElt.parentNode.replaceChild(oldElt, preservedElt);\n                }\n            });\n        }\n\n        function handleAttributes(parentNode, fragment, settleInfo) {\n            forEach(fragment.querySelectorAll(\"[id]\"), function (newNode) {\n                if (newNode.id && newNode.id.length > 0) {\n                    var oldNode = parentNode.querySelector(newNode.tagName + \"[id='\" + newNode.id + \"']\");\n                    if (oldNode && oldNode !== parentNode) {\n                        var newAttributes = newNode.cloneNode();\n                        cloneAttributes(newNode, oldNode);\n                        settleInfo.tasks.push(function () {\n                            cloneAttributes(newNode, newAttributes);\n                        });\n                    }\n                }\n            });\n        }\n\n        function makeAjaxLoadTask(child) {\n            return function () {\n                processNode(child);\n                processScripts(child);\n                processFocus(child)\n                triggerEvent(child, 'htmx:load');\n            };\n        }\n\n        function processFocus(child) {\n            var autofocus = \"[autofocus]\";\n            var autoFocusedElt = matches(child, autofocus) ? child : child.querySelector(autofocus)\n            if (autoFocusedElt != null) {\n                autoFocusedElt.focus();\n            }\n        }\n\n        function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n            handleAttributes(parentNode, fragment, settleInfo);\n            while(fragment.childNodes.length > 0){\n                var child = fragment.firstChild;\n                parentNode.insertBefore(child, insertBefore);\n                if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child));\n                }\n            }\n        }\n\n        function cleanUpElement(element) {\n            var internalData = getInternalData(element);\n            if (internalData.webSocket) {\n                internalData.webSocket.close();\n            }\n            if (internalData.sseEventSource) {\n                internalData.sseEventSource.close();\n            }\n            if (internalData.listenerInfos) {\n                forEach(internalData.listenerInfos, function(info) {\n                    if (element !== info.on) {\n                        info.on.removeEventListener(info.trigger, info.listener);\n                    }\n                });\n            }\n            if (element.children) { // IE\n                forEach(element.children, function(child) { cleanUpElement(child) });\n            }\n        }\n\n        function swapOuterHTML(target, fragment, settleInfo) {\n            if (target.tagName === \"BODY\") {\n                return swapInnerHTML(target, fragment, settleInfo);\n            } else {\n                var eltBeforeNewContent = target.previousSibling;\n                insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n                if (eltBeforeNewContent == null) {\n                    var newElt = parentElt(target).firstChild;\n                } else {\n                    var newElt = eltBeforeNewContent.nextSibling;\n                }\n                getInternalData(target).replacedWith = newElt; // tuck away so we can fire events on it later\n                settleInfo.elts = [] // clear existing elements\n                while(newElt && newElt !== target) {\n                    if (newElt.nodeType === Node.ELEMENT_NODE) {\n                        settleInfo.elts.push(newElt);\n                    }\n                    newElt = newElt.nextElementSibling;\n                }\n                cleanUpElement(target);\n                parentElt(target).removeChild(target);\n            }\n        }\n\n        function swapAfterBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(target, target.firstChild, fragment, settleInfo);\n        }\n\n        function swapBeforeBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n        }\n\n        function swapBeforeEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(target, null, fragment, settleInfo);\n        }\n\n        function swapAfterEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo);\n        }\n\n        function swapInnerHTML(target, fragment, settleInfo) {\n            var firstChild = target.firstChild;\n            insertNodesBefore(target, firstChild, fragment, settleInfo);\n            if (firstChild) {\n                while (firstChild.nextSibling) {\n                    cleanUpElement(firstChild.nextSibling)\n                    target.removeChild(firstChild.nextSibling);\n                }\n                cleanUpElement(firstChild)\n                target.removeChild(firstChild);\n            }\n        }\n\n        function maybeSelectFromResponse(elt, fragment) {\n            var selector = getClosestAttributeValue(elt, \"hx-select\");\n            if (selector) {\n                var newFragment = getDocument().createDocumentFragment();\n                forEach(fragment.querySelectorAll(selector), function (node) {\n                    newFragment.appendChild(node);\n                });\n                fragment = newFragment;\n            }\n            return fragment;\n        }\n\n        function swap(swapStyle, elt, target, fragment, settleInfo) {\n            switch (swapStyle) {\n                case \"none\":\n                    return;\n                case \"outerHTML\":\n                    swapOuterHTML(target, fragment, settleInfo);\n                    return;\n                case \"afterbegin\":\n                    swapAfterBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforebegin\":\n                    swapBeforeBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforeend\":\n                    swapBeforeEnd(target, fragment, settleInfo);\n                    return;\n                case \"afterend\":\n                    swapAfterEnd(target, fragment, settleInfo);\n                    return;\n                default:\n                    var extensions = getExtensions(elt);\n                    for (var i = 0; i < extensions.length; i++) {\n                        var ext = extensions[i];\n                        try {\n                            var newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo);\n                            if (newElements) {\n                                if (typeof newElements.length !== 'undefined') {\n                                    // if handleSwap returns an array (like) of elements, we handle them\n                                    for (var j = 0; j < newElements.length; j++) {\n                                        var child = newElements[j];\n                                        if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                                            settleInfo.tasks.push(makeAjaxLoadTask(child));\n                                        }\n                                    }\n                                }\n                                return;\n                            }\n                        } catch (e) {\n                            logError(e);\n                        }\n                    }\n                    swapInnerHTML(target, fragment, settleInfo);\n            }\n        }\n\n        var TITLE_FINDER = /<title>([\\s\\S]+?)<\\/title>/im;\n        function findTitle(content) {\n            if(content.indexOf('<title>') > -1 &&\n                (content.indexOf('<svg>') == -1 ||\n                    content.indexOf('<title>') < content.indexOf('<svg>'))) {\n                var result = TITLE_FINDER.exec(content);\n                if (result) {\n                    return result[1];\n                }\n            }\n        }\n\n        function selectAndSwap(swapStyle, target, elt, responseText, settleInfo) {\n            var title = findTitle(responseText);\n            if(title) {\n                var titleElt = find(\"title\");\n                if(titleElt) {\n                    titleElt.innerHTML = title;\n                } else {\n                    window.document.title = title;\n                }\n            }\n            var fragment = makeFragment(responseText);\n            if (fragment) {\n                handleOutOfBandSwaps(fragment, settleInfo);\n                fragment = maybeSelectFromResponse(elt, fragment);\n                handlePreservedElements(fragment);\n                return swap(swapStyle, elt, target, fragment, settleInfo);\n            }\n        }\n\n        function handleTrigger(xhr, header, elt) {\n            var triggerBody = xhr.getResponseHeader(header);\n            if (triggerBody.indexOf(\"{\") === 0) {\n                var triggers = parseJSON(triggerBody);\n                for (var eventName in triggers) {\n                    if (triggers.hasOwnProperty(eventName)) {\n                        var detail = triggers[eventName];\n                        if (!isRawObject(detail)) {\n                            detail = {\"value\": detail}\n                        }\n                        triggerEvent(elt, eventName, detail);\n                    }\n                }\n            } else {\n                triggerEvent(elt, triggerBody, []);\n            }\n        }\n\n        var WHITESPACE = /\\s/;\n        var WHITESPACE_OR_COMMA = /[\\s,]/;\n        var SYMBOL_START = /[_$a-zA-Z]/;\n        var SYMBOL_CONT = /[_$a-zA-Z0-9]/;\n        var STRINGISH_START = ['\"', \"'\", \"/\"];\n        var NOT_WHITESPACE = /[^\\s]/;\n        function tokenizeString(str) {\n            var tokens = [];\n            var position = 0;\n            while (position < str.length) {\n                if(SYMBOL_START.exec(str.charAt(position))) {\n                    var startPosition = position;\n                    while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n                    var startChar = str.charAt(position);\n                    var startPosition = position;\n                    position++;\n                    while (position < str.length && str.charAt(position) !== startChar ) {\n                        if (str.charAt(position) === \"\\\\\") {\n                            position++;\n                        }\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else {\n                    var symbol = str.charAt(position);\n                    tokens.push(symbol);\n                }\n                position++;\n            }\n            return tokens;\n        }\n\n        function isPossibleRelativeReference(token, last, paramName) {\n            return SYMBOL_START.exec(token.charAt(0)) &&\n                token !== \"true\" &&\n                token !== \"false\" &&\n                token !== \"this\" &&\n                token !== paramName &&\n                last !== \".\";\n        }\n\n        function maybeGenerateConditional(elt, tokens, paramName) {\n            if (tokens[0] === '[') {\n                tokens.shift();\n                var bracketCount = 1;\n                var conditionalSource = \" return (function(\" + paramName + \"){ return (\";\n                var last = null;\n                while (tokens.length > 0) {\n                    var token = tokens[0];\n                    if (token === \"]\") {\n                        bracketCount--;\n                        if (bracketCount === 0) {\n                            if (last === null) {\n                                conditionalSource = conditionalSource + \"true\";\n                            }\n                            tokens.shift();\n                            conditionalSource += \")})\";\n                            try {\n                                var conditionFunction = maybeEval(elt,function () {\n                                    return Function(conditionalSource)();\n                                    },\n                                    function(){return true})\n                                conditionFunction.source = conditionalSource;\n                                return conditionFunction;\n                            } catch (e) {\n                                triggerErrorEvent(getDocument().body, \"htmx:syntax:error\", {error:e, source:conditionalSource})\n                                return null;\n                            }\n                        }\n                    } else if (token === \"[\") {\n                        bracketCount++;\n                    }\n                    if (isPossibleRelativeReference(token, last, paramName)) {\n                            conditionalSource += \"((\" + paramName + \".\" + token + \") ? (\" + paramName + \".\" + token + \") : (window.\" + token + \"))\";\n                    } else {\n                        conditionalSource = conditionalSource + token;\n                    }\n                    last = tokens.shift();\n                }\n            }\n        }\n\n        function consumeUntil(tokens, match) {\n            var result = \"\";\n            while (tokens.length > 0 && !tokens[0].match(match)) {\n                result += tokens.shift();\n            }\n            return result;\n        }\n\n        var INPUT_SELECTOR = 'input, textarea, select';\n        function getTriggerSpecs(elt) {\n            var explicitTrigger = getAttributeValue(elt, 'hx-trigger');\n            var triggerSpecs = [];\n            if (explicitTrigger) {\n                var tokens = tokenizeString(explicitTrigger);\n                do {\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    var initialLength = tokens.length;\n                    var trigger = consumeUntil(tokens, /[,\\[\\s]/);\n                    if (trigger !== \"\") {\n                        if (trigger === \"every\") {\n                            var every = {trigger: 'every'};\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/));\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                every.eventFilter = eventFilter;\n                            }\n                            triggerSpecs.push(every);\n                        } else if (trigger.indexOf(\"sse:\") === 0) {\n                            triggerSpecs.push({trigger: 'sse', sseEvent: trigger.substr(4)});\n                        } else {\n                            var triggerSpec = {trigger: trigger};\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                triggerSpec.eventFilter = eventFilter;\n                            }\n                            while (tokens.length > 0 && tokens[0] !== \",\") {\n                                consumeUntil(tokens, NOT_WHITESPACE)\n                                var token = tokens.shift();\n                                if (token === \"changed\") {\n                                    triggerSpec.changed = true;\n                                } else if (token === \"once\") {\n                                    triggerSpec.once = true;\n                                } else if (token === \"consume\") {\n                                    triggerSpec.consume = true;\n                                } else if (token === \"delay\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"from\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.from = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"target\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.target = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"throttle\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"queue\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if ((token === \"root\" || token === \"threshold\") && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else {\n                                    triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                                }\n                            }\n                            triggerSpecs.push(triggerSpec);\n                        }\n                    }\n                    if (tokens.length === initialLength) {\n                        triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                    }\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                } while (tokens[0] === \",\" && tokens.shift())\n            }\n\n            if (triggerSpecs.length > 0) {\n                return triggerSpecs;\n            } else if (matches(elt, 'form')) {\n                return [{trigger: 'submit'}];\n            } else if (matches(elt, INPUT_SELECTOR)) {\n                return [{trigger: 'change'}];\n            } else {\n                return [{trigger: 'click'}];\n            }\n        }\n\n        function cancelPolling(elt) {\n            getInternalData(elt).cancelled = true;\n        }\n\n        function processPolling(elt, verb, path, spec) {\n            var nodeData = getInternalData(elt);\n            nodeData.timeout = setTimeout(function () {\n                if (bodyContains(elt) && nodeData.cancelled !== true) {\n                    if (!maybeFilterEvent(spec, makeEvent('hx:poll:trigger', {triggerSpec:spec}))) {\n                        issueAjaxRequest(verb, path, elt);\n                    }\n                    processPolling(elt, verb, getAttributeValue(elt, \"hx-\" + verb), spec);\n                }\n            }, spec.pollInterval);\n        }\n\n        function isLocalLink(elt) {\n            return location.hostname === elt.hostname &&\n                getRawAttribute(elt,'href') &&\n                getRawAttribute(elt,'href').indexOf(\"#\") !== 0;\n        }\n\n        function boostElement(elt, nodeData, triggerSpecs) {\n            if ((elt.tagName === \"A\" && isLocalLink(elt)) || elt.tagName === \"FORM\") {\n                nodeData.boosted = true;\n                var verb, path;\n                if (elt.tagName === \"A\") {\n                    verb = \"get\";\n                    path = getRawAttribute(elt, 'href');\n                    nodeData.pushURL = true;\n                } else {\n                    var rawAttribute = getRawAttribute(elt, \"method\");\n                    verb = rawAttribute ? rawAttribute.toLowerCase() : \"get\";\n                    if (verb === \"get\") {\n                        nodeData.pushURL = true;\n                    }\n                    path = getRawAttribute(elt, 'action');\n                }\n                triggerSpecs.forEach(function(triggerSpec) {\n                    addEventListener(elt, verb, path, nodeData, triggerSpec, true);\n                });\n            }\n        }\n\n        function shouldCancel(elt) {\n            return elt.tagName === \"FORM\" ||\n                (matches(elt, 'input[type=\"submit\"], button') && closest(elt, 'form') !== null) ||\n                (elt.tagName === \"A\" && elt.href && (elt.getAttribute('href') === '#' ||\n                                                     elt.getAttribute('href').indexOf(\"#\") !== 0));\n        }\n\n        function ignoreBoostedAnchorCtrlClick(elt, evt) {\n            return getInternalData(elt).boosted && elt.tagName === \"A\" && evt.type === \"click\" && (evt.ctrlKey || evt.metaKey);\n        }\n\n        function maybeFilterEvent(triggerSpec, evt) {\n            var eventFilter = triggerSpec.eventFilter;\n            if(eventFilter){\n                try {\n                    return eventFilter(evt) !== true;\n                } catch(e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:eventFilter:error\", {error: e, source:eventFilter.source});\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function addEventListener(elt, verb, path, nodeData, triggerSpec, explicitCancel) {\n            var eltsToListenOn;\n            if (triggerSpec.from) {\n                eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from);\n            } else {\n                eltsToListenOn = [elt];\n            }\n            forEach(eltsToListenOn, function (eltToListenOn) {\n                var eventListener = function (evt) {\n                    if (!bodyContains(elt)) {\n                        eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener);\n                        return;\n                    }\n                    if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n                        return;\n                    }\n                    if (explicitCancel || shouldCancel(elt)) {\n                        evt.preventDefault();\n                    }\n                    if (maybeFilterEvent(triggerSpec, evt)) {\n                        return;\n                    }\n                    var eventData = getInternalData(evt);\n                    eventData.triggerSpec = triggerSpec;\n                    if (eventData.handledFor == null) {\n                        eventData.handledFor = [];\n                    }\n                    var elementData = getInternalData(elt);\n                    if (eventData.handledFor.indexOf(elt) < 0) {\n                        eventData.handledFor.push(elt);\n                        if (triggerSpec.consume) {\n                            evt.stopPropagation();\n                        }\n                        if (triggerSpec.target && evt.target) {\n                            if (!matches(evt.target, triggerSpec.target)) {\n                                return;\n                            }\n                        }\n                        if (triggerSpec.once) {\n                            if (elementData.triggeredOnce) {\n                                return;\n                            } else {\n                                elementData.triggeredOnce = true;\n                            }\n                        }\n                        if (triggerSpec.changed) {\n                            if (elementData.lastValue === elt.value) {\n                                return;\n                            } else {\n                                elementData.lastValue = elt.value;\n                            }\n                        }\n                        if (elementData.delayed) {\n                            clearTimeout(elementData.delayed);\n                        }\n                        if (elementData.throttle) {\n                            return;\n                        }\n\n                        if (triggerSpec.throttle) {\n                            if (!elementData.throttle) {\n                                issueAjaxRequest(verb, path, elt, evt);\n                                elementData.throttle = setTimeout(function () {\n                                    elementData.throttle = null;\n                                }, triggerSpec.throttle);\n                            }\n                        } else if (triggerSpec.delay) {\n                            elementData.delayed = setTimeout(function () {\n                                issueAjaxRequest(verb, path, elt, evt);\n                            }, triggerSpec.delay);\n                        } else {\n                            issueAjaxRequest(verb, path, elt, evt);\n                        }\n                    }\n                };\n                if (nodeData.listenerInfos == null) {\n                    nodeData.listenerInfos = [];\n                }\n                nodeData.listenerInfos.push({\n                    trigger: triggerSpec.trigger,\n                    listener: eventListener,\n                    on: eltToListenOn\n                })\n                eltToListenOn.addEventListener(triggerSpec.trigger, eventListener);\n            })\n        }\n\n        var windowIsScrolling = false // used by initScrollHandler\n        var scrollHandler = null;\n        function initScrollHandler() {\n            if (!scrollHandler) {\n                scrollHandler = function() {\n                    windowIsScrolling = true\n                };\n                window.addEventListener(\"scroll\", scrollHandler)\n                setInterval(function() {\n                    if (windowIsScrolling) {\n                        windowIsScrolling = false;\n                        forEach(getDocument().querySelectorAll(\"[hx-trigger='revealed'],[data-hx-trigger='revealed']\"), function (elt) {\n                            maybeReveal(elt);\n                        })\n                    }\n                }, 200);\n            }\n        }\n\n        function maybeReveal(elt) {\n            var nodeData = getInternalData(elt);\n            if (!nodeData.revealed && isScrolledIntoView(elt)) {\n                nodeData.revealed = true;\n                if (nodeData.initialized) {\n                    issueAjaxRequest(nodeData.verb, nodeData.path, elt);\n                } else {\n                    // if the node isn't initialized, wait for it before triggering the request\n                    elt.addEventListener(\"htmx:afterProcessNode\",\n                        function () {\n                            issueAjaxRequest(nodeData.verb, nodeData.path, elt);\n                        }, {once: true});\n                }\n            }\n        }\n\n        function processWebSocketInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    ensureWebSocket(elt, value[1], 0);\n                }\n                if (value[0] === \"send\") {\n                    processWebSocketSend(elt);\n                }\n            }\n        }\n\n        function ensureWebSocket(elt, wssSource, retryCount) {\n            if (!bodyContains(elt)) {\n                return;  // stop ensuring websocket connection when socket bearing element ceases to exist\n            }\n\n            if (wssSource.indexOf(\"/\") == 0) {  // complete absolute paths only\n                var base_part = location.hostname + (location.port ? ':'+location.port: '');\n                if (location.protocol == 'https:') {\n                    wssSource = \"wss://\" + base_part + wssSource;\n                } else if (location.protocol == 'http:') {\n                    wssSource = \"ws://\" + base_part + wssSource;\n                }\n            }\n            var socket = htmx.createWebSocket(wssSource);\n            socket.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:wsError\", {error:e, socket:socket});\n                maybeCloseWebSocketSource(elt);\n            };\n\n            socket.onclose = function (e) {\n                if ([1006, 1012, 1013].indexOf(e.code) >= 0) {  // Abnormal Closure/Service Restart/Try Again Later\n                    var delay = getWebSocketReconnectDelay(retryCount);\n                    setTimeout(function() {\n                        ensureWebSocket(elt, wssSource, retryCount+1);  // creates a websocket with a new timeout\n                    }, delay);\n                }\n            };\n            socket.onopen = function (e) {\n                retryCount = 0;\n            }\n\n            getInternalData(elt).webSocket = socket;\n            socket.addEventListener('message', function (event) {\n                if (maybeCloseWebSocketSource(elt)) {\n                    return;\n                }\n\n                var response = event.data;\n                withExtensions(elt, function(extension){\n                    response = extension.transformResponse(response, null, elt);\n                });\n\n                var settleInfo = makeSettleInfo(elt);\n                var fragment = makeFragment(response);\n                var children = toArray(fragment.children);\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    oobSwap(getAttributeValue(child, \"hx-swap-oob\") || \"true\", child, settleInfo);\n                }\n\n                settleImmediately(settleInfo.tasks);\n            });\n        }\n\n        function maybeCloseWebSocketSource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).webSocket.close();\n                return true;\n            }\n        }\n\n        function processWebSocketSend(elt) {\n            var webSocketSourceElt = getClosestMatch(elt, function (parent) {\n                return getInternalData(parent).webSocket != null;\n            });\n            if (webSocketSourceElt) {\n                elt.addEventListener(getTriggerSpecs(elt)[0].trigger, function (evt) {\n                    var webSocket = getInternalData(webSocketSourceElt).webSocket;\n                    var headers = getHeaders(elt, webSocketSourceElt);\n                    var results = getInputValues(elt, 'post');\n                    var errors = results.errors;\n                    var rawParameters = results.values;\n                    var expressionVars = getExpressionVars(elt);\n                    var allParameters = mergeObjects(rawParameters, expressionVars);\n                    var filteredParameters = filterValues(allParameters, elt);\n                    filteredParameters['HEADERS'] = headers;\n                    if (errors && errors.length > 0) {\n                        triggerEvent(elt, 'htmx:validation:halted', errors);\n                        return;\n                    }\n                    webSocket.send(JSON.stringify(filteredParameters));\n                    if(shouldCancel(elt)){\n                        evt.preventDefault();\n                    }\n                });\n            } else {\n                triggerErrorEvent(elt, \"htmx:noWebSocketSourceError\");\n            }\n        }\n\n        function getWebSocketReconnectDelay(retryCount) {\n            var delay = htmx.config.wsReconnectDelay;\n            if (typeof delay === 'function') {\n                return delay(retryCount);\n            }\n            if (delay === 'full-jitter') {\n                var exp = Math.min(retryCount, 6);\n                var maxDelay = 1000 * Math.pow(2, exp);\n                return maxDelay * Math.random();\n            }\n            logError('htmx.config.wsReconnectDelay must either be a function or the string \"full-jitter\"');\n        }\n\n        //====================================================================\n        // Server Sent Events\n        //====================================================================\n\n        function processSSEInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    processSSESource(elt, value[1]);\n                }\n\n                if ((value[0] === \"swap\")) {\n                    processSSESwap(elt, value[1])\n                }\n            }\n        }\n\n        function processSSESource(elt, sseSrc) {\n            var source = htmx.createEventSource(sseSrc);\n            source.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:sseError\", {error:e, source:source});\n                maybeCloseSSESource(elt);\n            };\n            getInternalData(elt).sseEventSource = source;\n        }\n\n        function processSSESwap(elt, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function (event) {\n                    if (maybeCloseSSESource(sseSourceElt)) {\n                        sseEventSource.removeEventListener(sseEventName, sseListener);\n                        return;\n                    }\n\n                    ///////////////////////////\n                    // TODO: merge this code with AJAX and WebSockets code in the future.\n\n                    var response = event.data;\n                    withExtensions(elt, function(extension){\n                        response = extension.transformResponse(response, null, elt);\n                    });\n\n                    var swapSpec = getSwapSpecification(elt)\n                    var target = getTarget(elt)\n                    var settleInfo = makeSettleInfo(elt);\n\n                    selectAndSwap(swapSpec.swapStyle, elt, target, response, settleInfo)\n                    settleImmediately(settleInfo.tasks)\n                    triggerEvent(elt, \"htmx:sseMessage\", event)\n                };\n\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function processSSETrigger(elt, verb, path, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function () {\n                    if (!maybeCloseSSESource(sseSourceElt)) {\n                        if (bodyContains(elt)) {\n                            issueAjaxRequest(verb, path, elt);\n                        } else {\n                            sseEventSource.removeEventListener(sseEventName, sseListener);\n                        }\n                    }\n                };\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function maybeCloseSSESource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).sseEventSource.close();\n                return true;\n            }\n        }\n\n        function hasEventSource(node) {\n            return getInternalData(node).sseEventSource != null;\n        }\n\n        //====================================================================\n\n        function loadImmediately(elt, verb, path, nodeData, delay) {\n            var load = function(){\n                if (!nodeData.loaded) {\n                    nodeData.loaded = true;\n                    issueAjaxRequest(verb, path, elt);\n                }\n            }\n            if (delay) {\n                setTimeout(load, delay);\n            } else {\n                load();\n            }\n        }\n\n        function processVerbs(elt, nodeData, triggerSpecs) {\n            var explicitAction = false;\n            forEach(VERBS, function (verb) {\n                if (hasAttribute(elt,'hx-' + verb)) {\n                    var path = getAttributeValue(elt, 'hx-' + verb);\n                    explicitAction = true;\n                    nodeData.path = path;\n                    nodeData.verb = verb;\n                    triggerSpecs.forEach(function(triggerSpec) {\n                        if (triggerSpec.sseEvent) {\n                            processSSETrigger(elt, verb, path, triggerSpec.sseEvent);\n                        } else if (triggerSpec.trigger === \"revealed\") {\n                            initScrollHandler();\n                            maybeReveal(elt);\n                        } else if (triggerSpec.trigger === \"intersect\") {\n                            var observerOptions = {};\n                            if (triggerSpec.root) {\n                                observerOptions.root = querySelectorExt(triggerSpec.root)\n                            }\n                            if (triggerSpec.threshold) {\n                                observerOptions.threshold = parseFloat(triggerSpec.threshold);\n                            }\n                            var observer = new IntersectionObserver(function (entries) {\n                                for (var i = 0; i < entries.length; i++) {\n                                    var entry = entries[i];\n                                    if (entry.isIntersecting) {\n                                        triggerEvent(elt, \"intersect\");\n                                        break;\n                                    }\n                                }\n                            }, observerOptions);\n                            observer.observe(elt);\n                            addEventListener(elt, verb, path, nodeData, triggerSpec);\n                        } else if (triggerSpec.trigger === \"load\") {\n                            loadImmediately(elt, verb, path, nodeData, triggerSpec.delay);\n                        } else if (triggerSpec.pollInterval) {\n                            nodeData.polling = true;\n                            processPolling(elt, verb, path, triggerSpec);\n                        } else {\n                            addEventListener(elt, verb, path, nodeData, triggerSpec);\n                        }\n                    });\n                }\n            });\n            return explicitAction;\n        }\n\n        function evalScript(script) {\n            if (script.type === \"text/javascript\" || script.type === \"\") {\n                try {\n                    maybeEval(script, function () {\n                        // wtf - https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n                        (1, eval)(script.innerText);\n                    });\n                } catch (e) {\n                    logError(e);\n                }\n            }\n        }\n\n        function processScripts(elt) {\n            if (matches(elt, \"script\")) {\n                evalScript(elt);\n            }\n            forEach(findAll(elt, \"script\"), function (script) {\n                evalScript(script);\n            });\n        }\n\n        function isBoosted() {\n            return document.querySelector(\"[hx-boost], [data-hx-boost]\");\n        }\n\n        function findElementsToProcess(elt) {\n            if (elt.querySelectorAll) {\n                var boostedElts = isBoosted() ? \", a, form\" : \"\";\n                var results = elt.querySelectorAll(VERB_SELECTOR + boostedElts + \", [hx-sse], [data-hx-sse], [hx-ws],\" +\n                    \" [data-hx-ws]\");\n                return results;\n            } else {\n                return [];\n            }\n        }\n\n        function initButtonTracking(form){\n            var maybeSetLastButtonClicked = function(evt){\n                if (matches(evt.target, \"button, input[type='submit']\")) {\n                    var internalData = getInternalData(form);\n                    internalData.lastButtonClicked = evt.target;\n                }\n            };\n\n            // need to handle both click and focus in:\n            //   focusin - in case someone tabs in to a button and hits the space bar\n            //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n\n            form.addEventListener('click', maybeSetLastButtonClicked)\n            form.addEventListener('focusin', maybeSetLastButtonClicked)\n            form.addEventListener('focusout', function(evt){\n                var internalData = getInternalData(form);\n                internalData.lastButtonClicked = null;\n            })\n        }\n\n        function initNode(elt) {\n            if (elt.closest && elt.closest(htmx.config.disableSelector)) {\n                return;\n            }\n            var nodeData = getInternalData(elt);\n            if (!nodeData.initialized) {\n                nodeData.initialized = true;\n                triggerEvent(elt, \"htmx:beforeProcessNode\")\n\n                if (elt.value) {\n                    nodeData.lastValue = elt.value;\n                }\n\n                var triggerSpecs = getTriggerSpecs(elt);\n                var explicitAction = processVerbs(elt, nodeData, triggerSpecs);\n\n                if (!explicitAction && getClosestAttributeValue(elt, \"hx-boost\") === \"true\") {\n                    boostElement(elt, nodeData, triggerSpecs);\n                }\n\n                if (elt.tagName === \"FORM\") {\n                    initButtonTracking(elt);\n                }\n\n                var sseInfo = getAttributeValue(elt, 'hx-sse');\n                if (sseInfo) {\n                    processSSEInfo(elt, nodeData, sseInfo);\n                }\n\n                var wsInfo = getAttributeValue(elt, 'hx-ws');\n                if (wsInfo) {\n                    processWebSocketInfo(elt, nodeData, wsInfo);\n                }\n                triggerEvent(elt, \"htmx:afterProcessNode\");\n            }\n        }\n\n        function processNode(elt) {\n            elt = resolveTarget(elt);\n            initNode(elt);\n            forEach(findElementsToProcess(elt), function(child) { initNode(child) });\n        }\n\n        //====================================================================\n        // Event/Log Support\n        //====================================================================\n\n        function kebabEventName(str) {\n            return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n        }\n\n        function makeEvent(eventName, detail) {\n            var evt;\n            if (window.CustomEvent && typeof window.CustomEvent === 'function') {\n                evt = new CustomEvent(eventName, {bubbles: true, cancelable: true, detail: detail});\n            } else {\n                evt = getDocument().createEvent('CustomEvent');\n                evt.initCustomEvent(eventName, true, true, detail);\n            }\n            return evt;\n        }\n\n        function triggerErrorEvent(elt, eventName, detail) {\n            triggerEvent(elt, eventName, mergeObjects({error:eventName}, detail));\n        }\n\n        function ignoreEventForLogging(eventName) {\n            return eventName === \"htmx:afterProcessNode\"\n        }\n\n        function withExtensions(elt, toDo) {\n            forEach(getExtensions(elt), function(extension){\n                try {\n                    toDo(extension);\n                } catch (e) {\n                    logError(e);\n                }\n            });\n        }\n\n        function logError(msg) {\n            if(console.error) {\n                console.error(msg);\n            } else if (console.log) {\n                console.log(\"ERROR: \", msg);\n            }\n        }\n\n        function triggerEvent(elt, eventName, detail) {\n            elt = resolveTarget(elt);\n            if (detail == null) {\n                detail = {};\n            }\n            detail[\"elt\"] = elt;\n            var event = makeEvent(eventName, detail);\n            if (htmx.logger && !ignoreEventForLogging(eventName)) {\n                htmx.logger(elt, eventName, detail);\n            }\n            if (detail.error) {\n                logError(detail.error);\n                triggerEvent(elt, \"htmx:error\", {errorInfo:detail})\n            }\n            var eventResult = elt.dispatchEvent(event);\n            var kebabName = kebabEventName(eventName);\n            if (eventResult && kebabName !== eventName) {\n                var kebabedEvent = makeEvent(kebabName, event.detail);\n                eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n            }\n            withExtensions(elt, function (extension) {\n                eventResult = eventResult && (extension.onEvent(eventName, event) !== false)\n            });\n            return eventResult;\n        }\n\n        //====================================================================\n        // History Support\n        //====================================================================\n        var currentPathForHistory = null;\n\n        function getHistoryElement() {\n            var historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]');\n            return historyElt || getDocument().body;\n        }\n\n        function saveToHistoryCache(url, content, title, scroll) {\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    historyCache.splice(i, 1);\n                    break;\n                }\n            }\n            historyCache.push({url:url, content: content, title:title, scroll:scroll})\n            while (historyCache.length > htmx.config.historyCacheSize) {\n                historyCache.shift();\n            }\n            while(historyCache.length > 0){\n                try {\n                    localStorage.setItem(\"htmx-history-cache\", JSON.stringify(historyCache));\n                    break;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheError\", {cause:e, cache: historyCache})\n                    historyCache.shift(); // shrink the cache and retry\n                }\n            }\n        }\n\n        function getCachedHistory(url) {\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    return historyCache[i];\n                }\n            }\n            return null;\n        }\n\n        function cleanInnerHtmlForHistory(elt) {\n            var className = htmx.config.requestClass;\n            var clone = elt.cloneNode(true);\n            forEach(findAll(clone, \".\" + className), function(child){\n                removeClassFromElement(child, className);\n            });\n            return clone.innerHTML;\n        }\n\n        function saveHistory() {\n            var elt = getHistoryElement();\n            var path = currentPathForHistory || location.pathname+location.search;\n            triggerEvent(getDocument().body, \"htmx:beforeHistorySave\", {path:path, historyElt:elt});\n            if(htmx.config.historyEnabled) history.replaceState({htmx:true}, getDocument().title, window.location.href);\n            saveToHistoryCache(path, cleanInnerHtmlForHistory(elt), getDocument().title, window.scrollY);\n        }\n\n        function pushUrlIntoHistory(path) {\n            if(htmx.config.historyEnabled)  history.pushState({htmx:true}, \"\", path);\n            currentPathForHistory = path;\n        }\n\n        function settleImmediately(tasks) {\n            forEach(tasks, function (task) {\n                task.call();\n            });\n        }\n\n        function loadHistoryFromServer(path) {\n            var request = new XMLHttpRequest();\n            var details = {path: path, xhr:request};\n            triggerEvent(getDocument().body, \"htmx:historyCacheMiss\", details);\n            request.open('GET', path, true);\n            request.setRequestHeader(\"HX-History-Restore-Request\", \"true\");\n            request.onload = function () {\n                if (this.status >= 200 && this.status < 400) {\n                    triggerEvent(getDocument().body, \"htmx:historyCacheMissLoad\", details);\n                    var fragment = makeFragment(this.response);\n                    fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment;\n                    var historyElement = getHistoryElement();\n                    var settleInfo = makeSettleInfo(historyElement);\n                    swapInnerHTML(historyElement, fragment, settleInfo)\n                    settleImmediately(settleInfo.tasks);\n                    currentPathForHistory = path;\n                    triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path});\n                } else {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheMissLoadError\", details);\n                }\n            };\n            request.send();\n        }\n\n        function restoreHistory(path) {\n            saveHistory();\n            path = path || location.pathname+location.search;\n            var cached = getCachedHistory(path);\n            if (cached) {\n                var fragment = makeFragment(cached.content);\n                var historyElement = getHistoryElement();\n                var settleInfo = makeSettleInfo(historyElement);\n                swapInnerHTML(historyElement, fragment, settleInfo)\n                settleImmediately(settleInfo.tasks);\n                document.title = cached.title;\n                window.scrollTo(0, cached.scroll);\n                currentPathForHistory = path;\n                triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path});\n            } else {\n                if (htmx.config.refreshOnHistoryMiss) {\n                    window.location.reload(true);\n                } else {\n                    loadHistoryFromServer(path);\n                }\n            }\n        }\n\n        function shouldPush(elt) {\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            return (pushUrl && pushUrl !== \"false\") ||\n                (getInternalData(elt).boosted && getInternalData(elt).pushURL);\n        }\n\n        function getPushUrl(elt) {\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            return (pushUrl === \"true\" || pushUrl === \"false\") ? null : pushUrl;\n        }\n\n        function addRequestIndicatorClasses(elt) {\n            var indicator = getClosestAttributeValue(elt, 'hx-indicator');\n            if (indicator) {\n                var indicators = querySelectorAllExt(elt, indicator);\n            } else {\n                indicators = [elt];\n            }\n            forEach(indicators, function (ic) {\n                ic.classList[\"add\"].call(ic.classList, htmx.config.requestClass);\n            });\n            return indicators;\n        }\n\n        function removeRequestIndicatorClasses(indicators) {\n            forEach(indicators, function (ic) {\n                ic.classList[\"remove\"].call(ic.classList, htmx.config.requestClass);\n            });\n        }\n\n        //====================================================================\n        // Input Value Processing\n        //====================================================================\n\n        function haveSeenNode(processed, elt) {\n            for (var i = 0; i < processed.length; i++) {\n                var node = processed[i];\n                if (node.isSameNode(elt)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function shouldInclude(elt) {\n            if(elt.name === \"\" || elt.name == null || elt.disabled) {\n                return false;\n            }\n            // ignore \"submitter\" types (see jQuery src/serialize.js)\n            if (elt.type === \"button\" || elt.type === \"submit\" || elt.tagName === \"image\" || elt.tagName === \"reset\" || elt.tagName === \"file\" ) {\n                return false;\n            }\n            if (elt.type === \"checkbox\" || elt.type === \"radio\" ) {\n                return elt.checked;\n            }\n            return true;\n        }\n\n        function processInputValue(processed, values, errors, elt, validate) {\n            if (elt == null || haveSeenNode(processed, elt)) {\n                return;\n            } else {\n                processed.push(elt);\n            }\n            if (shouldInclude(elt)) {\n                var name = getRawAttribute(elt,\"name\");\n                var value = elt.value;\n                if (elt.multiple) {\n                    value = toArray(elt.querySelectorAll(\"option:checked\")).map(function (e) { return e.value });\n                }\n                // include file inputs\n                if (elt.files) {\n                    value = toArray(elt.files);\n                }\n                // This is a little ugly because both the current value of the named value in the form\n                // and the new value could be arrays, so we have to handle all four cases :/\n                if (name != null && value != null) {\n                    var current = values[name];\n                    if(current) {\n                        if (Array.isArray(current)) {\n                            if (Array.isArray(value)) {\n                                values[name] = current.concat(value);\n                            } else {\n                                current.push(value);\n                            }\n                        } else {\n                            if (Array.isArray(value)) {\n                                values[name] = [current].concat(value);\n                            } else {\n                                values[name] = [current, value];\n                            }\n                        }\n                    } else {\n                        values[name] = value;\n                    }\n                }\n                if (validate) {\n                    validateElement(elt, errors);\n                }\n            }\n            if (matches(elt, 'form')) {\n                var inputs = elt.elements;\n                forEach(inputs, function(input) {\n                    processInputValue(processed, values, errors, input, validate);\n                });\n            }\n        }\n\n        function validateElement(element, errors) {\n            if (element.willValidate) {\n                triggerEvent(element, \"htmx:validation:validate\")\n                if (!element.checkValidity()) {\n                    errors.push({elt: element, message:element.validationMessage, validity:element.validity});\n                    triggerEvent(element, \"htmx:validation:failed\", {message:element.validationMessage, validity:element.validity})\n                }\n            }\n        }\n\n        function getInputValues(elt, verb) {\n            var processed = [];\n            var values = {};\n            var formValues = {};\n            var errors = [];\n\n            // only validate when form is directly submitted and novalidate is not set\n            var validate = matches(elt, 'form') && elt.noValidate !== true;\n\n            // for a non-GET include the closest form\n            if (verb !== 'get') {\n                processInputValue(processed, formValues, errors, closest(elt, 'form'), validate);\n            }\n\n            // include the element itself\n            processInputValue(processed, values, errors, elt, validate);\n\n            // if a button or submit was clicked last, include its value\n            var internalData = getInternalData(elt);\n            if (internalData.lastButtonClicked) {\n                var name = getRawAttribute(internalData.lastButtonClicked,\"name\");\n                if (name) {\n                    values[name] = internalData.lastButtonClicked.value;\n                }\n            }\n\n            // include any explicit includes\n            var includes = getClosestAttributeValue(elt, \"hx-include\");\n            if (includes) {\n                var nodes = querySelectorAllExt(elt, includes);\n                forEach(nodes, function(node) {\n                    processInputValue(processed, values, errors, node, validate);\n                    // if a non-form is included, include any input values within it\n                    if (!matches(node, 'form')) {\n                        forEach(node.querySelectorAll(INPUT_SELECTOR), function (descendant) {\n                            processInputValue(processed, values, errors, descendant, validate);\n                        })\n                    }\n                });\n            }\n\n            // form values take precedence, overriding the regular values\n            values = mergeObjects(values, formValues);\n\n            return {errors:errors, values:values};\n        }\n\n        function appendParam(returnStr, name, realValue) {\n            if (returnStr !== \"\") {\n                returnStr += \"&\";\n            }\n            returnStr += encodeURIComponent(name) + \"=\" + encodeURIComponent(realValue);\n            return returnStr;\n        }\n\n        function urlEncode(values) {\n            var returnStr = \"\";\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            returnStr = appendParam(returnStr, name, v);\n                        });\n                    } else {\n                        returnStr = appendParam(returnStr, name, value);\n                    }\n                }\n            }\n            return returnStr;\n        }\n\n        function makeFormData(values) {\n            var formData = new FormData();\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            formData.append(name, v);\n                        });\n                    } else {\n                        formData.append(name, value);\n                    }\n                }\n            }\n            return formData;\n        }\n\n        //====================================================================\n        // Ajax\n        //====================================================================\n\n        function getHeaders(elt, target, prompt) {\n            var headers = {\n                \"HX-Request\" : \"true\",\n                \"HX-Trigger\" : getRawAttribute(elt, \"id\"),\n                \"HX-Trigger-Name\" : getRawAttribute(elt, \"name\"),\n                \"HX-Target\" : getAttributeValue(target, \"id\"),\n                \"HX-Current-URL\" : getDocument().location.href,\n            }\n            getValuesForElement(elt, \"hx-headers\", false, headers)\n            if (prompt !== undefined) {\n                headers[\"HX-Prompt\"] = prompt;\n            }\n            return headers;\n        }\n\n        function filterValues(inputValues, elt) {\n            var paramsValue = getClosestAttributeValue(elt, \"hx-params\");\n            if (paramsValue) {\n                if (paramsValue === \"none\") {\n                    return {};\n                } else if (paramsValue === \"*\") {\n                    return inputValues;\n                } else if(paramsValue.indexOf(\"not \") === 0) {\n                    forEach(paramsValue.substr(4).split(\",\"), function (name) {\n                        name = name.trim();\n                        delete inputValues[name];\n                    });\n                    return inputValues;\n                } else {\n                    var newValues = {}\n                    forEach(paramsValue.split(\",\"), function (name) {\n                        name = name.trim();\n                        newValues[name] = inputValues[name];\n                    });\n                    return newValues;\n                }\n            } else {\n                return inputValues;\n            }\n        }\n\n        function isAnchorLink(elt) {\n          return getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf(\"#\") >=0\n        }\n\n        function getSwapSpecification(elt) {\n            var swapInfo = getClosestAttributeValue(elt, \"hx-swap\");\n            var swapSpec = {\n                \"swapStyle\" : getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n                \"swapDelay\" : htmx.config.defaultSwapDelay,\n                \"settleDelay\" : htmx.config.defaultSettleDelay\n            }\n            if (getInternalData(elt).boosted && !isAnchorLink(elt)) {\n              swapSpec[\"show\"] = \"top\"\n            }\n            if (swapInfo) {\n                var split = splitOnWhitespace(swapInfo);\n                if (split.length > 0) {\n                    swapSpec[\"swapStyle\"] = split[0];\n                    for (var i = 1; i < split.length; i++) {\n                        var modifier = split[i];\n                        if (modifier.indexOf(\"swap:\") === 0) {\n                            swapSpec[\"swapDelay\"] = parseInterval(modifier.substr(5));\n                        }\n                        if (modifier.indexOf(\"settle:\") === 0) {\n                            swapSpec[\"settleDelay\"] = parseInterval(modifier.substr(7));\n                        }\n                        if (modifier.indexOf(\"scroll:\") === 0) {\n                            var scrollSpec = modifier.substr(7);\n                            var splitSpec = scrollSpec.split(\":\");\n                            var scrollVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"scroll\"] = scrollVal;\n                            swapSpec[\"scrollTarget\"] = selectorVal;\n                        }\n                        if (modifier.indexOf(\"show:\") === 0) {\n                            var showSpec = modifier.substr(5);\n                            var splitSpec = showSpec.split(\":\");\n                            var showVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"show\"] = showVal;\n                            swapSpec[\"showTarget\"] = selectorVal;\n                        }\n                    }\n                }\n            }\n            return swapSpec;\n        }\n\n        function encodeParamsForBody(xhr, elt, filteredParameters) {\n            var encodedParameters = null;\n            withExtensions(elt, function (extension) {\n                if (encodedParameters == null) {\n                    encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt);\n                }\n            });\n            if (encodedParameters != null) {\n                return encodedParameters;\n            } else {\n                if (getClosestAttributeValue(elt, \"hx-encoding\") === \"multipart/form-data\") {\n                    return makeFormData(filteredParameters);\n                } else {\n                    return urlEncode(filteredParameters);\n                }\n            }\n        }\n\n        function makeSettleInfo(target) {\n            return {tasks: [], elts: [target]};\n        }\n\n        function updateScrollState(content, swapSpec) {\n            var first = content[0];\n            var last = content[content.length - 1];\n            if (swapSpec.scroll) {\n                var target = null;\n                if (swapSpec.scrollTarget) {\n                    target = querySelectorExt(first, swapSpec.scrollTarget);\n                }\n                if (swapSpec.scroll === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollTop = 0;\n                }\n                if (swapSpec.scroll === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollTop = target.scrollHeight;\n                }\n            }\n            if (swapSpec.show) {\n                var target = null;\n                if (swapSpec.showTarget) {\n                    var targetStr = swapSpec.showTarget;\n                    if (swapSpec.showTarget === \"window\") {\n                        targetStr = \"body\";\n                    }\n                    target = querySelectorExt(first, targetStr);\n                }\n                if (swapSpec.show === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollIntoView({block:'start', behavior: htmx.config.scrollBehavior});\n                }\n                if (swapSpec.show === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollIntoView({block:'end', behavior: htmx.config.scrollBehavior});\n                }\n            }\n        }\n\n        function getValuesForElement(elt, attr, evalAsDefault, values) {\n            if (values == null) {\n                values = {};\n            }\n            if (elt == null) {\n                return values;\n            }\n            var attributeValue = getAttributeValue(elt, attr);\n            if (attributeValue) {\n                var str = attributeValue.trim();\n                var evaluateValue = evalAsDefault;\n                if (str.indexOf(\"javascript:\") === 0) {\n                    str = str.substr(11);\n                    evaluateValue = true;\n                } else if (str.indexOf(\"js:\") === 0) {\n                    str = str.substr(3);\n                    evaluateValue = true;\n                }\n                if (str.indexOf('{') !== 0) {\n                    str = \"{\" + str + \"}\";\n                }\n                var varsValues;\n                if (evaluateValue) {\n                    varsValues = maybeEval(elt,function () {return Function(\"return (\" + str + \")\")();}, {});\n                } else {\n                    varsValues = parseJSON(str);\n                }\n                for (var key in varsValues) {\n                    if (varsValues.hasOwnProperty(key)) {\n                        if (values[key] == null) {\n                            values[key] = varsValues[key];\n                        }\n                    }\n                }\n            }\n            return getValuesForElement(parentElt(elt), attr, evalAsDefault, values);\n        }\n\n        function maybeEval(elt, toEval, defaultVal) {\n            if (htmx.config.allowEval) {\n                return toEval();\n            } else {\n                triggerErrorEvent(elt, 'htmx:evalDisallowedError');\n                return defaultVal;\n            }\n        }\n\n        function getHXVarsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vars\", true, expressionVars);\n        }\n\n        function getHXValsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vals\", false, expressionVars);\n        }\n\n        function getExpressionVars(elt) {\n            return mergeObjects(getHXVarsForElement(elt), getHXValsForElement(elt));\n        }\n\n        function safelySetHeaderValue(xhr, header, headerValue) {\n            if (headerValue !== null) {\n                try {\n                    xhr.setRequestHeader(header, headerValue);\n                } catch (e) {\n                    // On an exception, try to set the header URI encoded instead\n                    xhr.setRequestHeader(header, encodeURIComponent(headerValue));\n                    xhr.setRequestHeader(header + \"-URI-AutoEncoded\", \"true\");\n                }\n            }\n        }\n\n        function getResponseURL(xhr) {\n            // NB: IE11 does not support this stuff\n            if (xhr.responseURL && typeof(URL) !== \"undefined\") {\n                try {\n                    var url = new URL(xhr.responseURL);\n                    return url.pathname + url.search;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:badResponseUrl\", {url: xhr.responseURL});\n                }\n            }\n        }\n\n        function hasHeader(xhr, regexp) {\n            return xhr.getAllResponseHeaders().match(regexp);\n        }\n\n        function ajaxHelper(verb, path, context) {\n            if (context) {\n                if (context instanceof Element || isType(context, 'String')) {\n                    return issueAjaxRequest(verb, path, null, null, {\n                        targetOverride: resolveTarget(context)\n                    });\n                } else {\n                    return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n                        {\n                            handler : context.handler,\n                            headers : context.headers,\n                            values : context.values,\n                            targetOverride: resolveTarget(context.target)\n                        });\n                }\n            } else {\n                return issueAjaxRequest(verb, path);\n            }\n        }\n\n        function hierarchyForElt(elt) {\n            var arr = [];\n            while (elt) {\n                arr.push(elt);\n                elt = elt.parentElement;\n            }\n            return arr;\n        }\n\n        function issueAjaxRequest(verb, path, elt, event, etc) {\n            var resolve = null;\n            var reject = null;\n            etc = etc != null ? etc : {};\n            if(typeof Promise !== \"undefined\"){\n                var promise = new Promise(function (_resolve, _reject) {\n                    resolve = _resolve;\n                    reject = _reject;\n                });\n            }\n            if(elt == null) {\n                elt = getDocument().body;\n            }\n            var responseHandler = etc.handler || handleAjaxResponse;\n\n            if (!bodyContains(elt)) {\n                return; // do not issue requests for elements removed from the DOM\n            }\n            var target = etc.targetOverride || getTarget(elt);\n            if (target == null) {\n                triggerErrorEvent(elt, 'htmx:targetError', {target: getAttributeValue(elt, \"hx-target\")});\n                return;\n            }\n            var eltData = getInternalData(elt);\n            if (eltData.requestInFlight) {\n                var queueStrategy = 'last';\n                if (event) {\n                    var eventData = getInternalData(event);\n                    if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n                        queueStrategy = eventData.triggerSpec.queue;\n                    }\n                }\n                if (eltData.queuedRequests == null) {\n                    eltData.queuedRequests = [];\n                }\n                if (queueStrategy === \"first\" && eltData.queuedRequests.length === 0) {\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                } else if (queueStrategy === \"all\") {\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                } else if (queueStrategy === \"last\") {\n                    eltData.queuedRequests = []; // dump existing queue\n                    eltData.queuedRequests.push(function () {\n                        issueAjaxRequest(verb, path, elt, event)\n                    });\n                }\n                return;\n            } else {\n                eltData.requestInFlight = true;\n            }\n            var endRequestLock = function(){\n                eltData.requestInFlight = false\n                if (eltData.queuedRequests != null &&\n                    eltData.queuedRequests.length > 0) {\n                    var queuedRequest = eltData.queuedRequests.shift();\n                    queuedRequest();\n                }\n            }\n            var promptQuestion = getClosestAttributeValue(elt, \"hx-prompt\");\n            if (promptQuestion) {\n                var promptResponse = prompt(promptQuestion);\n                // prompt returns null if cancelled and empty string if accepted with no entry\n                if (promptResponse === null ||\n                    !triggerEvent(elt, 'htmx:prompt', {prompt: promptResponse, target:target})) {\n                    maybeCall(resolve);\n                    endRequestLock();\n                    return promise;\n                }\n            }\n\n            var confirmQuestion = getClosestAttributeValue(elt, \"hx-confirm\");\n            if (confirmQuestion) {\n                if(!confirm(confirmQuestion)) {\n                    maybeCall(resolve);\n                    endRequestLock()\n                    return promise;\n                }\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            var headers = getHeaders(elt, target, promptResponse);\n            if (etc.headers) {\n                headers = mergeObjects(headers, etc.headers);\n            }\n            var results = getInputValues(elt, verb);\n            var errors = results.errors;\n            var rawParameters = results.values;\n            if (etc.values) {\n                rawParameters = mergeObjects(rawParameters, etc.values);\n            }\n            var expressionVars = getExpressionVars(elt);\n            var allParameters = mergeObjects(rawParameters, expressionVars);\n            var filteredParameters = filterValues(allParameters, elt);\n\n            if (verb !== 'get' && getClosestAttributeValue(elt, \"hx-encoding\") == null) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n            }\n\n            // behavior of anchors w/ empty href is to use the current URL\n            if (path == null || path === \"\") {\n                path = getDocument().location.href;\n            }\n\n            var requestAttrValues = getValuesForElement(elt, 'hx-request');\n\n            var requestConfig = {\n                parameters: filteredParameters,\n                unfilteredParameters: allParameters,\n                headers:headers,\n                target:target,\n                verb:verb,\n                errors:errors,\n                withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n                timeout:  etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n                path:path,\n                triggeringEvent:event\n            };\n\n            if(!triggerEvent(elt, 'htmx:configRequest', requestConfig)){\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            // copy out in case the object was overwritten\n            path = requestConfig.path;\n            verb = requestConfig.verb;\n            headers = requestConfig.headers;\n            filteredParameters = requestConfig.parameters;\n            errors = requestConfig.errors;\n\n            if(errors && errors.length > 0){\n                triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            var splitPath = path.split(\"#\");\n            var pathNoAnchor = splitPath[0];\n            var anchor = splitPath[1];\n            if (verb === 'get') {\n                var finalPathForGet = pathNoAnchor;\n                var values = Object.keys(filteredParameters).length !== 0;\n                if (values) {\n                    if (finalPathForGet.indexOf(\"?\") < 0) {\n                        finalPathForGet += \"?\";\n                    } else {\n                        finalPathForGet += \"&\";\n                    }\n                    finalPathForGet += urlEncode(filteredParameters);\n                    if (anchor) {\n                        finalPathForGet += \"#\" + anchor;\n                    }\n                }\n                xhr.open('GET', finalPathForGet, true);\n            } else {\n                xhr.open(verb.toUpperCase(), path, true);\n            }\n\n            xhr.overrideMimeType(\"text/html\");\n            xhr.withCredentials = requestConfig.withCredentials;\n            xhr.timeout = requestConfig.timeout;\n\n            // request headers\n            if (requestAttrValues.noHeaders) {\n                // ignore all headers\n            } else {\n                for (var header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        var headerValue = headers[header];\n                        safelySetHeaderValue(xhr, header, headerValue);\n                    }\n                }\n            }\n\n            var responseInfo = {xhr: xhr, target: target, requestConfig: requestConfig, pathInfo:{\n                  path:path, finalPath:finalPathForGet, anchor:anchor\n                }\n            };\n\n            xhr.onload = function () {\n                try {\n                    var hierarchy = hierarchyForElt(elt);\n                    responseHandler(elt, responseInfo);\n                    removeRequestIndicatorClasses(indicators);\n                    triggerEvent(elt, 'htmx:afterRequest', responseInfo);\n                    triggerEvent(elt, 'htmx:afterOnLoad', responseInfo);\n                    // if the body no longer contains the element, trigger the even on the closest parent\n                    // remaining in the DOM\n                    if (!bodyContains(elt)) {\n                        var secondaryTriggerElt = null;\n                        while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n                            var parentEltInHierarchy = hierarchy.shift();\n                            if (bodyContains(parentEltInHierarchy)) {\n                                secondaryTriggerElt = parentEltInHierarchy;\n                            }\n                        }\n                        if (secondaryTriggerElt) {\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo);\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo);\n                        }\n                    }\n                    maybeCall(resolve);\n                    endRequestLock();\n                } catch (e) {\n                    triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({error:e}, responseInfo));\n                    throw e;\n                }\n            }\n            xhr.onerror = function () {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendError', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.onabort = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.ontimeout = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:timeout', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            if(!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)){\n                maybeCall(resolve);\n                endRequestLock()\n                return promise\n            }\n            var indicators = addRequestIndicatorClasses(elt);\n\n            forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n                forEach([xhr, xhr.upload], function (target) {\n                    target.addEventListener(eventName, function(event){\n                        triggerEvent(elt, \"htmx:xhr:\" + eventName, {\n                            lengthComputable:event.lengthComputable,\n                            loaded:event.loaded,\n                            total:event.total\n                        });\n                    })\n                });\n            });\n            triggerEvent(elt, 'htmx:beforeSend', responseInfo);\n            xhr.send(verb === 'get' ? null : encodeParamsForBody(xhr, elt, filteredParameters));\n            return promise;\n        }\n\n        function handleAjaxResponse(elt, responseInfo) {\n            var xhr = responseInfo.xhr;\n            var target = responseInfo.target;\n\n            if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return;\n\n            if (hasHeader(xhr, /HX-Trigger:/i)) {\n                handleTrigger(xhr, \"HX-Trigger\", elt);\n            }\n\n            if (hasHeader(xhr,/HX-Push:/i)) {\n                var pushedUrl = xhr.getResponseHeader(\"HX-Push\");\n            }\n\n            if (hasHeader(xhr, /HX-Redirect:/i)) {\n                window.location.href = xhr.getResponseHeader(\"HX-Redirect\");\n                return;\n            }\n\n            if (hasHeader(xhr,/HX-Refresh:/i)) {\n                if (\"true\" === xhr.getResponseHeader(\"HX-Refresh\")) {\n                    location.reload();\n                    return;\n                }\n            }\n\n            var shouldSaveHistory = shouldPush(elt) || pushedUrl;\n\n            if (xhr.status >= 200 && xhr.status < 400) {\n                if (xhr.status === 286) {\n                    cancelPolling(elt);\n                }\n                // don't process 'No Content'\n                if (xhr.status !== 204) {\n                    if (!triggerEvent(target, 'htmx:beforeSwap', responseInfo)) return;\n\n                    var serverResponse = xhr.response;\n                    withExtensions(elt, function(extension){\n                        serverResponse = extension.transformResponse(serverResponse, xhr, elt);\n                    });\n\n                    // Save current page\n                    if (shouldSaveHistory) {\n                        saveHistory();\n                    }\n\n                    var swapSpec = getSwapSpecification(elt);\n\n                    target.classList.add(htmx.config.swappingClass);\n                    var doSwap = function () {\n                        try {\n\n                            var activeElt = document.activeElement;\n                            var selectionInfo = {};\n                            try {\n                                selectionInfo = {\n                                    elt: activeElt,\n                                    start: activeElt ? activeElt.selectionStart : null,\n                                    end: activeElt ? activeElt.selectionEnd : null\n                                };\n                            } catch (e) {\n                                 // safari issue - see https://github.com/microsoft/playwright/issues/5894\n                            }\n\n                            var settleInfo = makeSettleInfo(target);\n                            selectAndSwap(swapSpec.swapStyle, target, elt, serverResponse, settleInfo);\n\n                            if (selectionInfo.elt &&\n                                !bodyContains(selectionInfo.elt) &&\n                                selectionInfo.elt.id) {\n                                var newActiveElt = document.getElementById(selectionInfo.elt.id);\n                                if (newActiveElt) {\n                                    if (selectionInfo.start && newActiveElt.setSelectionRange) {\n                                        newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end);\n                                    }\n                                    newActiveElt.focus();\n                                }\n                            }\n\n                            target.classList.remove(htmx.config.swappingClass);\n                            forEach(settleInfo.elts, function (elt) {\n                                if (elt.classList) {\n                                    elt.classList.add(htmx.config.settlingClass);\n                                }\n                                triggerEvent(elt, 'htmx:afterSwap', responseInfo);\n                            });\n                            if (responseInfo.pathInfo.anchor) {\n                                location.hash = responseInfo.pathInfo.anchor;\n                            }\n\n                            if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                                var finalElt = elt;\n                                if (!bodyContains(elt)) {\n                                    finalElt = getDocument().body;\n                                }\n                                handleTrigger(xhr, \"HX-Trigger-After-Swap\", finalElt);\n                            }\n\n                            var doSettle = function(){\n                                forEach(settleInfo.tasks, function (task) {\n                                    task.call();\n                                });\n                                forEach(settleInfo.elts, function (elt) {\n                                    if (elt.classList) {\n                                        elt.classList.remove(htmx.config.settlingClass);\n                                    }\n                                    triggerEvent(elt, 'htmx:afterSettle', responseInfo);\n                                });\n                                // push URL and save new page\n                                if (shouldSaveHistory) {\n                                    var pathToPush = pushedUrl || getPushUrl(elt) || getResponseURL(xhr) || responseInfo.pathInfo.finalPath || responseInfo.pathInfo.path;\n                                    pushUrlIntoHistory(pathToPush);\n                                    triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', {path:pathToPush});\n                                }\n                                updateScrollState(settleInfo.elts, swapSpec);\n\n                                if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                                    var finalElt = elt;\n                                    if (!bodyContains(elt)) {\n                                        finalElt = getDocument().body;\n                                    }\n                                    handleTrigger(xhr, \"HX-Trigger-After-Settle\", finalElt);\n                                }\n                            }\n\n                            if (swapSpec.settleDelay > 0) {\n                                setTimeout(doSettle, swapSpec.settleDelay)\n                            } else {\n                                doSettle();\n                            }\n                        } catch (e) {\n                            triggerErrorEvent(elt, 'htmx:swapError', responseInfo);\n                            throw e;\n                        }\n                    };\n\n                    if (swapSpec.swapDelay > 0) {\n                        setTimeout(doSwap, swapSpec.swapDelay)\n                    } else {\n                        doSwap();\n                    }\n                }\n            } else {\n                triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({error: \"Response Status Error Code \" + xhr.status + \" from \" + responseInfo.pathInfo.path}, responseInfo));\n            }\n        }\n\n        //====================================================================\n        // Extensions API\n        //====================================================================\n        var extensions = {};\n        function extensionBase() {\n            return {\n                onEvent : function(name, evt) {return true;},\n                transformResponse : function(text, xhr, elt) {return text;},\n                isInlineSwap : function(swapStyle) {return false;},\n                handleSwap : function(swapStyle, target, fragment, settleInfo) {return false;},\n                encodeParameters : function(xhr, parameters, elt) {return null;}\n            }\n        }\n\n        function defineExtension(name, extension) {\n            extensions[name] = mergeObjects(extensionBase(), extension);\n        }\n\n        function removeExtension(name) {\n            delete extensions[name];\n        }\n\n        function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n            if (elt == undefined) {\n                return extensionsToReturn;\n            }\n            if (extensionsToReturn == undefined) {\n                extensionsToReturn = [];\n            }\n            if (extensionsToIgnore == undefined) {\n                extensionsToIgnore = [];\n            }\n            var extensionsForElement = getAttributeValue(elt, \"hx-ext\");\n            if (extensionsForElement) {\n                forEach(extensionsForElement.split(\",\"), function(extensionName){\n                    extensionName = extensionName.replace(/ /g, '');\n                    if (extensionName.slice(0, 7) == \"ignore:\") {\n                        extensionsToIgnore.push(extensionName.slice(7));\n                        return;\n                    }\n                    if (extensionsToIgnore.indexOf(extensionName) < 0) {\n                        var extension = extensions[extensionName];\n                        if (extension && extensionsToReturn.indexOf(extension) < 0) {\n                            extensionsToReturn.push(extension);\n                        }\n                    }\n                });\n            }\n            return getExtensions(parentElt(elt), extensionsToReturn, extensionsToIgnore);\n        }\n\n        //====================================================================\n        // Initialization\n        //====================================================================\n\n        function ready(fn) {\n            if (getDocument().readyState !== 'loading') {\n                fn();\n            } else {\n                getDocument().addEventListener('DOMContentLoaded', fn);\n            }\n        }\n\n        function insertIndicatorStyles() {\n            if (htmx.config.includeIndicatorStyles !== false) {\n                getDocument().head.insertAdjacentHTML(\"beforeend\",\n                    \"<style>\\\n                      .\" + htmx.config.indicatorClass + \"{opacity:0;transition: opacity 200ms ease-in;}\\\n                      .\" + htmx.config.requestClass + \" .\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                      .\" + htmx.config.requestClass + \".\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                    </style>\");\n            }\n        }\n\n        function getMetaConfig() {\n            var element = getDocument().querySelector('meta[name=\"htmx-config\"]');\n            if (element) {\n                return parseJSON(element.content);\n            } else {\n                return null;\n            }\n        }\n\n        function mergeMetaConfig() {\n            var metaConfig = getMetaConfig();\n            if (metaConfig) {\n                htmx.config = mergeObjects(htmx.config , metaConfig)\n            }\n        }\n\n        // initialize the document\n        ready(function () {\n            mergeMetaConfig();\n            insertIndicatorStyles();\n            var body = getDocument().body;\n            processNode(body);\n            window.onpopstate = function (event) {\n                if (event.state && event.state.htmx) {\n                    restoreHistory();\n                }\n            };\n            setTimeout(function () {\n                triggerEvent(body, 'htmx:load', {}); // give ready handlers a chance to load up before firing this event\n            }, 0);\n        })\n\n        return htmx;\n    }\n)()\n}));\n"]}