new Vue({el:"#main",delimiters:["[[","]]"],data:function data(){return{loading:!1,indexTimeout:null,jobs:[],totalJobs:null,totalJobsFormatted:null,activeJobId:null,activeJob:null,limit:50}},mounted:function mounted(){var _this=this;document.getElementById("queue-manager-utility").removeAttribute("class"),Craft.cp.on("setJobInfo",(function(){_this.jobs=Craft.cp.jobInfo.slice(0),_this.totalJobs=Craft.cp.totalJobs,_this.totalJobsFormatted=Craft.formatNumber(_this.totalJobs),_this.loading||_this.refreshActiveJob()})),window.onpopstate=function(event){event.state&&event.state.jobId?_this.setActiveJob(event.state.jobId,!1):_this.clearActiveJob(!1)};var m=Craft.path.match(/utilities\/queue-manager\/([^\/]+)/);if(m){var jobId=m[1];history.replaceState({jobId:jobId},"",this.url(jobId)),this.setActiveJob(jobId,!1)}},methods:{updateJobProgress:function updateJobProgress(){Craft.cp.trackJobProgress(!1,!0)},setActiveJob:function setActiveJob(jobId,pushState){var _this2=this;return new Promise((function(resolve,reject){window.clearTimeout(_this2.indexTimeout),_this2.loading=!0,_this2.activeJobId=jobId,pushState&&history.pushState({jobId:jobId},"",_this2.url(jobId)),axios.get(Craft.getActionUrl("queue/get-job-details?id="+jobId,{})).then((function(response){response.data.id==_this2.activeJobId?(_this2.activeJob=response.data,_this2.loading=!1,resolve(!0)):resolve(!1)}),(function(response){Craft.cp.displayError(response.response.data.error),reject(response)}))}))},refreshActiveJob:function refreshActiveJob(){var _this3=this;return new Promise((function(resolve,reject){if(_this3.activeJobId){var oldJob=_this3.activeJob;_this3.setActiveJob(_this3.activeJobId,!1).then((function(success){success&&oldJob&&3==_this3.activeJob.status&&($.extend(oldJob,{progress:100,status:3}),delete oldJob.error,delete oldJob.progressLabel,_this3.activeJob=oldJob),resolve(success)})).catch(reject)}else resolve(!1)}))},retryAll:function retryAll(){var _this4=this;return new Promise((function(resolve,reject){window.clearTimeout(_this4.indexTimeout),_this4.postActionRequest("queue/retry-all").then((function(response){Craft.cp.displayNotice(Craft.t("app","Retrying all failed jobs.")),_this4.updateJobProgress(),resolve()})).catch(reject)}))},releaseAll:function releaseAll(){var _this5=this;return new Promise((function(resolve,reject){confirm(Craft.t("app","Are you sure you want to release all jobs in the queue?"))?_this5.postActionRequest("queue/release-all").then((function(response){Craft.cp.displayNotice(Craft.t("app","All jobs released.")),_this5.clearActiveJob(!0),_this5.updateJobProgress(),resolve(!0)})).catch(reject):resolve(!1)}))},retryJob:function retryJob(job){var _this6=this;return new Promise((function(resolve,reject){if(2==job.status){var message=Craft.t("app","Are you sure you want to restart the job “{description}”? Any progress could be lost.",{description:job.description});if(!confirm(message))return void resolve(!1)}window.clearTimeout(_this6.indexTimeout),_this6.postActionRequest("queue/retry",{id:job.id}).then((function(response){2==job.status?Craft.cp.displayNotice(Craft.t("app","Job restarted.")):Craft.cp.displayNotice(Craft.t("app","Job retried.")),_this6.updateJobProgress(),resolve(!0)})).catch(reject)}))},retryActiveJob:function retryActiveJob(){var _this7=this;return new Promise((function(resolve,reject){_this7.retryJob(_this7.activeJob).then(resolve).catch(reject)}))},releaseJob:function releaseJob(job){var _this8=this;return new Promise((function(resolve,reject){var message=Craft.t("app","Are you sure you want to release the job “{description}”?",{description:job.description});confirm(message)?_this8.postActionRequest("queue/release",{id:job.id}).then((function(response){Craft.cp.displayNotice(Craft.t("app","Job released.")),_this8.updateJobProgress(),resolve(!0)})):resolve(!1)}))},releaseActiveJob:function releaseActiveJob(){var _this9=this;return new Promise((function(resolve,reject){_this9.releaseJob(_this9.activeJob).then((function(released){released&&_this9.clearActiveJob(!0),resolve(released)})).catch(reject)}))},clearActiveJob:function clearActiveJob(pushState){this.activeJob&&(this.activeJob=null,this.activeJobId=null,pushState&&history.pushState({},"",this.url()))},url:function url(jobId){return Craft.getUrl("utilities/queue-manager"+(jobId?"/"+jobId:""))},isRetryable:function isRetryable(job){return 2==job.status||4==job.status},jobStatusClass:function jobStatusClass(status){return 4==status?"error":""},jobStatusLabel:function jobStatusLabel(status,delay){if(delay)return Craft.t("app","Delayed");switch(status){case 1:return Craft.t("app","Pending");case 2:return Craft.t("app","Reserved");case 3:return Craft.t("app","Finished");case 4:return Craft.t("app","Failed");default:return""}},jobStatusIconClass:function jobStatusIconClass(status){var c="status";switch(status){case 1:c+=" orange";break;case 2:c+=" green";break;case 4:c+=" red"}return c},jobAttributeName:function jobAttributeName(name){switch(name){case"id":return Craft.t("app","ID");case"status":return Craft.t("app","Status");case"progress":return Craft.t("app","Progress");case"description":return Craft.t("app","Description");case"ttr":return Craft.t("app","Time to reserve");case"error":return Craft.t("app","Error");default:return name}},ttrValue:function ttrValue(value){return Craft.t("app","{num, number} {num, plural, =1{second} other{seconds}}",{num:value})},postActionRequest:function postActionRequest(action,params){return new Promise((function(resolve,reject){Craft.postActionRequest(action,params,(function(response,textStatus){"success"===textStatus?resolve(response):reject()}))}))}}});
//# sourceMappingURL=queue-manager.min.js.map