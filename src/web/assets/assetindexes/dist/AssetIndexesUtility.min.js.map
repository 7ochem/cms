{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./AssetIndexesUtility.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","$","jQuery","Craft","AssetIndexesUtility","Garnish","Base","extend","$trigger","$form","totalActions","completedActions","loadingActions","queue","cacheImages","sessionId","init","formId","this","$status","addListener","onSubmit","ev","preventDefault","hasClass","progressBar","resetProgressBar","ProgressBar","$progressBar","removeClass","$progressBarStatus","velocity","opacity","complete","postData","getPostData","params","expandPostArray","start","postActionRequest","response","indexingData","volumes","length","volumeData","requestCounter","total","push","process","volumeId","processIndexing","finishIndexing","$allDone","css","addClass","trigger","updateProgressBar","setItemCount","setProcessedItemCount","maxConcurrentActions","shift","error","alert","showConfirmDialog","data","$modal","appendTo","$bod","$body","html","confirm","$footer","$buttons","showDelete","$cancelBtn","type","class","text","modal","hide","onComplete","initUiElements","Modal","hideOnEsc","hideOnShadeClick","settings","onHide","noop","finish","overview","hideProgressBar","duration"],"mappings":"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","file":"AssetIndexesUtility.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    Craft.AssetIndexesUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        totalActions: null,\n        completedActions: null,\n        loadingActions: null,\n        queue: null,\n\n        cacheImages: false,\n        sessionId: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status, true);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.totalActions = 0;\n                this.loadingActions = 0;\n                this.completedActions = 0;\n                this.queue = [];\n\n                this.progressBar.$progressBar.removeClass('hidden');\n                this.progressBar.$progressBarStatus.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: () => {\n                        var postData = Garnish.getPostData(this.$form),\n                            params = Craft.expandPostArray(postData);\n                        params.start = true;\n\n                        this.cacheImages = params.cacheImages;\n\n                        Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                            if (response.indexingData) {\n                                this.sessionId = response.indexingData.sessionId;\n\n                                // Load up all the data\n                                for (var i = 0; i < response.indexingData.volumes.length; i++) {\n                                    var volumeData = response.indexingData.volumes[i];\n\n                                    for (var requestCounter = 0; requestCounter < volumeData.total; requestCounter++) {\n                                        this.queue.push({\n                                            process: true,\n                                            sessionId: this.sessionId,\n                                            volumeId: volumeData.volumeId,\n                                            cacheImages: this.cacheImages\n                                        });\n                                        this.totalActions++;\n                                    }\n                                }\n\n                                if (this.totalActions > 0) {\n                                    this.processIndexing();\n                                } else {\n                                    this.finishIndexing();\n                                }\n                            }\n                        });\n                    },\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            this.progressBar.setItemCount(this.totalActions);\n            this.progressBar.setProcessedItemCount(this.completedActions);\n            this.progressBar.updateProgressBar();\n        },\n\n        processIndexing: function() {\n            if (this.completedActions + this.loadingActions < this.totalActions && this.loadingActions < Craft.AssetIndexesUtility.maxConcurrentActions) {\n                this.loadingActions++;\n\n                var params = this.queue.shift();\n                Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                    this.loadingActions--;\n                    this.completedActions++;\n\n                    this.updateProgressBar();\n\n                    if (response && response.error) {\n                        alert(response.error);\n                    }\n\n                    if (this.completedActions == this.totalActions) {\n                        this.finishIndexing();\n                    } else {\n                        this.processIndexing();\n                    }\n                });\n\n                // Try again, in case we have more space.\n                this.processIndexing();\n            }\n        },\n\n        showConfirmDialog: function(data) {\n            var $modal = $('<form class=\"modal fitted confirmmodal\"/>').appendTo(Garnish.$bod),\n                $body = $('<div class=\"body\"/>').appendTo($modal).html(data.confirm),\n                $footer = $('<footer class=\"footer\"/>').appendTo($modal),\n                $buttons = $('<div class=\"buttons right\"/>').appendTo($footer);\n\n            if (data.showDelete) {\n                let $cancelBtn = $('<button/>', {\n                    type: 'button',\n                    class: 'btn',\n                    text: Craft.t('app', 'Keep them'),\n                }).appendTo($buttons);\n                $('<button/>', {\n                    type: 'submit',\n                    class: 'btn submit',\n                    text: Craft.t('app', 'Delete them'),\n                }).appendTo($buttons);\n\n                this.addListener($cancelBtn, 'click', function() {\n                    modal.hide();\n                    this.onComplete();\n                });\n            } else {\n                $('<button/>', {\n                    type: 'submit',\n                    class: 'btn submit',\n                    text: Craft.t('app', 'OK'),\n                }).appendTo($buttons);\n            }\n\n            Craft.initUiElements($body);\n\n            var modal = new Garnish.Modal($modal, {\n                hideOnEsc: false,\n                hideOnShadeClick: false,\n            });\n\n            this.addListener($modal, 'submit', function(ev) {\n                ev.preventDefault();\n\n                modal.settings.onHide = $.noop;\n                modal.hide();\n\n                var postData = Garnish.getPostData($body);\n                var params = Craft.expandPostArray(postData);\n\n                $.extend(params, data.params);\n                params.finish = true;\n\n                Craft.postActionRequest('utilities/asset-index-perform-action', {params}, $.noop);\n                this.onComplete();\n            });\n        },\n\n        finishIndexing: function() {\n            var params = {\n                sessionId: this.sessionId,\n                overview: true\n            };\n\n            Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                if (response.confirm) {\n                    this.hideProgressBar();\n                    this.showConfirmDialog(response);\n                } else {\n                    this.onComplete();\n                }\n            });\n        },\n\n        hideProgressBar: function() {\n            this.progressBar.$progressBarStatus.addClass('hidden');\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast'\n            });\n        },\n\n        onComplete: function() {\n            this.hideProgressBar();\n\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n                this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                this.$trigger.removeClass('disabled');\n                this.$trigger.trigger('focus');\n            }\n        }\n    }, {\n        maxConcurrentActions: 3\n    });\n})(jQuery);\n"],"sourceRoot":""}