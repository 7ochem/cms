"use strict";var SessionStatus,IndexingActions;!function(s){s[s.ACTIONREQUIRED=0]="ACTIONREQUIRED",s[s.ACTIVE=1]="ACTIVE",s[s.QUEUE=2]="QUEUE",s[s.WAITING=3]="WAITING",s[s.CLI=4]="CLI"}(SessionStatus||(SessionStatus={})),function(s){s.STOP="asset-indexes/stop-indexing-session",s.PROCESS="asset-indexes/process-indexing-session",s.OVERVIEW="asset-indexes/indexing-session-overview",s.FINISH="asset-indexes/finish-indexing-session"}(IndexingActions||(IndexingActions={}));class AssetIndexer{constructor(s,e){this._currentIndexingSession=null,this.indexingSessions={},this.$indexingSessionTable=s,this.indexingSessions={};let t=0;for(const s of e){let e=this.createSessionFromModel(s);e.getSessionStatus()!==SessionStatus.ACTIONREQUIRED||t||(t=e.getSessionId()),t||null!=this._currentIndexingSession||e.getSessionStatus()===SessionStatus.QUEUE||e.getSessionStatus()===SessionStatus.CLI||e.getSessionStatus()===SessionStatus.ACTIONREQUIRED||(this._currentIndexingSession=e.getSessionId()),this.updateIndexingSessionData(e)}this._currentIndexingSession&&this.performIndexingStep()}get currentIndexingSession(){return this._currentIndexingSession}updateIndexingSessionData(s){this.indexingSessions[s.getSessionId()]=s,this.renderIndexingSessionRow(s)}renderIndexingSessionRow(s){let e;if(!this.indexingSessions[s.getSessionId()])return this.$indexingSessionTable.find('tr[data-session-id="'+s.getSessionId()+'"]').remove(),void(0==this.$indexingSessionTable.find("tbody tr").length&&this.$indexingSessionTable.addClass("hidden"));e=s.getIndexingSessionRowHtml();const t=this.$indexingSessionTable.find('tr[data-session-id="'+s.getSessionId()+'"]');t.length>0?t.replaceWith(e):this.$indexingSessionTable.find("tbody").append(e),this.$indexingSessionTable.removeClass("hidden")}discardIndexingSession(s){const e=this.indexingSessions[s];delete this.indexingSessions[s],this._currentIndexingSession===s&&(this._currentIndexingSession=null),this.renderIndexingSessionRow(e)}processResponse(s,e){if("success"===e&&s.error)alert(s.error);else{if("success"===e&&s.session){const e=this.createSessionFromModel(s.session);if(this.indexingSessions[e.getSessionId()]=e,this.renderIndexingSessionRow(e),this._currentIndexingSession||(this._currentIndexingSession=e.getSessionId()),e.getSessionStatus()===SessionStatus.ACTIONREQUIRED)return void this.reviewSession(e);this.performIndexingStep()}"success"===e&&s.stop&&this.discardIndexingSession(s.stop)}}getReviewData(s){Craft.postActionRequest(IndexingActions.OVERVIEW,{sessionId:s.getSessionId()},this.processResponse.bind(this))}reviewSession(s){let e=$("<div></div>");const t=s.getMissingEntries(),n=Object.entries(t.files),i=Object.entries(t.folders),o=s.getSkippedEntries();if(o.length){let s="";for(const e of o)s+=`<li>${e}</li>`;e.append(`\n                <h2>${Craft.t("app","Skipped files")}</h2>\n                <p>${Craft.t("app","The following items were not indexed.")}</p>\n                <ul>\n                    ${s}\n                </ul>\n            `)}const a=n.length||i.length;if(a){let s="";n.length&&(s+="files"),n.length&&i.length&&(s+=" and "),i.length&&(s+="folders");const t={items:s};let o="";for(const[s,e]of i)o+=`<li><label><input type="checkbox" checked="checked" name="deleteFolder[]" value="${s}"> ${e}</label></li>`;for(const[s,e]of n)o+=`<li><label><input type="checkbox" checked="checked" name="deleteAsset[]" value="${s}"> ${e}</label></li>`;e.append($(`\n                <h2>${Craft.t("app","Missing {items}",t)}</h2>\n                <p>${Craft.t("app","The following {items} could not be found. Should they be deleted from the index?",t)}</p>\n                <ul>\n                    ${o}\n                </ul>\n            `))}const d=$('<form class="modal fitted confirmmodal"/>').appendTo(Garnish.$bod),r=$('<div class="body"/>').appendTo(d).html(e.html()),S=$('<footer class="footer"/>').appendTo(d),g=$('<div class="buttons right"/>').appendTo(S),p=new Garnish.Modal(d,{hideOnEsc:!1,hideOnShadeClick:!1});if(a){$("<button/>",{type:"button",class:"btn",text:Craft.t("app","Keep them")}).appendTo(g);$("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","Delete them")}).appendTo(g)}else $("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","OK")}).appendTo(g);Craft.initUiElements(r),p.updateSizeAndPosition(),d.on("submit",e=>{e.preventDefault(),p.settings.onHide=$.noop,p.hide();const t=Garnish.getPostData(r),n=Craft.expandPostArray(t);n.sessionId=s.getSessionId(),Craft.postActionRequest(IndexingActions.FINISH,n,this.processResponse.bind(this))})}performIndexingStep(){if(this._currentIndexingSession)Craft.postActionRequest(IndexingActions.PROCESS,{sessionId:this._currentIndexingSession},this.processResponse.bind(this));else{for(const s of Object.values(this.indexingSessions))if(s.getSessionStatus()!==SessionStatus.QUEUE&&s.getSessionStatus()!==SessionStatus.CLI){this._currentIndexingSession=s.getSessionId();break}this._currentIndexingSession&&this.performIndexingStep()}}stopIndexingSession(s){Craft.postActionRequest(IndexingActions.STOP,{sessionId:s.getSessionId()},this.processResponse.bind(this))}createSessionFromModel(s){return new AssetIndexingSession(s,this)}}class AssetIndexingSession{constructor(s,e){this.indexingSessionData=s,this.indexer=e}getSessionId(){return this.indexingSessionData.id}getSessionStatus(){return this.indexingSessionData.isCli?SessionStatus.CLI:this.indexingSessionData.queueId?SessionStatus.QUEUE:this.indexingSessionData.actionRequired?SessionStatus.ACTIONREQUIRED:this.indexer.currentIndexingSession===this.indexingSessionData.id?SessionStatus.ACTIVE:SessionStatus.WAITING}getIndexingSessionRowHtml(){const s=$('<tr class="indexingSession" data-session-id="'+this.getSessionId()+'">');s.append("<td>"+Object.values(this.indexingSessionData.indexedVolumes).join(", ")+"</td>"),s.append("<td>"+this.indexingSessionData.dateCreated+"</td>"),s.append("<td>"+this.indexingSessionData.dateUpdated+"</td>");const e=$('<td class="progress"></td>').css("position","relative"),t=new Craft.ProgressBar(e,!1);t.setItemCount(this.indexingSessionData.totalEntries),t.setProcessedItemCount(this.indexingSessionData.processedEntries),t.updateProgressBar(),t.showProgressBar(),s.append(e.data("progressBar",t)),s.append("<td>"+this.getSessionStatusMessage()+"</td>");const n=this.getActionButtons();return $("<td></td>").append(n).appendTo(s),s}getActionButtons(){if(this.getSessionStatus()===SessionStatus.QUEUE||this.getSessionStatus()===SessionStatus.CLI)return $();const s=$('<div class="buttons"></div>');if(this.getSessionStatus()==SessionStatus.ACTIONREQUIRED){const e=Craft.t("app","Review");s.append($("<button />",{type:"button",class:"btn submit",title:e,"aria-label":e}).text(e)).on("click",s=>{const e=$(s.target).parent();e.hasClass("disabled")||(e.addClass("disabled"),this.indexer.getReviewData(this))})}const e=Craft.t("app","Discard");return s.append($("<button />",{type:"button",class:"btn submit",title:e,"aria-label":e}).text(e)).on("click",e=>{s.hasClass("disabled")||(s.addClass("disabled"),this.indexer.stopIndexingSession(this))}),s}getSessionStatusMessage(){switch(this.getSessionStatus()){case SessionStatus.ACTIONREQUIRED:return Craft.t("app","Waiting for review");case SessionStatus.ACTIVE:return Craft.t("app","Active");case SessionStatus.WAITING:return Craft.t("app","Waiting");case SessionStatus.QUEUE:return Craft.t("app","Running in background");case SessionStatus.CLI:return Craft.t("app","Running via CLI")}}getMissingEntries(){return this.indexingSessionData.missingEntries}getSkippedEntries(){return this.indexingSessionData.skippedEntries}}
//# sourceMappingURL=AssetIndexer.min.js.map
