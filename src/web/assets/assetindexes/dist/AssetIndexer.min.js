"use strict";var SessionStatus,IndexingActions;!function(s){s[s.ACTIONREQUIRED=0]="ACTIONREQUIRED",s[s.ACTIVE=1]="ACTIVE",s[s.WAITING=2]="WAITING"}(SessionStatus||(SessionStatus={})),function(s){s.START="asset-indexes/start-indexing",s.STOP="asset-indexes/stop-indexing-session",s.PROCESS="asset-indexes/process-indexing-session",s.OVERVIEW="asset-indexes/indexing-session-overview",s.FINISH="asset-indexes/finish-indexing-session"}(IndexingActions||(IndexingActions={}));class AssetIndexer{constructor(s,e,n=3){this._currentIndexingSession=null,this._currentConnectionCount=0,this._tasksWaiting=[],this._priorityTasks=[],this._prunedSessionIds=[],this._currentlyReviewing=!1,this.indexingSessions={},this._maxConcurrentConnections=n,this.$indexingSessionTable=s,this.indexingSessions={};let i=0;for(const s of e){let e=this.createSessionFromModel(s);e.getSessionStatus()!==SessionStatus.ACTIONREQUIRED||i||(i=e.getSessionId()),i||null!=this._currentIndexingSession||e.getSessionStatus()===SessionStatus.ACTIONREQUIRED||(this._currentIndexingSession=e.getSessionId()),this.updateIndexingSessionData(e)}this._currentIndexingSession&&this.performIndexingStep()}get currentIndexingSession(){return this._currentIndexingSession}updateIndexingSessionData(s){this.indexingSessions[s.getSessionId()]=s,this.renderIndexingSessionRow(s)}renderIndexingSessionRow(s){let e;if(void 0===s)return;if(!this.indexingSessions[s.getSessionId()]||this._prunedSessionIds.includes(s.getSessionId()))return this.$indexingSessionTable.find('tr[data-session-id="'+s.getSessionId()+'"]').remove(),void(0==this.$indexingSessionTable.find("tbody tr").length&&this.$indexingSessionTable.addClass("hidden"));e=s.getIndexingSessionRowHtml();const n=this.$indexingSessionTable.find('tr[data-session-id="'+s.getSessionId()+'"]');n.length>0?n.replaceWith(e):this.$indexingSessionTable.find("tbody").append(e),this.$indexingSessionTable.removeClass("hidden")}discardIndexingSession(s){const e=this.indexingSessions[s];delete this.indexingSessions[s],this._currentIndexingSession===s&&(this._currentIndexingSession=null),this.renderIndexingSessionRow(e),this.runTasks()}processResponse(s,e){if(this._currentConnectionCount--,"success"===e&&s.error)return alert(s.error),void this.runTasks();if("success"===e&&s.session){const e=this.createSessionFromModel(s.session);this.indexingSessions[e.getSessionId()]=e,this.renderIndexingSessionRow(e),this._updateCurrentIndexingSession(),e.getSessionStatus()!==SessionStatus.ACTIONREQUIRED||s.skipDialog?this._prunedSessionIds.includes(this._currentIndexingSession)?this.runTasks():this.performIndexingStep():this._prunedSessionIds.includes(this._currentIndexingSession)?this.runTasks():this.reviewSession(e)}this._updateCurrentIndexingSession(),"success"===e&&s.stop&&this.discardIndexingSession(s.stop)}getReviewData(s){const e={sessionId:s.getSessionId(),action:IndexingActions.OVERVIEW,params:{sessionId:s.getSessionId()},callback:()=>{this.renderIndexingSessionRow(s)}};this.enqueueTask(e)}reviewSession(s){if(this._currentlyReviewing)return;this._currentlyReviewing=!0,this.pruneWaitingTasks(s.getSessionId());let e=$("<div></div>");const n=s.getMissingEntries(),i=n.files?Object.entries(n.files):[],t=n.folders?Object.entries(n.folders):[],o=s.getSkippedEntries();if(o.length){let s="";for(const e of o)s+=`<li>${e}</li>`;e.append(`\n                <h2>${Craft.t("app","Skipped files")}</h2>\n                <p>${Craft.t("app","The following items were not indexed.")}</p>\n                <ul>\n                    ${s}\n                </ul>\n            `)}const a=i.length||t.length;if(a){let s="";i.length&&(s+="files"),i.length&&t.length&&(s+=" and "),t.length&&(s+="folders");const n={items:s};let o="";for(const[s,e]of t)o+=`<li><label><input type="checkbox" checked="checked" name="deleteFolder[]" value="${s}"> ${e}</label></li>`;for(const[s,e]of i)o+=`<li><label><input type="checkbox" checked="checked" name="deleteAsset[]" value="${s}"> ${e}</label></li>`;e.append($(`\n                <h2>${Craft.t("app","Missing {items}",n)}</h2>\n                <p>${Craft.t("app","The following {items} could not be found. Should they be deleted from the index?",n)}</p>\n                <ul>\n                    ${o}\n                </ul>\n            `))}const r=$('<form class="modal fitted confirmmodal"/>').appendTo(Garnish.$bod),d=$('<div class="body"/>').appendTo(r).html(e.html()),g=$('<footer class="footer"/>').appendTo(r),h=$('<div class="buttons right"/>').appendTo(g),u=new Garnish.Modal(r,{hideOnEsc:!1,hideOnShadeClick:!1,onHide:()=>{this._currentlyReviewing=!1}});if(a){$("<button/>",{type:"button",class:"btn",text:Craft.t("app","Keep them")}).on("click",e=>{e.preventDefault(),this.stopIndexingSession(s),u.hide()}).appendTo(h);$("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","Delete them")}).appendTo(h)}else $("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","OK")}).appendTo(h);Craft.initUiElements(d),u.updateSizeAndPosition(),r.on("submit",e=>{e.preventDefault(),u.hide();const n=Garnish.getPostData(d),i=Craft.expandPostArray(n);i.sessionId=s.getSessionId();const t={sessionId:s.getSessionId(),action:IndexingActions.FINISH,params:i};this.enqueueTask(t,!0)})}startIndexing(s,e){Craft.postActionRequest(IndexingActions.START,s,(s,n)=>{this.processResponse(s,n),e()})}performIndexingStep(){if(this._currentIndexingSession||this._updateCurrentIndexingSession(),!this._currentIndexingSession)return;const s=this.indexingSessions[this._currentIndexingSession],e=this._maxConcurrentConnections-this._currentConnectionCount;for(let n=0;n<Math.min(e,s.getEntriesRemaining());n++){const e={sessionId:s.getSessionId(),action:IndexingActions.PROCESS,params:{sessionId:this._currentIndexingSession}};this.enqueueTask(e)}}stopIndexingSession(s){this.pruneWaitingTasks(s.getSessionId());const e={sessionId:s.getSessionId(),action:IndexingActions.STOP,params:{sessionId:s.getSessionId()}};this.enqueueTask(e,!0)}pruneWaitingTasks(s){const e=[];let n=!1;this._prunedSessionIds.push(s);for(const i of this._tasksWaiting)i.sessionId!==s?e.push(i):n=!0;n&&(this._tasksWaiting=e)}enqueueTask(s,e=!1){e?this._priorityTasks.push(s):this._tasksWaiting.push(s),this.runTasks()}runTasks(){if(!(this._tasksWaiting.length+this._priorityTasks.length===0||this._currentConnectionCount>=this._maxConcurrentConnections))for(;this._tasksWaiting.length+this._priorityTasks.length!==0&&this._currentConnectionCount<this._maxConcurrentConnections;){this._currentConnectionCount++;const s=this._priorityTasks.length>0?this._priorityTasks.shift():this._tasksWaiting.shift();Craft.postActionRequest(s.action,s.params,(e,n)=>{this.processResponse(e,n),s.callback&&s.callback()})}}_updateCurrentIndexingSession(){for(const s of Object.values(this.indexingSessions))if(s.getSessionStatus()!==SessionStatus.ACTIONREQUIRED)return void(this._currentIndexingSession=s.getSessionId())}createSessionFromModel(s){return new AssetIndexingSession(s,this)}}class AssetIndexingSession{constructor(s,e){this.indexingSessionData=s,this.indexer=e}getSessionId(){return this.indexingSessionData.id}getEntriesRemaining(){return this.indexingSessionData.totalEntries-this.indexingSessionData.processedEntries}getSessionStatus(){return this.indexingSessionData.actionRequired?SessionStatus.ACTIONREQUIRED:this.indexer.currentIndexingSession===this.indexingSessionData.id?SessionStatus.ACTIVE:SessionStatus.WAITING}getIndexingSessionRowHtml(){const s=$('<tr class="indexingSession" data-session-id="'+this.getSessionId()+'">');s.append("<td><ul><li>"+Object.values(this.indexingSessionData.indexedVolumes).join("</li><li>")+"</li></ul></td>"),s.append("<td>"+this.indexingSessionData.dateCreated+"</td>");const e=$('<td class="progress"><div class="progressContainer"></div></td>').css("position","relative"),n=new Craft.ProgressBar(e.find(".progressContainer"),!1);n.setItemCount(this.indexingSessionData.totalEntries),n.setProcessedItemCount(this.indexingSessionData.processedEntries),n.updateProgressBar(),n.showProgressBar(),e.data("progressBar",n),e.find(".progressContainer").append(`<div class="progressInfo">${this.indexingSessionData.processedEntries} / ${this.indexingSessionData.totalEntries}</div>`),s.append(e),s.append("<td>"+this.getSessionStatusMessage()+"</td>");const i=this.getActionButtons();return $("<td></td>").append(i).appendTo(s),s}getActionButtons(){const s=$('<div class="buttons"></div>');if(this.getSessionStatus()==SessionStatus.ACTIONREQUIRED){const e=Craft.t("app","Review");s.append($("<button />",{type:"button",class:"btn submit",title:e,"aria-label":e}).text(e).on("click",s=>{const e=$(s.target).parent();e.hasClass("disabled")||(e.addClass("disabled"),this.indexer.getReviewData(this))}))}const e=Craft.t("app","Discard");return s.append($("<button />",{type:"button",class:"btn submit",title:e,"aria-label":e}).text(e).on("click",e=>{s.hasClass("disabled")||(s.addClass("disabled"),this.indexer.stopIndexingSession(this))})),s}getSessionStatusMessage(){switch(this.getSessionStatus()){case SessionStatus.ACTIONREQUIRED:return Craft.t("app","Waiting for review");case SessionStatus.ACTIVE:return Craft.t("app","Active");case SessionStatus.WAITING:return Craft.t("app","Waiting")}}getMissingEntries(){return this.indexingSessionData.missingEntries}getSkippedEntries(){return this.indexingSessionData.skippedEntries}}
//# sourceMappingURL=AssetIndexer.min.js.map
