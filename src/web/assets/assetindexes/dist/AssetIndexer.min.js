"use strict";var SessionStatus;!function(s){s[s.STOPPED=0]="STOPPED",s[s.RUNNING=1]="RUNNING",s[s.QUEUE=2]="QUEUE"}(SessionStatus||(SessionStatus={}));class AssetIndexer{constructor(s,t){this.indexingSessions={},this.runningSessions=[],this.$indexingSessionTable=s,this.indexingSessions={};for(const s of t)this.updateIndexingSessionData(s);t.length>0&&this.$indexingSessionTable.removeClass("hidden")}updateIndexingSessionData(s){const t=new AssetIndexingSession(s,this.getSessionStatus(s));this.indexingSessions[t.getSessionId()]=t,this.renderIndexingSessionRow(t)}getIndexingSessionData(s){return this.indexingSessions[s]?this.indexingSessions[s]:null}renderIndexingSessionRow(s){let t;if(!s)return;t=s.getIndexingSessionRowHtml();const e=this.$indexingSessionTable.find('tr[data-session-id="'+s.getSessionId()+'"]');e.length>0?e.replaceWith(t):this.$indexingSessionTable.find("tbody").append(t)}processResponse(s){console.log(s)}getSessionStatus(s){return s.queueId?SessionStatus.QUEUE:this.runningSessions.includes(s.id)?SessionStatus.RUNNING:SessionStatus.STOPPED}}class AssetIndexingSession{constructor(s,t){this.indexingSessionData=s,this.status=t}getSessionId(){return this.indexingSessionData.id}getIndexingSessionRowHtml(){const s=$('<tr class="indexingSession">');s.data("session-id",this.indexingSessionData.id).data("as-queue",this.indexingSessionData.queueId?this.indexingSessionData.queueId:null),s.append("<td>"+this.indexingSessionData.started+"</td>"),s.append("<td>"+this.indexingSessionData.updated+"</td>");const t=$('<td class="progress"></td>').data("total",this.indexingSessionData.totalEntries).data("processed",this.indexingSessionData.processedEntries).css("position","relative"),e=new Craft.ProgressBar(t,!1);e.setItemCount(this.indexingSessionData.totalEntries),e.setProcessedItemCount(this.indexingSessionData.processedEntries),e.updateProgressBar(),e.showProgressBar(),s.append(t.data("progressBar",e)),s.append("<td>"+this.getSessionStatusMessage()+"</td>");const n=this.getActionButtons();return $("<td></td>").append(n).appendTo(s),s}getActionButtons(){if(this.status===SessionStatus.QUEUE)return $();const s=$('<div class="buttons"></div>');let t;switch(this.status){case SessionStatus.RUNNING:t=Craft.t("app","Stop");break;case SessionStatus.STOPPED:t=Craft.t("app","Start");const e=Craft.t("app","Cancel");s.append($("<button />",{type:"button",class:"btn submit",title:e,"aria-label":e}).text(e))}return s.prepend($("<button />",{type:"button",class:"btn submit",title:t,"aria-label":t}).text(t)),s}getSessionStatusMessage(){switch(this.status){case SessionStatus.STOPPED:return Craft.t("app","Waiting");case SessionStatus.RUNNING:return Craft.t("app","Running");case SessionStatus.QUEUE:return Craft.t("app","Running in background")}}}
//# sourceMappingURL=AssetIndexer.min.js.map
