{"version":3,"file":"ClearCachesUtility.js","mappings":"YAAA,IAAUA,EAAAA,EAwFPC,OAvFCC,MAAMC,mBAAqBC,QAAQC,KAAKC,OAAO,CAC3CC,KAAM,SAASC,GAEX,IAFmB,WACfC,EAAST,EAAE,gBADI,WAEVU,GACL,IAAIC,EAAQF,EAAOG,GAAGF,GAClBG,EAAcF,EAAMG,KAAK,wBACzBC,EAAOJ,EAAMG,KAAK,QAClBE,EAAc,WACVH,EAAYI,OAAO,YAAYC,OAC/BH,EAAKI,YAAY,YAEjBJ,EAAKK,SAAS,aAGtBP,EAAYQ,GAAG,SAAUL,GACzBA,IACA,EAAKM,YAAYX,EAAO,UAAU,SAAAY,GAC9BA,EAAGC,iBACET,EAAKU,SAAS,aACf,EAAKC,SAASH,OAhBjBb,EAAI,EAAGA,EAAID,EAAOS,OAAQR,IAAK,EAA/BA,IAsBbgB,SAAU,SAASH,GACf,IAQII,EAAaC,EARbjB,EAAQX,EAAEuB,EAAGM,eACbC,EAAWnB,EAAMG,KAAK,iBACtBiB,EAAUpB,EAAMG,KAAK,mBAErBgB,EAASL,SAAS,cAKjBd,EAAMqB,KAAK,iBAIZL,EAAchB,EAAMqB,KAAK,gBACbC,mBACZL,EAAWjB,EAAMqB,KAAK,aALtBL,EAAc,IAAIzB,MAAMgC,YAAYH,GACpCpB,EAAMqB,KAAK,cAAeL,IAO9BA,EAAYQ,aAAahB,YAAY,UAErCQ,EAAYQ,aAAaC,SAAS,QAAQA,SAAS,CAC/CC,QAAS,GACV,CACCC,SAAU,WACN,IAAIC,EAAWnC,QAAQoC,YAAY7B,GAC/BqB,EAAO9B,MAAMuC,gBAAgBF,GAEjCrC,MAAMwC,kBAAkB,OAAQC,OAAOC,OAAQ,CAACZ,KAAAA,IAC3Ca,MAAK,SAACC,GACHnB,EAAYoB,sBAAsB,KAElCC,YAAW,WACFpB,KACDA,EAAW5B,EAAE,4CAA4CiD,SAASlB,IACzDmB,IAAI,UAAW,GACxBvC,EAAMqB,KAAK,UAAWJ,IAG1BD,EAAYQ,aAAaC,SAAS,CAACC,QAAS,GAAI,CAC5Cc,SAAU,OAAQb,SAAU,WACxBV,EAASQ,SAAS,CAACC,QAAS,GAAI,CAACc,SAAU,SAC3CrB,EAASX,YAAY,YACrBW,EAASsB,QAAQ,cAG1B,QAlBX,OAoBW,YAAgB,IAAdN,EAAc,EAAdA,SACLO,MAAMP,EAASQ,eAK3B1B,GACAA,EAASsB,IAAI,UAAW,GAG5BpB,EAASV,SAAS,YAClBU,EAASsB,QAAQ,Y","sources":["webpack:///./ClearCachesUtility.js"],"sourcesContent":["(function($) {\n    Craft.ClearCachesUtility = Garnish.Base.extend({\n        init: function(formId) {\n            let $forms = $('form.utility');\n            for (let i = 0; i < $forms.length; i++) {\n                let $form = $forms.eq(i);\n                let $checkboxes = $form.find('input[type=checkbox]');\n                let $btn = $form.find('.btn');\n                let checkInputs = function() {\n                    if ($checkboxes.filter(':checked').length) {\n                        $btn.removeClass('disabled');\n                    } else {\n                        $btn.addClass('disabled');\n                    }\n                };\n                $checkboxes.on('change', checkInputs);\n                checkInputs();\n                this.addListener($form, 'submit', ev => {\n                    ev.preventDefault();\n                    if (!$btn.hasClass('disabled')) {\n                        this.onSubmit(ev);\n                    }\n                });\n            }\n        },\n\n        onSubmit: function(ev) {\n            let $form = $(ev.currentTarget);\n            let $trigger = $form.find('button.submit');\n            let $status = $form.find('.utility-status');\n\n            if ($trigger.hasClass('disabled')) {\n                return;\n            }\n\n            let progressBar, $allDone;\n            if (!$form.data('progressBar')) {\n                progressBar = new Craft.ProgressBar($status);\n                $form.data('progressBar', progressBar);\n            } else {\n                progressBar = $form.data('progressBar');\n                progressBar.resetProgressBar();\n                $allDone = $form.data('allDone');\n            }\n\n            progressBar.$progressBar.removeClass('hidden');\n\n            progressBar.$progressBar.velocity('stop').velocity({\n                opacity: 1\n            }, {\n                complete: () => {\n                    let postData = Garnish.getPostData($form);\n                    let data = Craft.expandPostArray(postData);\n\n                    Craft.sendActionRequest('POST', params.action, {data})\n                        .then((response) => {\n                            progressBar.setProgressPercentage(100);\n\n                            setTimeout(() => {\n                                if (!$allDone) {\n                                    $allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo($status);\n                                    $allDone.css('opacity', 0);\n                                    $form.data('allDone', $allDone);\n                                }\n\n                                progressBar.$progressBar.velocity({opacity: 0}, {\n                                    duration: 'fast', complete: () => {\n                                        $allDone.velocity({opacity: 1}, {duration: 'fast'});\n                                        $trigger.removeClass('disabled');\n                                        $trigger.trigger('focus');\n                                    },\n                                });\n                            }, 300);\n                        })\n                        .catch(({response}) => {\n                            alert(response.message);\n                        });\n                },\n            });\n\n            if ($allDone) {\n                $allDone.css('opacity', 0);\n            }\n\n            $trigger.addClass('disabled');\n            $trigger.trigger('blur');\n        },\n    });\n})(jQuery);\n"],"names":["$","jQuery","Craft","ClearCachesUtility","Garnish","Base","extend","init","formId","$forms","i","$form","eq","$checkboxes","find","$btn","checkInputs","filter","length","removeClass","addClass","on","addListener","ev","preventDefault","hasClass","onSubmit","progressBar","$allDone","currentTarget","$trigger","$status","data","resetProgressBar","ProgressBar","$progressBar","velocity","opacity","complete","postData","getPostData","expandPostArray","sendActionRequest","params","action","then","response","setProgressPercentage","setTimeout","appendTo","css","duration","trigger","alert","message"],"sourceRoot":""}