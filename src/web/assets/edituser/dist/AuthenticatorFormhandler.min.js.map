{"version":3,"sources":["edituser/src/AuthenticatorFormhandler.js"],"names":["AuthenticatorFormHandler","constructor","endpoint","this","disabled","$","$container","attachEvents","on","event","key","stopImmediatePropagation","handleAuthenticatorUpdate","Craft","elevatedSessionManager","fetchingTimeout","$detach","length","val","$verificationCode1","shake","requireElevatedSession","submitAuthenticatorUpdate","bind","disable","$fields","data","getAttribute","field","value","postActionRequest","response","textStatus","enable","message","error","html","replaceWith","fadeTo"],"mappings":"AAAA,aACA,MAAMA,yBAANC,cACIA,KAAWC,SAAG,+CACVC,KAAKD,UAAW,EAChBC,KAAKC,WAALC,EAAA,2BACAF,KAAKG,eAObC,eAEQF,EAAE,wBAAwBG,GAAG,UAAYC,IACrC,GAAiB,SAAbA,EAAMC,IAAAA,OAFND,EAAGE,2BACTR,KAAAS,6BACmB,IAGbP,EAAA,yBAAAG,GAAA,QAAAC,IACHA,EAAAE,2BALLR,KAAAS,8BAcRA,4BACA,GAAAC,MAAAC,uBAAAC,gBACA,OAKQ,MAAMC,EAAUX,EAAE,+BAJtBO,EAA4BP,EAAA,wBACdS,EAAAA,EAAuBC,wBAEhC,GAAAC,EAAAC,OAAA,EAMOD,EAAQE,MAAMD,OAAS,IALb,WAAFZ,EAAEa,MACZC,QAAkBC,MAAKJ,GAGjBC,MAAZH,uBAAwBO,uBAAAlB,KAAAmB,0BAAAC,KAAApB,YAEhB,CAIIU,GAA6BQ,GAAvBP,EAAAA,MAAuBO,QAA4BC,GAA5BD,EAA4BC,MAAAA,OAC5D,OAGJT,MAAAC,uBAAAO,uBAAAlB,KAAAmB,0BAAAC,KAAApB,QAMRmB,4BACD,GAAAnB,KAAAC,SACJ,OAEAD,KAAAqB,UAMQ,MAAMC,EAAUpB,EAAE,6BAClB,IAAIqB,EAAO,GANfJ,IAAAA,MAAAA,KAAyBG,EACjBC,EAAKtB,EAAUuB,aAAA,SAAAC,EAAAC,MAElBhB,MAAAiB,kBAAA3B,KAAAD,SAAAwB,EAAA,CAAAK,EAAAC,KAQG7B,KAAK8B,SAPTF,EAAAG,SACMT,MAAYM,EAAAG,SAUVH,EAASI,OARNP,MAAXG,EAAAI,OAECJ,EAAAK,OAUOjC,KAAKG,WAAW+B,YAAYN,EAASK,MATvCN,KAAAA,WAAuB5B,EAAAA,2BACpB+B,KAAL1B,kBAmBRiB,UAZQrB,KAAI4B,UAAJ,EACI5B,KAAKG,WAAW+B,OAAAA,IAAYN,IAO5CE,SACA9B,KAAAC,UAAA,EACAD,KAAAG,WAAAgC,OAAA,IAAA,IAgBA,IAAItC","file":"AuthenticatorFormhandler.min.js","sourcesContent":["\"use strict\";\nclass AuthenticatorFormHandler {\n    constructor() {\n        this.endpoint = 'authentication/update-authenticator-settings';\n        this.disabled = false;\n        this.$container = $('#authenticator-settings');\n        this.attachEvents();\n    }\n    /**\n     * Attach the listeners for field events.\n     *\n     * @private\n     */\n    attachEvents() {\n        $('.authenticator-field').on('keydown', (event) => {\n            if (event.key == \"Enter\") {\n                event.stopImmediatePropagation();\n                this.handleAuthenticatorUpdate();\n                return false;\n            }\n        });\n        $('#update-authenticator').on('click', (event) => {\n            event.stopImmediatePropagation();\n            this.handleAuthenticatorUpdate();\n        });\n    }\n    /**\n     * Handle authenticator setting update.\n     *\n     * @protected\n     */\n    handleAuthenticatorUpdate() {\n        if (Craft.elevatedSessionManager.fetchingTimeout) {\n            return;\n        }\n        const $detach = $('.authenticator-field.detach');\n        const $verificationCode1 = $('#verification-code-1');\n        const $verificationCode2 = $('#verification-code-2');\n        // If detaching\n        if ($detach.length > 0) {\n            if ($detach.val().length > 0) {\n                if ($detach.val() !== 'detach') {\n                    Garnish.shake($detach);\n                }\n                else {\n                    Craft.elevatedSessionManager.requireElevatedSession(this.submitAuthenticatorUpdate.bind(this));\n                }\n            }\n        }\n        else {\n            if ($verificationCode1.val().length == 0 || $verificationCode2.val().length == 0) {\n                return;\n            }\n            Craft.elevatedSessionManager.requireElevatedSession(this.submitAuthenticatorUpdate.bind(this));\n        }\n    }\n    /**\n     * Submit authenticator setting update.\n     * @protected\n     */\n    submitAuthenticatorUpdate() {\n        if (this.disabled) {\n            return;\n        }\n        this.disable();\n        const $fields = $('input.authenticator-field');\n        let data = {};\n        for (const field of $fields) {\n            data[field.getAttribute('name')] = field.value;\n        }\n        Craft.postActionRequest(this.endpoint, data, (response, textStatus) => {\n            this.enable();\n            if (response.message) {\n                alert(response.message);\n            }\n            if (response.error) {\n                alert(response.error);\n            }\n            if (response.html) {\n                this.$container.replaceWith(response.html);\n                this.$container = $('#authenticator-settings');\n                this.attachEvents();\n            }\n        });\n    }\n    /**\n     * Disable the setting fields.\n     *\n     * @protected\n     */\n    disable() {\n        this.disabled = true;\n        this.$container.fadeTo(100, 0.5);\n    }\n    /**\n     * Enable the setting fields.\n     *\n     * @protected\n     */\n    enable() {\n        this.disabled = false;\n        this.$container.fadeTo(100, 1);\n    }\n}\nnew AuthenticatorFormHandler();\n"]}