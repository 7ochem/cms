{"version":3,"file":"webAuthn.js","mappings":"YACA,IAAIA,EAAsB,CCA1BA,EAAwB,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,SAASS,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICC/FV,EAAwB,SAASC,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,uFCJhD,MAAMC,EACTC,cACIC,KAAKC,eAAiB,8CACtBD,KAAKE,UAAW,EAChBF,KAAKG,WAAaC,EAAE,sBACpBJ,KAAKK,eAETA,eACIP,EAAoBQ,QAAUF,EAAE,oBAChCN,EAAoBQ,QAAQC,GAAG,SAAUC,IACrCA,EAAGC,2BACH,MACMC,EADUN,EAAEI,EAAGG,QACMC,KAAK,sBAE1BC,EAAuB3B,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIJ,GAAa,CAAEK,KAAM7B,OAAO4B,OAAO,GAAIJ,EAAWK,QAC3GL,EAAWM,qBACXH,EAAqBG,mBAAqB,IAAIN,EAAWM,qBAG7DH,EAAqBI,UAAYC,KAAKL,EAAqBI,UAAUE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MACtGN,EAAqBE,KAAKK,GAAKF,KAAKL,EAAqBE,KAAKK,GAAGD,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MAElGN,EAAqBI,UAAYI,WAAWC,KAAKT,EAAqBI,WAAWM,GAAKA,EAAEC,WAAW,KACnGX,EAAqBE,KAAKK,GAAKC,WAAWC,KAAKT,EAAqBE,KAAKK,IAAIG,GAAKA,EAAEC,WAAW,KAC/F,IAAK,MAAMC,KAAOZ,EAAqBG,mBAAoB,CACvD,IAAIU,EAAWb,EAAqBG,mBAAmBS,GACvDZ,EAAqBG,mBAAmBS,GAAO,CAC3CL,GAAIC,WAAWC,KAAKJ,KAAKQ,EAASN,GAAGD,QAAQ,KAAM,KAAKA,QAAQ,KAAM,OAAOI,GAAKA,EAAEC,WAAW,KAC/FG,KAAMD,EAASC,MAQvB,OALA3B,KAAK4B,kBAAkBf,GAAsBgB,MAAMC,IAC/CC,MAAMC,uBAAuBC,wBAAuB,IAAMjC,KAAKkC,yBAAyBJ,QACzFK,OAAOC,IACNC,QAAQC,IAAIF,OAET,KAGfF,yBAAyBJ,GACrB,GAAI9B,KAAKE,SACL,OAAO,EAEXF,KAAKuC,UACL,MACMC,EAAc,CAChBC,eAFmBC,OAAOX,MAAMY,EAAE,MAAO,2CAA4C,sBAGrFb,YAAa,CACTV,GAAIU,EAAYV,GAChBwB,MAAOd,EAAYV,GACnBO,KAAMG,EAAYH,KAClBkB,SAAU,CACNC,kBAAmBC,KAAKC,OAAOC,gBAAgB,IAAI5B,WAAWS,EAAYe,SAASC,qBACnFI,eAAgBH,KAAKC,OAAOC,gBAAgB,IAAI5B,WAAWS,EAAYe,SAASK,qBAI5FnB,MAAMoB,kBAAkBnD,KAAKC,eAAgBuC,GAAa,CAACK,EAAUO,KAC7DP,EAASQ,OACTrD,KAAKG,WAAWmD,YAAYT,EAASQ,MACrCrD,KAAKG,WAAaC,EAAE,sBACpBJ,KAAKK,gBAELwC,EAASU,UC8BlB,SAAmCC,GACtC,MAAMC,EAAUD,EAAYE,MAAM,kBAC5BC,EAAkBC,MAAMtC,KAAKuC,SAASC,SAASC,KAAIC,GAAQA,EAAKC,aAAa,SAAQC,QAAOC,GAAOA,GAAOA,EAAIC,OAAS,IAG7H,GAAIX,GACA,IAAK,MAAMY,KAAUZ,EACjB,IAAKE,EAAgBW,SAASD,GAAS,CACnC,IAAIL,EAAOH,SAASU,cAAc,UAClCP,EAAKQ,aAAa,MAAOH,GACzBR,SAASY,KAAKC,YAAYV,SAMlCjC,MAAM4C,eAAenB,GD7CboB,CAA0B/B,EAASU,UAEvCvD,KAAK6E,YASbC,wBAAwBjE,GACpB,MAAMiB,QAAoBiD,UAAUjD,YAAYkD,OAAO,CACnDC,UAAWpE,IACZsB,OAAOC,IACNC,QAAQC,IAAIF,MAEhB,IAAKN,EACD,KAAM,+BAEV,OAAOA,EAOXS,UACIvC,KAAKE,UAAW,EAChBJ,EAAoBQ,QAAQ4E,OAAO,IAAK,IAO5CL,SACI7E,KAAKE,UAAW,EAChBJ,EAAoBQ,QAAQ4E,OAAO,IAAK,GAO5CC,gCAAgCC,GAC5B,MAAM1E,EAAaZ,EAAoBQ,QAAQM,KAAK,sBACpD,IAAIyE,EAAc,GAClB,IAAK,MAAM3D,KAAYhB,EAAWM,mBAE1BU,EAASN,GAAGD,QAAQ,YAAa,MAAQiE,EAAajE,QAAQ,YAAa,KAE3EkE,EAAYC,KAAK5D,GAGzBhB,EAAWM,mBAAqBqE,EAChCvF,EAAoBQ,QAAQM,KAAK,qBAAsBF,IAG/DZ,EAAoBQ,QAAUF,EAAE,oB","sources":["webpack://Craft/webpack/bootstrap","webpack://Craft/webpack/runtime/define property getters","webpack://Craft/webpack/runtime/hasOwnProperty shorthand","webpack://Craft/webpack/runtime/make namespace object","webpack://Craft/./WebAuthnFormHandler.ts","webpack://Craft/../../login/src/LoginForm.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addContainedJsFilesToPage } from \"../../login/src/LoginForm\";\nexport class WebAuthnFormHandler {\n    constructor() {\n        this.attachEndpoint = 'authentication/attach-web-authn-credentials';\n        this.disabled = false;\n        this.$container = $('#webauthn-settings');\n        this.attachEvents();\n    }\n    attachEvents() {\n        WebAuthnFormHandler.$button = $('#attach-webauthn');\n        WebAuthnFormHandler.$button.on('click', (ev) => {\n            ev.stopImmediatePropagation();\n            const $button = $(ev.target);\n            const optionData = $button.data('credential-options');\n            // Sort-of deep copy\n            const keyCredentialOptions = Object.assign(Object.assign({}, optionData), { user: Object.assign({}, optionData.user) });\n            if (optionData.excludeCredentials) {\n                keyCredentialOptions.excludeCredentials = [...optionData.excludeCredentials];\n            }\n            // proprietary base 64 decode, for some reason\n            keyCredentialOptions.challenge = atob(keyCredentialOptions.challenge.replace(/-/g, '+').replace(/_/g, '/'));\n            keyCredentialOptions.user.id = atob(keyCredentialOptions.user.id.replace(/-/g, '+').replace(/_/g, '/'));\n            // Unpack to binary data\n            keyCredentialOptions.challenge = Uint8Array.from(keyCredentialOptions.challenge, c => c.charCodeAt(0));\n            keyCredentialOptions.user.id = Uint8Array.from(keyCredentialOptions.user.id, c => c.charCodeAt(0));\n            for (const idx in keyCredentialOptions.excludeCredentials) {\n                let excluded = keyCredentialOptions.excludeCredentials[idx];\n                keyCredentialOptions.excludeCredentials[idx] = {\n                    id: Uint8Array.from(atob(excluded.id.replace(/-/g, '+').replace(/_/g, '/')), c => c.charCodeAt(0)),\n                    type: excluded.type\n                };\n            }\n            this.createCredentials(keyCredentialOptions).then((credentials) => {\n                Craft.elevatedSessionManager.requireElevatedSession(() => this.attachWebAuthnCredential(credentials));\n            }).catch((err) => {\n                console.log(err);\n            });\n            return false;\n        });\n    }\n    attachWebAuthnCredential(credentials) {\n        if (this.disabled) {\n            return false;\n        }\n        this.disable();\n        const credentialName = prompt(Craft.t('app', 'Please enter a name for the credentials'), 'Secure credentials');\n        const requestData = {\n            credentialName: credentialName,\n            credentials: {\n                id: credentials.id,\n                rawId: credentials.id,\n                type: credentials.type,\n                response: {\n                    attestationObject: btoa(String.fromCharCode(...new Uint8Array(credentials.response.attestationObject))),\n                    clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(credentials.response.clientDataJSON))),\n                }\n            }\n        };\n        Craft.postActionRequest(this.attachEndpoint, requestData, (response, textStatus) => {\n            if (response.html) {\n                this.$container.replaceWith(response.html);\n                this.$container = $('#webauthn-settings');\n                this.attachEvents();\n            }\n            if (response.footHtml) {\n                addContainedJsFilesToPage(response.footHtml);\n            }\n            this.enable();\n        });\n    }\n    /**\n     * Get the WebAuthn server options based on a random string and user info.\n     *\n     * @param randomString\n     * @param userInfo\n     */\n    async createCredentials(keyCredentialOptions) {\n        const credentials = await navigator.credentials.create({\n            publicKey: keyCredentialOptions\n        }).catch((err) => {\n            console.log(err);\n        });\n        if (!credentials) {\n            throw \"Failed to create credentials\";\n        }\n        return credentials;\n    }\n    /**\n     * Disable the setting fields.\n     *\n     * @protected\n     */\n    disable() {\n        this.disabled = true;\n        WebAuthnFormHandler.$button.fadeTo(100, 0.5);\n    }\n    /**\n     * Enable the setting fields.\n     *\n     * @protected\n     */\n    enable() {\n        this.disabled = false;\n        WebAuthnFormHandler.$button.fadeTo(100, 1);\n    }\n    /**\n     * Remove an excluded credential by its id.\n     *\n     * @param credentialId\n     */\n    static removeExcludedCredential(credentialId) {\n        const optionData = WebAuthnFormHandler.$button.data('credential-options');\n        let newExcluded = [];\n        for (const excluded of optionData.excludeCredentials) {\n            // Adjust for the proprietary base64 encode thing.\n            if (excluded.id.replace(/[-_=+\\/]/g, '') !== credentialId.replace(/[-_=+\\/]/g, '')) {\n                // @ts-ignore\n                newExcluded.push(excluded);\n            }\n        }\n        optionData.excludeCredentials = newExcluded;\n        WebAuthnFormHandler.$button.data('credential-options', optionData);\n    }\n}\nWebAuthnFormHandler.$button = $('#attach-webauthn');\n","import { AuthenticationChainHandler } from \"./AuthenticationChainHandler\";\nexport class LoginForm {\n    constructor() {\n        this.disabled = false;\n        Craft.AuthenticationChainHandler = new AuthenticationChainHandler(this, () => ({\n            rememberMe: this.$rememberMe.find('input').prop('checked'),\n        }));\n        if (this.$pendingSpinner.length) {\n            this.$loginForm.trigger('submit');\n        }\n    }\n    get $loginForm() { return $('#login-form'); }\n    get $errors() { return $('#login-errors'); }\n    get $messages() { return $('#login-messages'); }\n    get $spinner() { return $('#spinner'); }\n    get $pendingSpinner() { return $('#spinner-pending'); }\n    get $submit() { return $('#submit'); }\n    get $rememberMe() { return $('#remember-me-container'); }\n    get $username() { return $('#username-field input'); }\n    get $cancelRecover() { return $('#cancel-recover'); }\n    get $recoverAccount() { return $('#recover-account'); }\n    get canRememberUser() { return this.$loginForm.data('can-remember'); }\n    /**\n     * Show an error.\n     *\n     * @param error\n     */\n    showError(error) {\n        this.clearErrors();\n        $('<p style=\"display: none;\">' + error + '</p>')\n            .appendTo(this.$errors)\n            // @ts-ignore\n            .velocity('fadeIn');\n    }\n    /**\n     * Show a message.\n     *\n     * @param message\n     */\n    showMessage(message) {\n        this.clearMessages();\n        $('<p style=\"display: none;\">' + message + '</p>')\n            .appendTo(this.$messages)\n            // @ts-ignore\n            .velocity('fadeIn');\n    }\n    /**\n     * Clear all the errors.\n     *\n     * @protected\n     */\n    clearErrors() {\n        this.$errors.empty();\n    }\n    /**\n     * Clear all the messages.\n     *\n     * @protected\n     */\n    clearMessages() {\n        this.$messages.empty();\n    }\n    enableForm() {\n        this.$submit.addClass('active');\n        this.$spinner.addClass('hidden');\n        this.$loginForm.fadeTo(100, 1);\n        this.disabled = false;\n    }\n    disableForm() {\n        this.$submit.removeClass('active');\n        this.$spinner.removeClass('hidden');\n        this.$loginForm.fadeTo(100, 0.2);\n        this.disabled = true;\n    }\n    isDisabled() {\n        return this.disabled;\n    }\n    showRememberMe() {\n        if (this.canRememberUser) {\n            this.$loginForm.addClass('remember-me');\n            this.$rememberMe.removeClass('hidden');\n        }\n    }\n    hideRememberMe() {\n        this.$loginForm.removeClass('remember-me');\n        this.$rememberMe.addClass('hidden');\n    }\n    showSubmitButton() {\n        this.$submit.removeClass('hidden');\n    }\n    hideSubmitButton() {\n        this.$submit.addClass('hidden');\n    }\n}\nexport function addContainedJsFilesToPage(htmlContent) {\n    const jsFiles = htmlContent.match(/([^\"']+\\.js)/gm);\n    const existingSources = Array.from(document.scripts).map(node => node.getAttribute('src')).filter(val => val && val.length > 0);\n    // For some reason, Chrome will fail to load sourcemap properly when jQuery append is used\n    // So roll our own JS file append-thing.\n    if (jsFiles) {\n        for (const jsFile of jsFiles) {\n            if (!existingSources.includes(jsFile)) {\n                let node = document.createElement('script');\n                node.setAttribute('src', jsFile);\n                document.body.appendChild(node);\n            }\n        }\n        // If that fails, use Craft's thing.\n    }\n    else {\n        Craft.appendFootHtml(htmlContent);\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","WebAuthnFormHandler","constructor","this","attachEndpoint","disabled","$container","$","attachEvents","$button","on","ev","stopImmediatePropagation","optionData","target","data","keyCredentialOptions","assign","user","excludeCredentials","challenge","atob","replace","id","Uint8Array","from","c","charCodeAt","idx","excluded","type","createCredentials","then","credentials","Craft","elevatedSessionManager","requireElevatedSession","attachWebAuthnCredential","catch","err","console","log","disable","requestData","credentialName","prompt","t","rawId","response","attestationObject","btoa","String","fromCharCode","clientDataJSON","postActionRequest","textStatus","html","replaceWith","footHtml","htmlContent","jsFiles","match","existingSources","Array","document","scripts","map","node","getAttribute","filter","val","length","jsFile","includes","createElement","setAttribute","body","appendChild","appendFootHtml","addContainedJsFilesToPage","enable","async","navigator","create","publicKey","fadeTo","static","credentialId","newExcluded","push"],"sourceRoot":""}