"use strict";class WebAuthnFormHandler{constructor(){this.attachEndpoint="authentication/attach-web-authn-credentials",this.disabled=!1,this.$container=$("#webauthn-settings"),this.attachEvents()}attachEvents(){WebAuthnFormHandler.$button=$("#attach-webauthn"),WebAuthnFormHandler.$button.on("click",e=>{e.stopImmediatePropagation();const t=$(e.target).data("credential-options"),a=Object.assign(Object.assign({},t),{user:Object.assign({},t.user)});t.excludeCredentials&&(a.excludeCredentials=[...t.excludeCredentials]),a.challenge=atob(a.challenge.replace(/-/g,"+").replace(/_/g,"/")),a.user.id=atob(a.user.id.replace(/-/g,"+").replace(/_/g,"/")),a.challenge=Uint8Array.from(a.challenge,e=>e.charCodeAt(0)),a.user.id=Uint8Array.from(a.user.id,e=>e.charCodeAt(0));for(const e in a.excludeCredentials){let t=a.excludeCredentials[e];a.excludeCredentials[e]={id:Uint8Array.from(atob(t.id.replace(/-/g,"+").replace(/_/g,"/")),e=>e.charCodeAt(0)),type:t.type}}return this.createCredentials(a).then(e=>{Craft.elevatedSessionManager.requireElevatedSession(()=>this.attachWebAuthnCredential(e))}).catch(e=>{console.log(e)}),!1})}attachWebAuthnCredential(e){if(this.disabled)return!1;this.disable();const t={credentialName:prompt(Craft.t("app","Please enter a name for the credentials"),"Secure credentials"),credentials:{id:e.id,rawId:e.id,type:e.type,response:{attestationObject:btoa(String.fromCharCode(...new Uint8Array(e.response.attestationObject))),clientDataJSON:btoa(String.fromCharCode(...new Uint8Array(e.response.clientDataJSON)))}}};Craft.postActionRequest(this.attachEndpoint,t,(e,t)=>{if(e.html&&(this.$container.replaceWith(e.html),this.$container=$("#webauthn-settings"),this.attachEvents()),e.footHtml){const t=e.footHtml.match(/([^"']+\.js)/gm),a=Array.from(document.scripts).map(e=>e.getAttribute("src")).filter(e=>e&&e.length>0);if(t){for(const e of t)if(!a.includes(e)){let t=document.createElement("script");t.setAttribute("src",e),document.body.appendChild(t)}}else Craft.appendFootHtml(e.footHtml)}this.enable()})}async createCredentials(e){const t=await navigator.credentials.create({publicKey:e}).catch(e=>{console.log(e)});if(!t)throw"Failed to create credentials";return t}disable(){this.disabled=!0,WebAuthnFormHandler.$button.fadeTo(100,.5)}enable(){this.disabled=!1,WebAuthnFormHandler.$button.fadeTo(100,1)}static removeExcludedCredential(e){const t=WebAuthnFormHandler.$button.data("credential-options");let a=[];for(const n of t.excludeCredentials)n.id.replace(/[-_=+\/]/g,"")!==e.replace(/[-_=+\/]/g,"")&&a.push(n);t.excludeCredentials=a,WebAuthnFormHandler.$button.data("credential-options",t)}}WebAuthnFormHandler.$button=$("#attach-webauthn"),new WebAuthnFormHandler;
//# sourceMappingURL=WebAuthnFormHandler.min.js.map
