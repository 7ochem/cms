{"version":3,"sources":["updater/src/Updater.js"],"names":["$","Craft","Updater","Garnish","Base","extend","$graphic","$status","error","actionPrefix","init","parseStatus","escapeHtml","status","html","replace","showErrorDetails","this","appendTo","showStatus","data","id","class","details","postActionRequest","response","action","handleFatalError","complete","noop","textStatus","setState","removeClass","jqXHR","state","errorDetails","nextAction","showOptions","finished","$buttonContainer","options","onFinish","returnUrl","text","option","label","i","length","submit","addClass","email","url","attr","addListener","$button","getEmailLink","link","encodeURIComponent","subject","onOptionSelect","setTimeout","body","ev","window","location","getUrl","t","statusText","responseText","jQuery"],"mappings":"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","file":"Updater.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.Updater = Garnish.Base.extend({\n        $graphic: null,\n        $status: null,\n        error: null,\n        data: null,\n        actionPrefix: null,\n\n        init: function(actionPrefix) {\n            this.actionPrefix = actionPrefix;\n            this.$graphic = $('#graphic');\n            this.$status = $('#status');\n        },\n\n        parseStatus: function(status) {\n            return '<p>' +\n                Craft.escapeHtml(status)\n                    .replace(/\\n{2,}/g, '</p><p>')\n                    .replace(/\\n/g, '<br>')\n                    .replace(/`(.*?)`/g, '<code>$1</code>') +\n                '</p>';\n        },\n\n        showStatus: function(status) {\n            this.$status.html(this.parseStatus(status));\n        },\n\n        showError: function(error) {\n            this.$graphic.addClass('error');\n            this.showStatus(error);\n        },\n\n        showErrorDetails: function(details) {\n            $('<div/>', {id: 'error', 'class': 'code', html: this.parseStatus(details)}).appendTo(this.$status);\n        },\n\n        postActionRequest: function(action) {\n            var data = {\n                data: this.data\n            };\n\n            Craft.postActionRequest(this.actionPrefix + '/' + action, data, $.proxy(function(response, textStatus, jqXHR) {\n                if (textStatus === 'success') {\n                    this.setState(response);\n                } else {\n                    this.handleFatalError(jqXHR);\n                }\n            }, this), {\n                complete: $.noop\n            });\n        },\n\n        setState: function(state) {\n            this.$graphic.removeClass('error');\n\n            // Data probably won't be set if this is coming from an option\n            if (state.data) {\n                this.data = state.data;\n            }\n\n            if (state.status) {\n                this.showStatus(state.status);\n            } else if (state.error) {\n                this.showError(state.error);\n                if (state.errorDetails) {\n                    this.showErrorDetails(state.errorDetails);\n                }\n            }\n\n            if (state.nextAction) {\n                this.postActionRequest(state.nextAction);\n            } else if (state.options) {\n                this.showOptions(state);\n            } else if (state.finished) {\n                this.onFinish(state.returnUrl);\n            }\n        },\n\n        showOptions: function(state) {\n            var $buttonContainer = $('<div/>', {id: 'options', 'class': 'buttons'}).appendTo(this.$status);\n\n            for (var i = 0; i < state.options.length; i++) {\n                var option = state.options[i],\n                    $button = $('<a/>', {\n                        'class': 'btn big',\n                        text: option.label\n                    }).appendTo($buttonContainer);\n\n                if (option.submit) {\n                    $button.addClass('submit');\n                }\n\n                if (option.email) {\n                    $button.attr('href', this.getEmailLink(state, option));\n                } else if (option.url) {\n                    $button.attr('href', option.url);\n                    $button.attr('target', '_blank');\n                } else {\n                    $button.attr('role', 'button');\n                    this.addListener($button, 'click', option, 'onOptionSelect');\n                }\n            }\n        },\n\n        getEmailLink: function(state, option) {\n            var link = 'mailto:' + option.email +\n                '?subject=' + encodeURIComponent(option.subject || 'Craft update failure');\n\n            var body = 'Describe what happened here.';\n            if (state.errorDetails) {\n                body += '\\n\\n-----------------------------------------------------------\\n\\n' + state.errorDetails;\n            }\n            link += '&body=' + encodeURIComponent(body);\n\n            return link;\n        },\n\n        onOptionSelect: function(ev) {\n            this.setState(ev.data);\n        },\n\n        onFinish: function(returnUrl) {\n            this.$graphic.addClass('success');\n\n            // Redirect in a moment\n            setTimeout(function() {\n                if (returnUrl) {\n                    window.location = Craft.getUrl(returnUrl);\n                } else {\n                    window.location = Craft.getUrl('dashboard');\n                }\n            }, 750);\n        },\n\n        handleFatalError: function(jqXHR) {\n            var details = Craft.t('app', 'Status:') + ' ' + jqXHR.statusText + '\\n\\n' +\n                Craft.t('app', 'Response:') + ' ' + jqXHR.responseText + '\\n\\n';\n\n            this.setState({\n                error: Craft.t('app', 'A fatal error has occurred:'),\n                errorDetails: details,\n                options: [\n                    {\n                        label: Craft.t('app', 'Troubleshoot'),\n                        url: 'https://craftcms.com/guides/failed-updates'\n                    }, {\n                        label: Craft.t('app', 'Send for help'),\n                        email: 'support@craftcms.com'\n                    }\n                ]\n            });\n\n            // Tell Craft to disable maintenance mode\n            Craft.postActionRequest(this.actionPrefix + '/finish', {data: this.data});\n        }\n    });\n})(jQuery);\n"]}