!function(){var e;e=jQuery,Craft.SitesAdmin=Garnish.Base.extend({$groups:null,$selectedGroup:null,init:function(){var t=this;this.$groups=e("#groups"),this.$selectedGroup=this.$groups.find("a.sel:first"),this.addListener(e("#newgroupbtn"),"activate","addNewGroup");var a=e("#groupsettingsbtn");a.length&&(a.data("menubtn").settings.onOptionSelect=function(a){var n=e(a);if(!n.hasClass("disabled"))switch(n.data("action")){case"rename":t.renameSelectedGroup();break;case"delete":t.deleteSelectedGroup()}})},addNewGroup:function(){var e=this;this.promptForGroupName("").then((function(t){if(t){var a={name:t};Craft.sendActionRequest("POST","sites/save-group",{data:a}).then((function(t){if(t.data.success)location.href=Craft.getUrl("settings/sites",{groupId:t.data.group.id});else{if(!t.data.errors)return Promise.reject();var a=e.flattenErrors(t.data.errors);alert(Craft.t("app","Could not create the group:")+"\n\n"+a.join("\n"))}})).catch((function(e){e.response,Craft.cp.displayError()}))}})).catch((function(){}))},renameSelectedGroup:function(){var e=this;this.promptForGroupName(this.$selectedGroup.data("raw-name")).then((function(t){var a={id:e.$selectedGroup.data("id"),name:t};Craft.sendActionRequest("POST","sites/save-group",{data:a}).then((function(a){if(a.data.success)e.$selectedGroup.text(a.data.group.name),e.$selectedGroup.data("raw-name",t),Craft.cp.displayNotice(Craft.t("app","Group renamed."));else{if(!a.data.errors)return Promise.reject();var n=e.flattenErrors(a.data.errors);alert(Craft.t("app","Could not rename the group:")+"\n\n"+n.join("\n"))}})).catch((function(e){e.response,Craft.cp.displayError()}))})).catch((function(){}))},promptForGroupName:function(t){return new Promise((function(a,n){Craft.sendActionRequest("POST","sites/rename-group-field",{data:{name:t}}).then((function(i){var s=e("<form/>",{class:"modal prompt"}).appendTo(Garnish.$bod),r=e("<div/>",{class:"body"}).append(i.data.html).appendTo(s),o=e("<div/>",{class:"buttons right"}).appendTo(r),d=e("<button/>",{type:"button",class:"btn",text:Craft.t("app","Cancel")}).appendTo(o);e("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","Save")}).appendTo(o),Craft.appendBodyHtml(i.data.js);var l=!1,c=new Garnish.Modal(s,{onShow:function(){setTimeout((function(){Craft.setFocusWithin(r)}),100)},onHide:function(){l||n()}});s.on("submit",(function(n){n.preventDefault();var i=e(".text",r).val();i&&i!==t&&(a(i),l=!0),c.hide()})),d.on("click",(function(){c.hide()}))}))}))},deleteSelectedGroup:function(){if(confirm(Craft.t("app","Are you sure you want to delete this group?"))){var e={id:this.$selectedGroup.data("id")};Craft.sendActionRequest("POST","sites/delete-group",{data:e}).then((function(e){e.data.success?location.href=Craft.getUrl("settings/sites"):Promise.reject()})).catch((function(e){e.response,Craft.cp.displayError()}))}},flattenErrors:function(e){var t=[];for(var a in e)e.hasOwnProperty(a)&&(t=t.concat(e[a]));return t}}),Craft.SiteAdminTable=Craft.AdminTable.extend({confirmDeleteModal:null,$rowToDelete:null,$deleteActionRadios:null,$deleteSubmitBtn:null,_deleting:!1,confirmDeleteItem:function(e){var t=this;return this.confirmDeleteModal&&(this.confirmDeleteModal.destroy(),delete this.confirmDeleteModal),this._createConfirmDeleteModal(e),Garnish.isMobileBrowser(!0)||setTimeout((function(){t.$deleteActionRadios.first().trigger("focus")}),100),!1},validateDeleteInputs:function(){var e=this.$deleteActionRadios.eq(0).prop("checked")||this.$deleteActionRadios.eq(1).prop("checked");return e?this.$deleteSubmitBtn.removeClass("disabled"):this.$deleteSubmitBtn.addClass("disabled"),e},submitDeleteSite:function(e){var t=this;if(e.preventDefault(),!this._deleting&&this.validateDeleteInputs()){this.$deleteSubmitBtn.addClass("loading"),this.disable(),this._deleting=!0;var a={id:this.getItemId(this.$rowToDelete)};this.$deleteActionRadios.eq(0).prop("checked")&&(a.transferContentTo=this.$transferSelect.val()),this.$deleteSubmitBtn.removeClass("loading"),Craft.sendActionRequest("POST",this.settings.deleteAction,{data:a}).then((function(e){t._deleting=!1,t.enable(),t.confirmDeleteModal.hide(),t.handleDeleteItemSuccess(e.data,t.$rowToDelete)}))}},_createConfirmDeleteModal:function(t){this.$rowToDelete=t;var a=this.getItemId(t),n=this.getItemName(t),i=e('<form id="confirmdeletemodal" class="modal fitted" method="post" accept-charset="UTF-8"/>').appendTo(Garnish.$bod),s=e('<div class="body"><p>'+Craft.t("app","What do you want to do with any content that is only available in {language}?",{language:n})+'</p><div class="options"><label><input type="radio" name="contentAction" value="transfer"/> '+Craft.t("app","Transfer it to:")+'</label> <div id="transferselect" class="select"><select/></div></div><div><label><input type="radio" name="contentAction" value="delete"/> '+Craft.t("app","Delete it")+"</label></div></div>").appendTo(i),r=e('<div class="buttons right"/>').appendTo(s),o=e("<button/>",{type:"button",class:"btn",text:Craft.t("app","Cancel")}).appendTo(r);this.$deleteActionRadios=s.find("input[type=radio]"),this.$transferSelect=e("#transferselect").find("> select"),this.$deleteSubmitBtn=Craft.ui.createSubmitButton({class:"disabled",label:Craft.t("app","Delete {site}",{site:n}),spinner:!0}).appendTo(r);for(var d=0;d<Craft.sites.length;d++)Craft.sites[d].id!=a&&this.$transferSelect.append('<option value="'+Craft.sites[d].id+'">'+Craft.escapeHtml(Craft.sites[d].name)+"</option>");this.confirmDeleteModal=new Garnish.Modal(i),this.addListener(o,"click",(function(){this.confirmDeleteModal.hide()})),this.addListener(this.$deleteActionRadios,"change","validateDeleteInputs"),this.addListener(i,"submit","submitDeleteSite")}})}();
//# sourceMappingURL=sites.js.map