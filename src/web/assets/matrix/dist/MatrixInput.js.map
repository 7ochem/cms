{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      blockTypes: null,\n      blockTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddBlockMenu: false,\n      addBlockBtnGroupWidth: null,\n      addBlockBtnContainerWidth: null,\n\n      $container: null,\n      $form: null,\n      $blockContainer: null,\n      $addBlockBtnContainer: null,\n      $addBlockBtnGroup: null,\n      $addBlockBtnGroupBtns: null,\n      $statusMessage: null,\n\n      blockSort: null,\n      blockSelect: null,\n      totalNewBlocks: 0,\n\n      init: function (id, blockTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.blockTypes = blockTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxBlocks value\n        if (typeof settings === 'number') {\n          settings = {maxBlocks: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$form = this.$container.closest('form');\n        this.$blockContainer = this.$container.children('.blocks');\n        this.$addBlockBtnContainer = this.$container.children('.buttons');\n        this.$addBlockBtnGroup =\n          this.$addBlockBtnContainer.children('.btngroup');\n        this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n        this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.setNewBlockBtn();\n\n        this.blockTypesByHandle = {};\n\n        var i;\n\n        for (i = 0; i < this.blockTypes.length; i++) {\n          var blockType = this.blockTypes[i];\n          this.blockTypesByHandle[blockType.handle] = blockType;\n        }\n\n        var $blocks = this.$blockContainer.children(),\n          collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n        this.blockSort = new Garnish.DragSort($blocks, {\n          handle: '> .actions > .move',\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.blockSort.$targetItem.hasClass('sel')) {\n              return this.blockSelect.getSelectedItems();\n            } else {\n              return this.blockSort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onSortChange: () => {\n            this.blockSelect.resetItemOrder();\n          },\n        });\n\n        this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n          multi: true,\n          vertical: true,\n          handle: '> .checkbox, > .titlebar',\n          checkboxMode: true,\n        });\n\n        for (i = 0; i < $blocks.length; i++) {\n          var $block = $($blocks[i]),\n            blockId = $block.data('id');\n\n          // Is this a new block?\n          var newMatch =\n            typeof blockId === 'string' && blockId.match(/new(\\d+)/);\n\n          if (newMatch && newMatch[1] > this.totalNewBlocks) {\n            this.totalNewBlocks = parseInt(newMatch[1]);\n          }\n\n          var block = new MatrixBlock(this, $block);\n\n          if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n            block.collapse();\n          }\n        }\n\n        this.addListener(this.$addBlockBtnGroupBtns, 'click', function (ev) {\n          var type = $(ev.target).data('type');\n          this.addBlock(type);\n        });\n\n        if (this.$addBlockMenuBtn.length) {\n          new Garnish.MenuBtn(this.$addBlockMenuBtn, {\n            onOptionSelect: (option) => {\n              this.addBlock($(option).data('type'));\n            },\n          });\n        }\n\n        this.updateAddBlockBtn();\n\n        this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n        Garnish.$doc.ready(this.setNewBlockBtn.bind(this));\n\n        this.trigger('afterInit');\n      },\n\n      setNewBlockBtn: function () {\n        // Do we know what the button group width is yet?\n        if (!this.addBlockBtnGroupWidth) {\n          this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n          if (!this.addBlockBtnGroupWidth) {\n            return;\n          }\n        }\n\n        // Only check if the container width has resized\n        if (\n          this.addBlockBtnContainerWidth !==\n          (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())\n        ) {\n          if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n            if (!this.showingAddBlockMenu) {\n              this.$addBlockBtnGroup.addClass('hidden');\n              this.$addBlockMenuBtn.removeClass('hidden');\n              this.showingAddBlockMenu = true;\n            }\n          } else {\n            if (this.showingAddBlockMenu) {\n              this.$addBlockMenuBtn.addClass('hidden');\n              this.$addBlockBtnGroup.removeClass('hidden');\n              this.showingAddBlockMenu = false;\n\n              // Because Safari is awesome\n              if (navigator.userAgent.indexOf('Safari') !== -1) {\n                Garnish.requestAnimationFrame(() => {\n                  this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                  Garnish.requestAnimationFrame(() => {\n                    this.$addBlockBtnGroup.css('opacity', '');\n                  });\n                });\n              }\n            }\n          }\n        }\n      },\n\n      canAddMoreBlocks: function () {\n        return (\n          !this.maxBlocks ||\n          this.$blockContainer.children().length < this.maxBlocks\n        );\n      },\n\n      updateAddBlockBtn: function () {\n        var i, block;\n\n        if (this.canAddMoreBlocks()) {\n          this.$addBlockBtnGroup.removeClass('disabled');\n          this.$addBlockMenuBtn.removeClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).removeAttr('aria-disabled');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .removeClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .removeAttr('aria-disabled');\n            }\n          }\n        } else {\n          this.$addBlockBtnGroup.addClass('disabled');\n          this.$addBlockMenuBtn.addClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).attr('aria-disabled', 'true');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .addClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .attr('aria-disabled', 'true');\n            }\n          }\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreBlocks()) {\n          message = Craft.t(\n            'app',\n            'Matrix block could not be added. Maximum number of blocks reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      addBlock: function (type, $insertBefore, autofocus) {\n        if (!this.canAddMoreBlocks()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        this.totalNewBlocks++;\n\n        var id = 'new' + this.totalNewBlocks;\n        const actionMenuId = `matrixblock-action-menu-${id}`;\n\n        var html = `\n                <div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\">\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[sortOrder][]\" value=\"${id}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][type]\" value=\"${type}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][enabled]\" value=\"1\"/>\n                  <div class=\"titlebar\">\n                    <div class=\"blocktype\">${\n                      this.getBlockTypeByHandle(type).name\n                    }</div>\n                    <div class=\"preview\"></div>\n                  </div>\n                  <div class=\"checkbox\" title=\"${Craft.t(\n                    'app',\n                    'Select'\n                  )}\"></div>\n                  <div class=\"actions\">\n                    <div class=\"status off\" title=\"${Craft.t(\n                      'app',\n                      'Disabled'\n                    )}\"></div>\n                    <div>\n                      <button type=\"button\" class=\"btn settings icon menubtn\" title=\"${Craft.t(\n                        'app',\n                        'Actions'\n                      )}\" aria-controls=\"${actionMenuId}\" data-disclosure-trigger></button>\n                        <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\">\n                         <ul class=\"padded\">\n                            <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Collapse'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Collapse'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Expand'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Expand'\n        )}</a></li>\n                            <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Disable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Disable'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Enable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Enable'\n        )}</a></li>\n                            <li><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move up'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move up'\n        )}</a></li>\n                            <li><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move down'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move down'\n        )}</a></li>\n                          </ul>`;\n\n        if (!this.settings.staticBlocks) {\n          html += `\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">\n                            <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Delete'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n            'app',\n            'Delete'\n          )}</a></li>\n                          </ul>\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">`;\n\n          for (var i = 0; i < this.blockTypes.length; i++) {\n            var blockType = this.blockTypes[i];\n            html += `\n                            <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${\n                              blockType.handle\n                            }\" href=\"#\" aria-label=\"${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}\" type=\"button\" role=\"button\">${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}</a></li>`;\n          }\n\n          html += `\n                          </ul>`;\n        }\n\n        html += `\n                        </div>\n                      </div>\n                    <a class=\"move icon\" title=\"${Craft.t(\n                      'app',\n                      'Reorder'\n                    )}\" role=\"button\"></a>\n                  </div>\n                </div>`;\n\n        var $block = $(html);\n\n        // Pause the draft editor\n        const elementEditor = this.$form.data('elementEditor');\n        if (elementEditor) {\n          elementEditor.pause();\n        }\n\n        if ($insertBefore) {\n          $block.insertBefore($insertBefore);\n        } else {\n          $block.appendTo(this.$blockContainer);\n        }\n\n        var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n          bodyHtml = this.getParsedBlockHtml(\n            this.blockTypesByHandle[type].bodyHtml,\n            id\n          ),\n          js = this.getParsedBlockHtml(this.blockTypesByHandle[type].js, id);\n\n        $(bodyHtml).appendTo($fieldsContainer);\n\n        this.trigger('blockAdded', {\n          $block: $block,\n        });\n\n        // Animate the block into position\n        $block.css(this.getHiddenBlockCss($block)).velocity(\n          {\n            opacity: 1,\n            'margin-bottom': 10,\n          },\n          'fast',\n          () => {\n            $block.css('margin-bottom', '');\n            Garnish.$bod.append(js);\n            Craft.initUiElements($fieldsContainer);\n            new MatrixBlock(this, $block);\n            this.blockSort.addItems($block);\n            this.blockSelect.addItems($block);\n            this.updateAddBlockBtn();\n\n            Garnish.requestAnimationFrame(() => {\n              if (typeof autofocus === 'undefined' || autofocus) {\n                // Scroll to the block\n                Garnish.scrollContainerToElement($block);\n                // Focus on the first text input\n                $block.find('.text,[contenteditable]').first().trigger('focus');\n              }\n\n              // Resume the draft editor\n              if (elementEditor) {\n                elementEditor.resume();\n              }\n            });\n          }\n        );\n      },\n\n      getBlockTypeByHandle: function (handle) {\n        for (var i = 0; i < this.blockTypes.length; i++) {\n          if (this.blockTypes[i].handle === handle) {\n            return this.blockTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedBlocks: function () {\n        this.callOnSelectedBlocks('collapse');\n      },\n\n      expandSelectedBlocks: function () {\n        this.callOnSelectedBlocks('expand');\n      },\n\n      disableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('disable');\n      },\n\n      enableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('enable');\n      },\n\n      deleteSelectedBlocks: function () {\n        this.callOnSelectedBlocks('selfDestruct');\n      },\n\n      callOnSelectedBlocks: function (fn) {\n        for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n          this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n        }\n      },\n\n      getHiddenBlockCss: function ($block) {\n        return {\n          opacity: 0,\n          marginBottom: -$block.outerHeight(),\n        };\n      },\n\n      getParsedBlockHtml: function (html, id) {\n        if (typeof html === 'string') {\n          return html.replace(\n            new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'),\n            id\n          );\n        } else {\n          return '';\n        }\n      },\n\n      get maxBlocks() {\n        return this.settings.maxBlocks;\n      },\n    },\n    {\n      defaults: {\n        placeholderKey: null,\n        maxBlocks: null,\n        staticBlocks: false,\n      },\n\n      collapsedBlockStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n      getCollapsedBlockIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedBlockIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedBlockStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n          if ($.inArray('' + id, collapsedBlocks) === -1) {\n            collapsedBlocks.push(id);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n\n      forgetCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n            collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n          if (collapsedBlocksIndex !== -1) {\n            collapsedBlocks.splice(collapsedBlocksIndex, 1);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n    }\n  );\n\n  var MatrixBlock = Garnish.Base.extend({\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    actionDisclosure: null,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('block', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substring(0, 3) === 'new');\n\n      const $actionMenuBtn = this.$container.find(\n        '> .actions [data-disclosure-trigger]'\n      );\n      const actionDisclosure =\n        $actionMenuBtn.data('trigger') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        if (this.$container.prev('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .addClass('hidden');\n        }\n        if (this.$container.next('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .addClass('hidden');\n        }\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('a[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'click',\n        this.handleActionClick\n      );\n      this.addListener(\n        this.$actionMenuOptions,\n        'keydown',\n        this.handleActionKeydown\n      );\n\n      // Was this block already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        ev.preventDefault();\n        this.toggle();\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      var previewHtml = '',\n        $fields = this.$fieldsContainer.children().children();\n\n      for (var i = 0; i < $fields.length; i++) {\n        var $field = $($fields[i]),\n          $inputs = $field\n            .children('.input')\n            .find('select,input[type!=\"hidden\"],textarea,.label'),\n          inputPreviewText = '';\n\n        for (var j = 0; j < $inputs.length; j++) {\n          var $input = $($inputs[j]),\n            value;\n\n          if ($input.hasClass('label')) {\n            var $maybeLightswitchContainer = $input.parent().parent();\n\n            if (\n              $maybeLightswitchContainer.hasClass('lightswitch') &&\n              (($maybeLightswitchContainer.hasClass('on') &&\n                $input.hasClass('off')) ||\n                (!$maybeLightswitchContainer.hasClass('on') &&\n                  $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(Garnish.getInputPostVal($input));\n          }\n\n          if (value instanceof Array) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.trim(Craft.escapeHtml(value));\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate && !Garnish.prefersReducedMotion()) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 32}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 32});\n      }\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[blocks][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      var collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      var expandedContainerHeight = this.$container.height();\n      var displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n\n      const animationDuration = Garnish.prefersReducedMotion() ? 0 : 'fast';\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        animationDuration,\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n        }\n      );\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n          collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n        if (collapsedBlocksIndex !== -1) {\n          collapsedBlocks.splice(collapsedBlocksIndex, 1);\n          Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n    },\n\n    moveUp: function () {\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n    },\n\n    moveDown: function () {\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    handleActionKeydown: function (event) {\n      const keyCode = event.keyCode;\n\n      if (keyCode !== Garnish.SPACE_KEY) return;\n\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.blockSelect.totalSelected > 1 &&\n          this.matrix.blockSelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedBlocks();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedBlocks();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedBlocks();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedBlocks();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          var type = $option.data('type');\n          this.matrix.addBlock(type, this.$container);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected blocks?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedBlocks();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure.hide();\n    },\n\n    selfDestruct: function () {\n      // Pause the draft editor\n      if (this.matrix.$form.data('elementEditor')) {\n        this.matrix.$form.data('elementEditor').pause();\n      }\n\n      this.$container.velocity(\n        this.matrix.getHiddenBlockCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddBlockBtn();\n\n          // Resume the draft editor\n          if (this.matrix.$form.data('elementEditor')) {\n            this.matrix.$form.data('elementEditor').resume();\n          }\n\n          this.matrix.trigger('blockDeleted', {\n            $block: this.$container,\n          });\n        }\n      );\n    },\n  });\n})(jQuery);\n"],"names":["$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$form","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","$statusMessage","blockSort","blockSelect","totalNewBlocks","init","settings","i","this","formatInputId","maxBlocks","setSettings","defaults","closest","children","$addBlockMenuBtn","find","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","MenuBtn","onOptionSelect","option","updateAddBlockBtn","$doc","ready","bind","trigger","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","each","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","empty","t","setTimeout","text","$insertBefore","autofocus","actionMenuId","html","getBlockTypeByHandle","name","staticBlocks","elementEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","js","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","actionDisclosure","isNew","collapsed","substring","$actionMenuBtn","DisclosureMenu","on","prev","next","$actionMenuOptions","handleActionClick","handleActionKeydown","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","value","$input","$maybeLightswitchContainer","getText","getInputPostVal","Array","trim","escapeHtml","prefersReducedMotion","duration","height","show","hide","val","collapsedContainerHeight","expandedContainerHeight","displayValue","display","animationDuration","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","keyCode","SPACE_KEY","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"sourceRoot":""}