{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    /**\n     * Matrix input class\n     */\n    Craft.MatrixInput = Garnish.Base.extend({\n        id: null,\n        blockTypes: null,\n        blockTypesByHandle: null,\n        inputNamePrefix: null,\n        inputIdPrefix: null,\n\n        showingAddBlockMenu: false,\n        addBlockBtnGroupWidth: null,\n        addBlockBtnContainerWidth: null,\n\n        $container: null,\n        $form: null,\n        $blockContainer: null,\n        $addBlockBtnContainer: null,\n        $addBlockBtnGroup: null,\n        $addBlockBtnGroupBtns: null,\n        $statusMessage: null,\n\n        blockSort: null,\n        blockSelect: null,\n        totalNewBlocks: 0,\n\n        init: function(id, blockTypes, inputNamePrefix, settings) {\n            this.id = id;\n            this.blockTypes = blockTypes;\n            this.inputNamePrefix = inputNamePrefix;\n            this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n            // see if settings was actually set to the maxBlocks value\n            if (typeof settings === 'number') {\n                settings = {maxBlocks: settings};\n            }\n            this.setSettings(settings, Craft.MatrixInput.defaults);\n\n            this.$container = $('#' + this.id);\n            this.$form = this.$container.closest('form');\n            this.$blockContainer = this.$container.children('.blocks');\n            this.$addBlockBtnContainer = this.$container.children('.buttons');\n            this.$addBlockBtnGroup = this.$addBlockBtnContainer.children('.btngroup');\n            this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n            this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n            this.$statusMessage = this.$container.find('[data-status-message]');\n\n            this.$container.data('matrix', this);\n\n            this.setNewBlockBtn();\n\n            this.blockTypesByHandle = {};\n\n            var i;\n\n            for (i = 0; i < this.blockTypes.length; i++) {\n                var blockType = this.blockTypes[i];\n                this.blockTypesByHandle[blockType.handle] = blockType;\n            }\n\n            var $blocks = this.$blockContainer.children(),\n                collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n            this.blockSort = new Garnish.DragSort($blocks, {\n                handle: '> .actions > .move',\n                axis: 'y',\n                filter: () => {\n                    // Only return all the selected items if the target item is selected\n                    if (this.blockSort.$targetItem.hasClass('sel')) {\n                        return this.blockSelect.getSelectedItems();\n                    } else {\n                        return this.blockSort.$targetItem;\n                    }\n                },\n                collapseDraggees: true,\n                magnetStrength: 4,\n                helperLagBase: 1.5,\n                helperOpacity: 0.9,\n                onSortChange: () => {\n                    this.blockSelect.resetItemOrder();\n                },\n            });\n\n            this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n                multi: true,\n                vertical: true,\n                handle: '> .checkbox, > .titlebar',\n                checkboxMode: true\n            });\n\n            for (i = 0; i < $blocks.length; i++) {\n                var $block = $($blocks[i]),\n                    blockId = $block.data('id');\n\n                // Is this a new block?\n                var newMatch = (typeof blockId === 'string' && blockId.match(/new(\\d+)/));\n\n                if (newMatch && newMatch[1] > this.totalNewBlocks) {\n                    this.totalNewBlocks = parseInt(newMatch[1]);\n                }\n\n                var block = new MatrixBlock(this, $block);\n\n                if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n                    block.collapse();\n                }\n            }\n\n            this.addListener(this.$addBlockBtnGroupBtns, 'click', function(ev) {\n                var type = $(ev.target).data('type');\n                this.addBlock(type);\n            });\n\n            new Garnish.MenuBtn(this.$addBlockMenuBtn,\n                {\n                    onOptionSelect: option => {\n                        this.addBlock($(option).data('type'));\n                    },\n                });\n\n            this.updateAddBlockBtn();\n\n            this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n            Garnish.$doc.ready(this.setNewBlockBtn.bind(this));\n\n            this.trigger('afterInit');\n        },\n\n        setNewBlockBtn: function() {\n            // Do we know what the button group width is yet?\n            if (!this.addBlockBtnGroupWidth) {\n                this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n                if (!this.addBlockBtnGroupWidth) {\n                    return;\n                }\n            }\n\n            // Only check if the container width has resized\n            if (this.addBlockBtnContainerWidth !== (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())) {\n                if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n                    if (!this.showingAddBlockMenu) {\n                        this.$addBlockBtnGroup.addClass('hidden');\n                        this.$addBlockMenuBtn.removeClass('hidden');\n                        this.showingAddBlockMenu = true;\n                    }\n                } else {\n                    if (this.showingAddBlockMenu) {\n                        this.$addBlockMenuBtn.addClass('hidden');\n                        this.$addBlockBtnGroup.removeClass('hidden');\n                        this.showingAddBlockMenu = false;\n\n                        // Because Safari is awesome\n                        if (navigator.userAgent.indexOf('Safari') !== -1) {\n                            Garnish.requestAnimationFrame(() => {\n                                this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                                Garnish.requestAnimationFrame(() => {\n                                    this.$addBlockBtnGroup.css('opacity', '');\n                                });\n                            });\n                        }\n                    }\n                }\n            }\n        },\n\n        canAddMoreBlocks: function() {\n            return (!this.maxBlocks || this.$blockContainer.children().length < this.maxBlocks);\n        },\n\n        updateAddBlockBtn: function() {\n            var i, block;\n\n            if (this.canAddMoreBlocks()) {\n                this.$addBlockBtnGroup.removeClass('disabled');\n                this.$addBlockMenuBtn.removeClass('disabled');\n\n                this.$addBlockBtnGroupBtns.each(function () {\n                    $(this).removeAttr('aria-disabled');\n                });\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().removeClass('disabled');\n                        block.$actionMenu.find('a[data-action=add]').removeAttr('aria-disabled');\n                    }\n                }\n            } else {\n                this.$addBlockBtnGroup.addClass('disabled');\n                this.$addBlockMenuBtn.addClass('disabled');\n\n                this.$addBlockBtnGroupBtns.each(function () {\n                    $(this).attr('aria-disabled', 'true');\n                });\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().addClass('disabled');\n                        block.$actionMenu.find('a[data-action=add]').attr('aria-disabled', 'true');\n                    }\n                }\n            }\n        },\n\n        updateStatusMessage: function() {\n            this.$statusMessage.empty();\n            let message;\n\n            if (!this.canAddMoreBlocks()) {\n                message = Craft.t('app', 'Matrix block could not be added. Maximum number of blocks reached.');\n            }\n\n            setTimeout(() => {\n                this.$statusMessage.text(message);\n            }, 250);\n\n        },\n\n        addBlock: function(type, $insertBefore, autofocus) {\n            if (!this.canAddMoreBlocks()) {\n                this.updateStatusMessage();\n                return;\n            }\n\n            this.totalNewBlocks++;\n\n            var id = 'new' + this.totalNewBlocks;\n            const actionMenuId = `matrixblock-action-menu-${id}`;\n\n            var html = `\n                <div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\">\n                  <input type=\"hidden\" name=\"${this.inputNamePrefix}[sortOrder][]\" value=\"${id}\"/>\n                  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][type]\" value=\"${type}\"/>\n                  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][enabled]\" value=\"1\"/>\n                  <div class=\"titlebar\">\n                    <div class=\"blocktype\">${this.getBlockTypeByHandle(type).name}</div>\n                    <div class=\"preview\"></div>\n                  </div>\n                  <div class=\"checkbox\" title=\"${Craft.t('app', 'Select')}\"></div>\n                  <div class=\"actions\">\n                    <div class=\"status off\" title=\"${Craft.t('app', 'Disabled')}\"></div>\n                    <div data-wrapper>\n                      <button type=\"button\" class=\"btn settings icon menubtn\" title=\"${Craft.t('app', 'Actions')}\" aria-controls=\"${ actionMenuId }\" data-disclosure-trigger></button>\n                        <div id=\"${ actionMenuId }\" class=\"menu menu--disclosure\">\n                         <ul class=\"padded\">\n                            <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" aria-label=\"${Craft.t('app', 'Collapse')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Collapse')}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" aria-label=\"${Craft.t('app', 'Expand')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Expand')}</a></li>\n                            <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" aria-label=\"${Craft.t('app', 'Disable')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Disable')}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" aria-label=\"${Craft.t('app', 'Enable')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Enable')}</a></li>\n                            <li><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" aria-label=\"${Craft.t('app', 'Move up')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Move up')}</a></li>\n                            <li><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" aria-label=\"${Craft.t('app', 'Move down')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Move down')}</a></li>\n                          </ul>`;\n\n                                if (!this.settings.staticBlocks) {\n                                    html += `\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">\n                            <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" aria-label=\"${Craft.t('app', 'Delete')}\" type=\"button\" role=\"button\">${Craft.t('app', 'Delete')}</a></li>\n                          </ul>\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">`;\n\n                                    for (var i = 0; i < this.blockTypes.length; i++) {\n                                        var blockType = this.blockTypes[i];\n                                        html += `\n                            <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${blockType.handle}\" href=\"#\" aria-label=\"${Craft.t('app', 'Add {type} above', {type: blockType.name})}\" type=\"button\" role=\"button\">${Craft.t('app', 'Add {type} above', {type: blockType.name})}</a></li>`;\n                                    }\n\n                                    html += `\n                          </ul>`\n                                }\n\n                                html += `\n                        </div>\n                      </div>\n                    <a class=\"move icon\" title=\"${Craft.t('app', 'Reorder')}\" role=\"button\"></a>\n                  </div>\n                </div>`;\n\n            var $block = $(html);\n\n            // Pause the draft editor\n            if (this.$form.data('elementEditor')) {\n                this.$form.data('elementEditor').pause();\n            }\n\n            if ($insertBefore) {\n                $block.insertBefore($insertBefore);\n            } else {\n                $block.appendTo(this.$blockContainer);\n            }\n\n            var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n                bodyHtml = this.getParsedBlockHtml(this.blockTypesByHandle[type].bodyHtml, id),\n                js = this.getParsedBlockHtml(this.blockTypesByHandle[type].js, id);\n\n            $(bodyHtml).appendTo($fieldsContainer);\n\n            this.trigger('blockAdded', {\n                $block: $block\n            });\n\n            // Animate the block into position\n            $block.css(this.getHiddenBlockCss($block)).velocity({\n                opacity: 1,\n                'margin-bottom': 10\n            }, 'fast', () => {\n                $block.css('margin-bottom', '');\n                Garnish.$bod.append(js);\n                Craft.initUiElements($fieldsContainer);\n                new MatrixBlock(this, $block);\n                this.blockSort.addItems($block);\n                this.blockSelect.addItems($block);\n                this.updateAddBlockBtn();\n\n                Garnish.requestAnimationFrame(() => {\n                    if (typeof autofocus === 'undefined' || autofocus) {\n                        // Scroll to the block\n                        Garnish.scrollContainerToElement($block);\n                        // Focus on the first text input\n                        $block.find('.text,[contenteditable]').first().trigger('focus');\n                    }\n\n                    // Resume the draft editor\n                    if (this.$form.data('elementEditor')) {\n                        this.$form.data('elementEditor').resume();\n                    }\n                });\n            });\n        },\n\n        getBlockTypeByHandle: function(handle) {\n            for (var i = 0; i < this.blockTypes.length; i++) {\n                if (this.blockTypes[i].handle === handle) {\n                    return this.blockTypes[i];\n                }\n            }\n        },\n\n        collapseSelectedBlocks: function() {\n            this.callOnSelectedBlocks('collapse');\n        },\n\n        expandSelectedBlocks: function() {\n            this.callOnSelectedBlocks('expand');\n        },\n\n        disableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('disable');\n        },\n\n        enableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('enable');\n        },\n\n        deleteSelectedBlocks: function() {\n            this.callOnSelectedBlocks('selfDestruct');\n        },\n\n        callOnSelectedBlocks: function(fn) {\n            for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n                this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n            }\n        },\n\n        getHiddenBlockCss: function($block) {\n            return {\n                opacity: 0,\n                marginBottom: -($block.outerHeight())\n            };\n        },\n\n        getParsedBlockHtml: function(html, id) {\n            if (typeof html === 'string') {\n                return html.replace(new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'), id);\n            } else {\n                return '';\n            }\n        },\n\n        get maxBlocks() {\n            return this.settings.maxBlocks;\n        },\n    }, {\n        defaults: {\n            placeholderKey: null,\n            maxBlocks: null,\n            staticBlocks: false,\n        },\n\n        collapsedBlockStorageKey: 'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n        getCollapsedBlockIds: function() {\n            if (typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] === 'string') {\n                return Craft.filterArray(localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(','));\n            } else {\n                return [];\n            }\n        },\n\n        setCollapsedBlockIds: function(ids) {\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey] = ids.join(',');\n        },\n\n        rememberCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n                if ($.inArray('' + id, collapsedBlocks) === -1) {\n                    collapsedBlocks.push(id);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        },\n\n        forgetCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        }\n    });\n\n    var MatrixBlock = Garnish.Base.extend({\n        matrix: null,\n        $container: null,\n        $titlebar: null,\n        $fieldsContainer: null,\n        $previewContainer: null,\n        $actionMenu: null,\n        $collapsedInput: null,\n\n        actionDisclosure: null,\n\n        isNew: null,\n        id: null,\n\n        collapsed: false,\n\n        init: function(matrix, $container) {\n            this.matrix = matrix;\n            this.$container = $container;\n            this.$titlebar = $container.children('.titlebar');\n            this.$previewContainer = this.$titlebar.children('.preview');\n            this.$fieldsContainer = $container.children('.fields');\n\n            this.$container.data('block', this);\n\n            this.id = this.$container.data('id');\n            this.isNew = (!this.id || (typeof this.id === 'string' && this.id.substr(0, 3) === 'new'));\n\n            const $actionMenuBtn = this.$container.find('> .actions [data-disclosure-trigger]'),\n                actionDisclosure = new Garnish.DisclosureMenu($actionMenuBtn);\n\n            this.$actionMenu = actionDisclosure.$container;\n            this.actionDisclosure = actionDisclosure;\n\n            actionDisclosure.on('show', () => {\n                this.$container.addClass('active');\n                if (this.$container.prev('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().addClass('hidden');\n                }\n                if (this.$container.next('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().addClass('hidden');\n                }\n            });\n\n            actionDisclosure.on('hide', () => {\n                this.$container.removeClass('active');\n            });\n\n            this.$actionMenuOptions = this.$actionMenu.find('a[data-action]');\n\n            this.addListener(this.$actionMenuOptions, 'click', this.handleActionClick);\n            this.addListener(this.$actionMenuOptions, 'keydown', this.handleActionKeydown);\n\n            // Was this block already collapsed?\n            if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n                this.collapse();\n            }\n\n            this._handleTitleBarClick = function(ev) {\n                ev.preventDefault();\n                this.toggle();\n            };\n\n            this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n        },\n\n        toggle: function() {\n            if (this.collapsed) {\n                this.expand();\n            } else {\n                this.collapse(true);\n            }\n        },\n\n        collapse: function(animate) {\n            if (this.collapsed) {\n                return;\n            }\n\n            this.$container.addClass('collapsed');\n\n            var previewHtml = '',\n                $fields = this.$fieldsContainer.children().children();\n\n            for (var i = 0; i < $fields.length; i++) {\n                var $field = $($fields[i]),\n                    $inputs = $field.children('.input').find('select,input[type!=\"hidden\"],textarea,.label'),\n                    inputPreviewText = '';\n\n                for (var j = 0; j < $inputs.length; j++) {\n                    var $input = $($inputs[j]),\n                        value;\n\n                    if ($input.hasClass('label')) {\n                        var $maybeLightswitchContainer = $input.parent().parent();\n\n                        if ($maybeLightswitchContainer.hasClass('lightswitch') && (\n                            ($maybeLightswitchContainer.hasClass('on') && $input.hasClass('off')) ||\n                            (!$maybeLightswitchContainer.hasClass('on') && $input.hasClass('on'))\n                        )) {\n                            continue;\n                        }\n\n                        value = $input.text();\n                    } else {\n                        value = Craft.getText(Garnish.getInputPostVal($input));\n                    }\n\n                    if (value instanceof Array) {\n                        value = value.join(', ');\n                    }\n\n                    if (value) {\n                        value = Craft.trim(Craft.escapeHtml(value));\n\n                        if (value) {\n                            if (inputPreviewText) {\n                                inputPreviewText += ', ';\n                            }\n\n                            inputPreviewText += value;\n                        }\n                    }\n                }\n\n                if (inputPreviewText) {\n                    previewHtml += (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n                }\n            }\n\n            this.$previewContainer.html(previewHtml);\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            if (animate) {\n                this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n                this.$container.velocity({height: 16}, 'fast');\n            } else {\n                this.$previewContainer.show();\n                this.$fieldsContainer.hide();\n                this.$container.css({height: 16});\n            }\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n            }, 200);\n\n            // Remember that?\n            if (!this.isNew) {\n                Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n            } else {\n                if (!this.$collapsedInput) {\n                    this.$collapsedInput = $('<input type=\"hidden\" name=\"' + this.matrix.inputNamePrefix + '[blocks][' + this.id + '][collapsed]\" value=\"1\"/>').appendTo(this.$container);\n                } else {\n                    this.$collapsedInput.val('1');\n                }\n            }\n\n            this.collapsed = true;\n        },\n\n        expand: function() {\n            if (!this.collapsed) {\n                return;\n            }\n\n            this.$container.removeClass('collapsed');\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            var collapsedContainerHeight = this.$container.height();\n            this.$container.height('auto');\n            this.$fieldsContainer.show();\n            var expandedContainerHeight = this.$container.height();\n            var displayValue = this.$fieldsContainer.css('display') || 'block';\n            this.$container.height(collapsedContainerHeight);\n            this.$fieldsContainer.hide().velocity('fadeIn', {duration: 'fast', display: displayValue});\n            this.$container.velocity({height: expandedContainerHeight}, 'fast', () => {\n                this.$previewContainer.html('');\n                this.$container.height('auto');\n            });\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n            }, 200);\n\n            // Remember that?\n            if (!this.isNew && typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n\n            if (!this.isNew) {\n                Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n            } else if (this.$collapsedInput) {\n                this.$collapsedInput.val('');\n            }\n\n            this.collapsed = false;\n        },\n\n        disable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n            this.$container.addClass('disabled');\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n            }, 200);\n\n            this.collapse(true);\n        },\n\n        enable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n            this.$container.removeClass('disabled');\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n            }, 200);\n        },\n\n        moveUp: function() {\n            let $prev = this.$container.prev('.matrixblock');\n            if ($prev.length) {\n                this.$container.insertBefore($prev);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        moveDown: function() {\n            let $next = this.$container.next('.matrixblock');\n            if ($next.length) {\n                this.$container.insertAfter($next);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        handleActionClick: function(event) {\n            event.preventDefault();\n            this.onActionSelect(event.target);\n        },\n\n        handleActionKeydown: function(event) {\n            const keyCode = event.keyCode;\n\n            if (keyCode !== Garnish.SPACE_KEY) return;\n\n            event.preventDefault();\n            this.onActionSelect(event.target);\n        },\n\n        onActionSelect: function(option) {\n            const batchAction = (this.matrix.blockSelect.totalSelected > 1 && this.matrix.blockSelect.isSelected(this.$container)),\n                $option = $(option);\n\n            switch ($option.data('action')) {\n                case 'collapse': {\n                    if (batchAction) {\n                        this.matrix.collapseSelectedBlocks();\n                    } else {\n                        this.collapse(true);\n                    }\n\n                    break;\n                }\n\n                case 'expand': {\n                    if (batchAction) {\n                        this.matrix.expandSelectedBlocks();\n                    } else {\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'disable': {\n                    if (batchAction) {\n                        this.matrix.disableSelectedBlocks();\n                    } else {\n                        this.disable();\n                    }\n\n                    break;\n                }\n\n                case 'enable': {\n                    if (batchAction) {\n                        this.matrix.enableSelectedBlocks();\n                    } else {\n                        this.enable();\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'moveUp': {\n                    this.moveUp();\n                    break;\n                }\n\n                case 'moveDown': {\n                    this.moveDown();\n                    break;\n                }\n\n                case 'add': {\n                    var type = $option.data('type');\n                    this.matrix.addBlock(type, this.$container);\n                    break;\n                }\n\n                case 'delete': {\n                    if (batchAction) {\n                        if (confirm(Craft.t('app', 'Are you sure you want to delete the selected blocks?'))) {\n                            this.matrix.deleteSelectedBlocks();\n                        }\n                    } else {\n                        this.selfDestruct();\n                    }\n\n                    break;\n                }\n            }\n\n            this.actionDisclosure.hide();\n        },\n\n        selfDestruct: function() {\n            // Pause the draft editor\n            if (this.matrix.$form.data('elementEditor')) {\n                this.matrix.$form.data('elementEditor').pause();\n            }\n\n            this.$container.velocity(this.matrix.getHiddenBlockCss(this.$container), 'fast', () => {\n                this.$container.remove();\n                this.matrix.updateAddBlockBtn();\n\n                // Resume the draft editor\n                if (this.matrix.$form.data('elementEditor')) {\n                    this.matrix.$form.data('elementEditor').resume();\n                }\n\n                this.matrix.trigger('blockDeleted', {\n                    $block: this.$container,\n                });\n            });\n        }\n    });\n})(jQuery);\n"],"names":["$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$form","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","$statusMessage","blockSort","blockSelect","totalNewBlocks","init","settings","i","this","formatInputId","maxBlocks","setSettings","defaults","closest","children","$addBlockMenuBtn","find","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","MenuBtn","onOptionSelect","option","updateAddBlockBtn","$doc","ready","bind","trigger","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","each","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","empty","t","setTimeout","text","$insertBefore","autofocus","actionMenuId","html","getBlockTypeByHandle","name","staticBlocks","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","js","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","actionDisclosure","isNew","collapsed","substr","$actionMenuBtn","DisclosureMenu","on","prev","next","$actionMenuOptions","handleActionClick","handleActionKeydown","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","value","$input","$maybeLightswitchContainer","getText","getInputPostVal","Array","trim","escapeHtml","duration","height","show","hide","val","collapsedContainerHeight","expandedContainerHeight","displayValue","display","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","keyCode","SPACE_KEY","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"sourceRoot":""}