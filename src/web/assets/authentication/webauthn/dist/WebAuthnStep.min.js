"use strict";class WebAuthnStep extends AuthenticationStep{constructor(){super("craft\\authentication\\type\\mfa\\WebAuthn")}get $button(){return $("#verify-webauthn")}validate(){return this.$button.addClass("hidden"),!0}init(){this.$loginForm.trigger("submit"),this.$button.on("click",this.onButtonClick.bind(this)),this.$submit.addClass("hidden")}cleanup(){this.$button.off("click",this.onButtonClick.bind(this)),this.$submit.removeClass("hidden")}onButtonClick(){this.$loginForm.trigger("submit")}async returnFormData(){const t=this.$button.data("request-options"),e=Object.assign({},t);t.allowCredentials&&(e.allowCredentials=[...t.allowCredentials]),e.challenge=atob(e.challenge.replace(/-/g,"+").replace(/_/g,"/")),e.challenge=Uint8Array.from(e.challenge,t=>t.charCodeAt(0));for(const t in e.allowCredentials){let a=e.allowCredentials[t];e.allowCredentials[t]={id:Uint8Array.from(atob(a.id.replace(/-/g,"+").replace(/_/g,"/")),t=>t.charCodeAt(0)),type:a.type}}let a;try{a=await navigator.credentials.get({publicKey:e})}catch(t){throw this.$button.removeClass("hidden"),Craft.t("app","Failed to authenticate")}const n=a.response;return{credentialResponse:{id:a.id,rawId:a.id,response:{authenticatorData:btoa(String.fromCharCode(...new Uint8Array(n.authenticatorData))),clientDataJSON:btoa(String.fromCharCode(...new Uint8Array(n.clientDataJSON))),signature:btoa(String.fromCharCode(...new Uint8Array(n.signature))),userHandle:n.userHandle?btoa(String.fromCharCode(...new Uint8Array(n.userHandle))):null},type:a.type}}}}new WebAuthnStep;
//# sourceMappingURL=WebAuthnStep.min.js.map
