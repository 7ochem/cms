"use strict";class AuthenticationChainHandler{constructor(t){this.performAuthenticationEndpoint="authentication/perform-authentication",this.startAuthenticationEndpoint="authentication/start-authentication",this.authenticationSteps={},this.loginForm=t,this.attachListeners()}get $alternatives(){return $("#alternative-types")}get $authenticationStep(){return $("#authentication-step")}get $restartAuthentication(){return $("#restart-authentication")}get $startAuthentication(){return $("#start-authentication")}get $authenticationGreeting(){return $("#authentication-greeting")}attachListeners(){this.$alternatives.on("click","li",t=>{this.switchStep($(t.target).attr("rel"))}),this.$restartAuthentication.on("click",t=>{this.resetAuthenticationControls(),t.preventDefault()})}resetAuthenticationControls(){this.$authenticationStep.empty().attr("rel",""),this.$authenticationGreeting.remove(),this.$startAuthentication.removeClass("hidden"),this.loginForm.$rememberMeCheckbox.parents(".field").removeClass("hidden"),this.loginForm.$submit.removeClass("hidden"),this.hideAlternatives(),this.clearErrors()}registerAuthenticationStep(t,e){this.authenticationSteps[t]=e}performStep(t,e){Craft.postActionRequest(t,e,this.processResponse.bind(this))}switchStep(t){this.loginForm.isDisabled()||(this.loginForm.disableForm(),Craft.postActionRequest(this.performAuthenticationEndpoint,{stepType:t,switch:!0},this.processResponse.bind(this)))}processResponse(t,e){var i,n,s;if("success"==e){if(t.success&&(null===(i=t.returnUrl)||void 0===i?void 0:i.length))return void(window.location.href=t.returnUrl);{if(t.error&&(this.loginForm.showError(t.error),Garnish.shake(this.loginForm.$loginForm)),t.message&&this.loginForm.showMessage(t.message),t.alternatives&&Object.keys(t.alternatives).length>0?this.showAlternatives(t.alternatives):this.hideAlternatives(),t.stepType&&this.$authenticationStep.attr("rel",t.stepType),t.footHtml){const e=t.footHtml.match(/([^"']+\.js)/gm),i=Array.from(document.scripts).map(t=>t.getAttribute("src")).filter(t=>t&&t.length>0);if(e){for(const t of e)if(!i.includes(t)){let e=document.createElement("script");e.setAttribute("src",t),document.body.appendChild(e)}}else Craft.appendFootHtml(t.footHtml)}const e=t=>{this.authenticationSteps[t]&&this.authenticationSteps[t].init()};t.html&&(null===(n=this.currentStep)||void 0===n||n.cleanup(),this.$authenticationStep.html(t.html),e(t.stepType)),t.loginFormHtml&&(null===(s=this.currentStep)||void 0===s||s.cleanup(),this.loginForm.$loginForm.html(t.loginFormHtml),this.attachListeners(),e(t.stepType)),t.stepComplete&&this.loginForm.$rememberMeCheckbox.parents(".field").addClass("hidden")}}this.loginForm.enableForm()}showAlternatives(t){this.$alternatives.removeClass("hidden");const e=this.$alternatives.find("ul").empty();for(const[i,n]of Object.entries(t))e.append($(`<li rel="${i}">${n}</li>`))}hideAlternatives(){this.$alternatives.addClass("hidden"),this.$alternatives.find("ul").empty()}handleFormSubmit(t,e){this.invokeStepHandler(t,e)}async invokeStepHandler(t,e){try{let t;if(this.isExistingChain()){const i=this.$authenticationStep.attr("rel"),n=this.authenticationSteps[i];t=Object.assign(Object.assign({},await n.prepareData()),e),this.currentStep=n}else t=e;if(this.loginForm.isDisabled())return;this.loginForm.disableForm(),this.performStep(this.isExistingChain()?this.performAuthenticationEndpoint:this.startAuthenticationEndpoint,t)}catch(t){this.loginForm.showError(t),this.loginForm.enableForm()}}isExistingChain(){return this.$authenticationStep.attr("rel").length>0}clearErrors(){this.loginForm.clearErrors()}}
//# sourceMappingURL=AuthenticationChainHandler.min.js.map
