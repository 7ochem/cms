"use strict";class Credentials extends AuthenticationStep{constructor(){super(),this.$loginNameInput=$("#loginName"),this.$passwordInput=$("#password"),this.stepType="craft\\authentication\\type\\Credentials";const t=this.$loginNameInput.parents("#recovery-container").length>0;Craft.LoginForm.registerStepHandler(this.prepareData.bind(this),t),new Craft.PasswordInput(this.$passwordInput,{onToggleInput:t=>{this.$passwordInput.off("input"),this.$passwordInput=t,this.$passwordInput.on("input",this.onInput.bind(this))}}),this.$loginNameInput.on("input",this.onInput.bind(this)),this.$passwordInput.on("input",this.onInput.bind(this))}validate(){const t=this.$loginNameInput.val();if(0===t.length)return window.useEmailAsUsername?Craft.t("app","Invalid email."):Craft.t("app","Invalid username or email.");if(window.useEmailAsUsername&&!t.match(".+@.+..+"))return Craft.t("app","Invalid email.");const a=this.$passwordInput.val().length;return a<window.minPasswordLength?Craft.t("yii","{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.",{attribute:Craft.t("app","Password"),min:window.minPasswordLength}):!(a>window.maxPasswordLength)||Craft.t("yii","{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.",{attribute:Craft.t("app","Password"),max:window.maxPasswordLength})}returnFormData(){return{loginName:this.$loginNameInput.val(),password:this.$passwordInput.val()}}}new Credentials;
//# sourceMappingURL=Credentials.min.js.map
