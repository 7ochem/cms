"use strict";class Credentials extends AuthenticationStep{constructor(){super("craft\\authentication\\type\\Credentials"),this.loginNameSelector="#loginName",this.passwordSelector="#password",new Craft.PasswordInput(this.passwordSelector,{onToggleInput:t=>{this.getPasswordInput().off("input"),this.getPasswordInput().replaceWith(t),this.getPasswordInput().on("input",this.onInput.bind(this))}}),this.$loginForm.on("input",this.loginNameSelector,this.onInput.bind(this)),this.$loginForm.on("input",this.passwordSelector,this.onInput.bind(this))}validate(){const t=this.getLoginNameInput().val();if(0===t.length)return window.useEmailAsUsername?Craft.t("app","Invalid email."):Craft.t("app","Invalid username or email.");if(window.useEmailAsUsername&&!t.match(".+@.+..+"))return Craft.t("app","Invalid email.");const a=this.getPasswordInput().val().length;return a<window.minPasswordLength?Craft.t("yii","{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.",{attribute:Craft.t("app","Password"),min:window.minPasswordLength}):!(a>window.maxPasswordLength)||Craft.t("yii","{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.",{attribute:Craft.t("app","Password"),max:window.maxPasswordLength})}returnFormData(){return{loginName:this.getLoginNameInput().val(),password:this.getPasswordInput().val()}}getLoginNameInput(){return this.$loginForm.find(this.loginNameSelector)}getPasswordInput(){return this.$loginForm.find(this.passwordSelector)}}new Credentials;
//# sourceMappingURL=Credentials.min.js.map
