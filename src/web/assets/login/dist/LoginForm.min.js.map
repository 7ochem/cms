{"version":3,"sources":["login/src/LoginForm.js"],"names":["LoginForm","constructor","$chainContainers","switchEndpoint","this","$","$loginForm","$errors","$messages","$spinner","$pendingSpinner","$submit","$rememberMeCheckbox","$cancelRecover","$recoverAccount","$alternatives","disabled","endpoints","container","id","data","bind","length","trigger","on","switchForm","ev","switchStep","target","attr","performStep","request","isDisabled","disableForm","prop","rememberMe","clearErrors","Craft","postActionRequest","getActiveContainer","processResponse","stepType","clearMessages","switch","textStatus","_a","response","success","returnUrl","location","href","error","Garnish","shake","message","showMessage","html","alternatives","Object","keys","hideAlternatives","footHtml","jsFiles","match","existingSources","Array","from","document","scripts","map","node","getAttribute","filter","val","jsFile","includes","createElement","setAttribute","body","appendChild","showAlternatives","stepComplete","parent","remove","enableForm","showError","appendTo","velocity","removeClass","$ul","find","empty","description","entries","append","addClass","invokeStepHandler","handler","toggleClass","containerId","fadeTo","not"],"mappings":"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","file":"LoginForm.min.js","sourcesContent":["\"use strict\";\nclass LoginForm {\n    constructor($chainContainers) {\n        this.switchEndpoint = 'authentication/switch-authentication-step';\n        this.$loginForm = $('#login-form');\n        this.$errors = $('#login-errors');\n        this.$messages = $('#login-messages');\n        this.$spinner = $('#spinner');\n        this.$pendingSpinner = $('#spinner-pending');\n        this.$submit = $('#submit');\n        this.$rememberMeCheckbox = $('#rememberMe');\n        this.$cancelRecover = $('#cancel-recover');\n        this.$recoverAccount = $('#recover-account');\n        this.$alternatives = $('#alternatives');\n        this.disabled = false;\n        this.endpoints = {};\n        for (const container of $chainContainers) {\n            this.endpoints[container.id] = $(container).data('endpoint');\n        }\n        this.$loginForm.on('submit', this.invokeStepHandler.bind(this));\n        if (this.$pendingSpinner.length) {\n            this.$loginForm.trigger('submit');\n        }\n        this.$recoverAccount.on('click', this.switchForm.bind(this));\n        this.$cancelRecover.on('click', this.switchForm.bind(this));\n        this.$alternatives.on('click', 'li', (ev) => {\n            this.switchStep($(ev.target).attr('rel'));\n        });\n    }\n    /**\n     * Perform the authentication step against the endpoint.\n     *\n     * @param request\n     * @param cb\n     */\n    performStep(request) {\n        if (this.isDisabled()) {\n            return;\n        }\n        this.disableForm();\n        if (this.$rememberMeCheckbox.prop('checked')) {\n            request.rememberMe = true;\n        }\n        this.clearMessages();\n        this.clearErrors();\n        Craft.postActionRequest(this.getActiveContainer().data('endpoint'), request, this.processResponse.bind(this));\n    }\n    /**\n     * Switch the current authentication step to an alternative.\n     *\n     * @param stepType\n     */\n    switchStep(stepType) {\n        if (this.isDisabled()) {\n            return;\n        }\n        this.disableForm();\n        Craft.postActionRequest(this.getActiveContainer().data('endpoint'), { stepType: stepType, switch: true }, this.processResponse.bind(this));\n    }\n    /**\n     * Process authentication response.\n     * @param response\n     * @param textStatus\n     * @protected\n     */\n    processResponse(response, textStatus) {\n        var _a;\n        if (textStatus == 'success') {\n            if (response.success && ((_a = response.returnUrl) === null || _a === void 0 ? void 0 : _a.length)) {\n                window.location.href = response.returnUrl;\n            }\n            else {\n                if (response.error) {\n                    this.showError(response.error);\n                    Garnish.shake(this.$loginForm);\n                }\n                if (response.message) {\n                    this.showMessage(response.message);\n                }\n                if (response.html) {\n                    this.getActiveContainer().html(response.html);\n                }\n                if (response.alternatives && Object.keys(response.alternatives).length > 0) {\n                    this.showAlternatives(response.alternatives);\n                }\n                else {\n                    this.hideAlternatives();\n                }\n                if (response.footHtml) {\n                    const jsFiles = response.footHtml.match(/([^\"']+\\.js)/gm);\n                    const existingSources = Array.from(document.scripts).map(node => node.getAttribute('src')).filter(val => val && val.length > 0);\n                    // For some reason, Chrome will fail to load sourcemap properly when jQuery append is used\n                    // So roll our own JS file append-thing.\n                    if (jsFiles) {\n                        for (const jsFile of jsFiles) {\n                            if (!existingSources.includes(jsFile)) {\n                                let node = document.createElement('script');\n                                node.setAttribute('src', jsFile);\n                                document.body.appendChild(node);\n                            }\n                        }\n                        // If that fails, use Craft's thing.\n                    }\n                    else {\n                        Craft.appendFootHtml(response.footHtml);\n                    }\n                }\n                // Just in case this was the first step, remove all the misc things.\n                if (response.stepComplete) {\n                    this.$rememberMeCheckbox.parent().remove();\n                    this.$cancelRecover.remove();\n                    this.$recoverAccount.remove();\n                }\n            }\n        }\n        this.enableForm();\n    }\n    /**\n     * Show an error.\n     *\n     * @param error\n     */\n    showError(error) {\n        this.clearErrors();\n        $('<p style=\"display: none;\">' + error + '</p>')\n            .appendTo(this.$errors)\n            // @ts-ignore\n            .velocity('fadeIn');\n    }\n    /**\n     * Show a message.\n     *\n     * @param message\n     */\n    showMessage(message) {\n        this.clearMessages();\n        $('<p style=\"display: none;\">' + message + '</p>')\n            .appendTo(this.$messages)\n            // @ts-ignore\n            .velocity('fadeIn');\n    }\n    showAlternatives(alternatives) {\n        this.$alternatives.removeClass('hidden');\n        const $ul = this.$alternatives.find('ul').empty();\n        for (const [stepType, description] of Object.entries(alternatives)) {\n            $ul.append($(`<li rel=\"${stepType}\">${description}</li>`));\n        }\n    }\n    hideAlternatives() {\n        this.$alternatives.addClass('hidden');\n        this.$alternatives.find('ul').empty();\n    }\n    /**\n     * Invoke the current step handler bound to the authentication container\n     * @param ev\n     */\n    invokeStepHandler(ev) {\n        const handler = this.getActiveContainer().data('handler');\n        if (typeof handler == \"function\") {\n            const data = handler(ev);\n            if (typeof data == \"object\") {\n                this.performStep(data);\n            }\n            else {\n                this.showError(data);\n            }\n        }\n        else {\n            this.performStep({});\n        }\n        return false;\n    }\n    /**\n     * Clear all the errors.\n     *\n     * @protected\n     */\n    clearErrors() {\n        this.$errors.empty();\n    }\n    /**\n     * Switch the displayed form between authentication and recovery.\n     *\n     * @protected\n     */\n    switchForm() {\n        this.$cancelRecover.toggleClass('hidden');\n        this.$recoverAccount.toggleClass('hidden');\n        for (const containerId of Object.keys(this.endpoints)) {\n            $('#' + containerId).toggleClass('hidden');\n        }\n    }\n    /**\n     * Clear all the messages.\n     *\n     * @protected\n     */\n    clearMessages() {\n        this.$messages.empty();\n    }\n    enableForm() {\n        this.$submit.addClass('active');\n        this.$spinner.addClass('hidden');\n        this.$loginForm.fadeTo(100, 1);\n        this.disabled = false;\n    }\n    disableForm() {\n        this.$submit.removeClass('active');\n        this.$spinner.removeClass('hidden');\n        this.$loginForm.fadeTo(100, 0.2);\n        this.disabled = true;\n    }\n    isDisabled() {\n        return this.disabled;\n    }\n    getActiveContainer() {\n        return $('.authentication-chain').not('.hidden');\n    }\n}\n"]}