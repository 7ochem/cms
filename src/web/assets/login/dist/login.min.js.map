{"version":3,"sources":["login/src/login.js"],"names":["$","LoginForm","Garnish","Base","extend","$form","$loginNameInput","$passwordFields","$passwordField","$passwordInput","$forgotPasswordLink","$rememberMeCheckbox","$sslIcon","$submitBtn","$spinner","passwordInputInterval","forgotPassword","loading","init","Craft","PasswordInput","removeListener","$newPasswordInput","addListener","this","hasClass","addClass","removeClass","$doc","setInterval","enable","trigger","validate","val","length","disable","onSubmit","event","preventDefault","$error","remove","submitForgotPassword","submitLogin","postActionRequest","response","data","loginName","proxy","textStatus","success","prop","window","onSubmitResponse","password","rememberMe","onForgetPassword","location","href","returnUrl","shake","showError","error","isMobileBrowser","t","insertAfter","attr","MessageSentModal","Modal","$container","appendTo","$bod","base","hide","jQuery"],"mappings":"CAAA,SAACA,GAEG,IAAAC,EAAAC,QAAAC,KAAAC,OAAA,CACIH,MAAS,KACTI,gBADgC,KAEhCC,gBAFgC,KAGhCC,eAAiB,KACjBC,eAJgC,KAKhCC,oBALgC,KAMhCC,oBANgC,KAOhCC,SAAAA,KACAC,WARgC,KAShCC,SAAY,KACZC,OAAU,KAGVC,sBAbgC,KAchCC,gBAAgB,EAChBC,SAAS,EAGLC,KAAKb,WACAC,KAAAA,MAAAA,EAAL,eACKC,KAAAA,gBAAoBP,EAAA,cACpBQ,KAAAA,gBAAmBR,EAAA,oBACnBS,KAAAA,eAAmBT,EAAA,mBACnBU,KAAAA,eAAuBV,EAAC,aACxBY,KAAAA,oBAALZ,EAAA,oBACKa,KAAAA,SAAeb,EAAA,aACfc,KAAAA,WAAad,EAAA,WACbW,KAAAA,SAAAA,EAAL,YAEIQ,KAAMC,oBAAmBX,EAAAA,eAErB,IAAKY,MAAAA,cAAoBZ,KAAAA,eAAgB,CACpCA,cAALT,EAAsBsB,OAAAA,SAAAA,GACjBC,KAAAA,eAAiBd,KAAAA,eAAyB,SAHpCe,KAAAf,eAAAa,EADnBE,KAAAD,YAAAC,KAAAf,eAAA,QAAA,cAQKc,QAGAA,KAAAA,YAAiBlB,KAAtBC,gBAAuC,QAEvC,YAJAkB,KAAKD,YAAYC,KAAKf,eAAgB,QAAS,YAK1Cc,KAAAA,YAAiBX,KAAAA,oBAAuB,QAAW,oBAChDY,KAAKZ,YAASa,KAAdpB,MAAuB,SAAa,YAD5CmB,KAAKD,YAAYC,KAAKZ,SAAU,aAAa,WAKpCC,KAAWa,SAASD,SAAzB,aAIID,KAAAX,WAAAa,SAAA,YAFRF,KAAKD,YAAYC,KAAKZ,SAAU,YAAY,WAKnCC,KAAWc,SAAAA,SAAhB,aAIIH,KAAAX,WAAAc,YAAA,YAFRH,KAAKD,YAAYC,KAAKZ,SAAU,aAAa,WAKpCC,KAAWa,SAASD,SAAzB,cAEAD,KAAAX,WAAAa,SAAA,UAOJF,KAAAD,YAAArB,QAAA0B,KAAA,WAAA,WANQJ,KAAKX,WAAWc,YAAY,UAO/BZ,KAAAA,eAAwBc,QAAaD,KAAD,kBAQrCJ,KAAKlB,sBAA0BuB,YAAKb,EAAAA,MAALQ,KAAuB,YAAKf,KAE3De,KAAKX,YAAWiB,KAAhBlB,SAAA,SAAA,WACOY,KAAPX,WAAAkB,QAAA,aAIAC,SAAO,WACV,OAAAR,KAAAlB,gBAAA2B,QAAAT,KAAAR,gBAAAQ,KAAAf,eAAAwB,MAAAC,QAAA,IAxF2BV,KAAAZ,SAAAkB,SA2FtBN,KAAAX,WAAgBiB,UACtB,IAPIN,KAAKZ,SAASuB,UAURH,KAAAA,WAAYG,WAClB,IAIJC,SAAKtB,SAASa,GAPdU,EAAMC,iBAWGC,KAAOC,aAIZhB,KAAKiB,WAAAA,SAAL,UADJjB,KAEOV,SAAAa,YAAA,UACHH,KAAKkB,SAAL,EA9GwBlB,KAAAe,QAkHhCE,KAAAA,OAAsBD,SAClBhB,KAAAR,eAIM2B,KAAAA,uBAEMC,KAAAA,gBAIHH,qBAAA,WACJ,IAAAI,EAAA,CAVDC,UAAWtB,KAAKlB,gBAAgB2B,OApHRd,MAAAwB,kBAAA,kCAAAE,EAAA7C,EAAA+C,OAAA,SAAAH,EAAAI,GAoIR,YAAXA,IACEJ,EAAAK,QACS3C,IAAAA,EAEHkB,KAAKb,UAAAA,EAAoBuC,QAK9BN,KAAAA,qBACAO,QAGAT,YAAKU,WAZjB,IAAIP,EAAO,CAeCC,UAAeF,KAAAA,gBAAfX,MACHoB,SAAA7B,KAAAf,eAAAwB,MACEqB,WAAA9B,KAAAb,oBAAAuC,KAAA,WAAA,IAAA,IAuBfK,OApBOpC,MAdHwB,kBAAA,cAAAE,EAAA7C,EAAA+C,OAAA,SAAAH,EAAAI,GAgBA,YAAAA,EA3J4BJ,EAAAK,QA8JdE,OAAAK,SAAWC,KAAAb,EAAAc,WAEXhC,QAASiC,MAAvBnC,KAAAnB,OACemB,KAAf4B,mBAIY5B,KAAAoC,UAAAhB,EAAAiB,QAdJrC,KAAK4B,qBAmBRb,QAGTgB,GAGIH,iBAAaU,WACTtC,KAAKlB,WAALqB,YAA6B,UAChCH,KAAAV,SAAAY,SAAA,UAjBDF,KAAKP,SAAU,GAqBd2C,UAAA,SAAAC,GAjBIA,IAmBLA,EAAWnC,MAASqC,EAAA,MAAA,6BAGflD,KAAAA,OAAWa,EAAAA,yCAAhBmC,EAAA,QAAAG,YAAAhE,EAAA,WAAAwB,KAAAnB,QACKQ,KAAAA,OAAWoD,SAAK,WAIrBV,iBAAA,SAAAlB,GACKL,EAAAA,iBAjMb9B,QAAA4D,mBAqMII,KAAAA,gBAA2BC,QAAR,SAKLC,KAAAA,QAL0B5C,KAAAe,OAAAC,SAYxCvC,KAAJI,MAAAqB,SAAA,kBApNJF,KAAAhB,eAAAgC,SA6LYhB,KAAKjB,gBAAgBiC,SACrBhB,KAAKX,WAAWa,SAAS,kBACzBF,KAAKX,WAAWoD,KAAK,QAAS9C,MAAM4C,EAAE,MAAO,mBAC7CvC,KAAKX,WAAWiB,SAChBN,KAAKZ,SAAS4B,SAEdhB,KAAKR,gBAAiB,EACtBQ,KAAKQ,cAITkC,EAAmBhE,QAAQiE,MAAM/D,OAAO,CACxCc,KAAM,WACF,IAAIkD,EAAapE,EAAE,0DAA4DmB,MAAM4C,EAAE,MAAO,6DAA+D,gBACxJM,SAASnE,QAAQoE,MAEtB9C,KAAK+C,KAAKH,IAGdI,KAAM,eAIV,IAAIvE,EApNR,CAqNGwE","file":"login.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var LoginForm = Garnish.Base.extend({\n        $form: null,\n        $loginNameInput: null,\n        $passwordFields: null,\n        $passwordField: null,\n        $passwordInput: null,\n        $forgotPasswordLink: null,\n        $rememberMeCheckbox: null,\n        $sslIcon: null,\n        $submitBtn: null,\n        $spinner: null,\n        $error: null,\n\n        passwordInputInterval: null,\n        forgotPassword: false,\n        loading: false,\n\n        init: function() {\n            this.$form = $('#login-form');\n            this.$loginNameInput = $('#loginName');\n            this.$passwordFields = $('#password-fields');\n            this.$passwordField = $('#password-field');\n            this.$passwordInput = $('#password');\n            this.$forgotPasswordLink = $('#forgot-password');\n            this.$sslIcon = $('#ssl-icon');\n            this.$submitBtn = $('#submit');\n            this.$spinner = $('#spinner');\n            this.$rememberMeCheckbox = $('#rememberMe');\n\n            new Craft.PasswordInput(this.$passwordInput, {\n                onToggleInput: $.proxy(function($newPasswordInput) {\n                    this.removeListener(this.$passwordInput, 'input');\n                    this.$passwordInput = $newPasswordInput;\n                    this.addListener(this.$passwordInput, 'input', 'validate');\n                }, this)\n            });\n\n            this.addListener(this.$loginNameInput, 'input', 'validate');\n            this.addListener(this.$passwordInput, 'input', 'validate');\n            this.addListener(this.$forgotPasswordLink, 'click', 'onForgetPassword');\n            this.addListener(this.$form, 'submit', 'onSubmit');\n\n            // Super hacky!\n            this.addListener(this.$sslIcon, 'mouseover', function() {\n                if (this.$sslIcon.hasClass('disabled')) {\n                    return;\n                }\n\n                this.$submitBtn.addClass('hover');\n            });\n            this.addListener(this.$sslIcon, 'mouseout', function() {\n                if (this.$sslIcon.hasClass('disabled')) {\n                    return;\n                }\n\n                this.$submitBtn.removeClass('hover');\n            });\n            this.addListener(this.$sslIcon, 'mousedown', function() {\n                if (this.$sslIcon.hasClass('disabled')) {\n                    return;\n                }\n\n                this.$submitBtn.addClass('active');\n\n                this.addListener(Garnish.$doc, 'mouseup', function() {\n                    this.$submitBtn.removeClass('active');\n                    this.removeListener(Garnish.$doc, 'mouseup');\n                });\n            });\n\n            // Manually validate the inputs every 250ms since some browsers don't fire events when autofill is used\n            // http://stackoverflow.com/questions/11708092/detecting-browser-autofill\n            this.passwordInputInterval = setInterval($.proxy(this, 'validate'), 250);\n\n            this.addListener(this.$sslIcon, 'click', function() {\n                this.$submitBtn.trigger('click');\n            });\n        },\n\n        validate: function() {\n            if (this.$loginNameInput.val() && (this.forgotPassword || this.$passwordInput.val().length >= 6)) {\n                this.$sslIcon.enable();\n                this.$submitBtn.enable();\n                return true;\n            } else {\n                this.$sslIcon.disable();\n                this.$submitBtn.disable();\n                return false;\n            }\n        },\n\n        onSubmit: function(event) {\n            // Prevent full HTTP submits\n            event.preventDefault();\n\n            if (!this.validate()) {\n                return;\n            }\n\n            this.$submitBtn.addClass('active');\n            this.$spinner.removeClass('hidden');\n            this.loading = true;\n\n            if (this.$error) {\n                this.$error.remove();\n            }\n\n            if (this.forgotPassword) {\n                this.submitForgotPassword();\n            } else {\n                this.submitLogin();\n            }\n        },\n\n        submitForgotPassword: function() {\n            var data = {\n                loginName: this.$loginNameInput.val()\n            };\n\n            Craft.postActionRequest('users/send-password-reset-email', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        new MessageSentModal();\n                    } else {\n                        this.showError(response.error);\n                    }\n                }\n\n                this.onSubmitResponse();\n            }, this));\n        },\n\n        submitLogin: function() {\n            var data = {\n                loginName: this.$loginNameInput.val(),\n                password: this.$passwordInput.val(),\n                rememberMe: (this.$rememberMeCheckbox.prop('checked') ? 'y' : '')\n            };\n\n            Craft.postActionRequest('users/login', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        window.location.href = response.returnUrl;\n                    } else {\n                        Garnish.shake(this.$form);\n                        this.onSubmitResponse();\n\n                        // Add the error message\n                        this.showError(response.error);\n                    }\n                } else {\n                    this.onSubmitResponse();\n                }\n            }, this));\n\n            return false;\n        },\n\n        onSubmitResponse: function() {\n            this.$submitBtn.removeClass('active');\n            this.$spinner.addClass('hidden');\n            this.loading = false;\n        },\n\n        showError: function(error) {\n            if (!error) {\n                error = Craft.t('app', 'A server error occurred.');\n            }\n\n            this.$error = $('<p class=\"error\" style=\"display:none\">' + error + '</p>').insertAfter($('.buttons', this.$form));\n            this.$error.velocity('fadeIn');\n        },\n\n        onForgetPassword: function(event) {\n            event.preventDefault();\n\n            if (!Garnish.isMobileBrowser()) {\n                this.$loginNameInput.trigger('focus');\n            }\n\n            if (this.$error) {\n                this.$error.remove();\n            }\n\n            this.$form.addClass('reset-password');\n            this.$passwordField.remove();\n            this.$passwordFields.remove();\n            this.$submitBtn.addClass('reset-password');\n            this.$submitBtn.attr('value', Craft.t('app', 'Reset Password'));\n            this.$submitBtn.enable();\n            this.$sslIcon.remove();\n\n            this.forgotPassword = true;\n            this.validate();\n        }\n    });\n\n    var MessageSentModal = Garnish.Modal.extend({\n        init: function() {\n            var $container = $('<div class=\"modal fitted email-sent\"><div class=\"body\">' + Craft.t('app', 'Check your email for instructions to reset your password.') + '</div></div>')\n                .appendTo(Garnish.$bod);\n\n            this.base($container);\n        },\n\n        hide: function() {\n        }\n    });\n\n    new LoginForm();\n})(jQuery);\n"]}