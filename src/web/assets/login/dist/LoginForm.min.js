"use strict";class LoginForm{constructor(){this.authenticationTarget="authentication/perform-authentication",this.$loginForm=$("#login-form"),this.$authContainer=$("#authentication-container"),this.$errors=$("#login-errors"),this.$messages=$("#login-messages"),this.$spinner=$("#spinner"),this.$submit=$("#submit"),this.$rememberMeCheckbox=$("#rememberMe"),this.$forgotPassword=$("#forgot-password"),this.$rememberPassword=$("#remember-password"),this.$loginForm.on("submit",this.invokeStepHandler.bind(this))}performAuthentication(s){s.scenario=Craft.cpLoginChain,Craft.postActionRequest(this.authenticationTarget,s,(s,e)=>{this.clearMessages(),this.clearErrors(),"success"==e&&(s.success?window.location.href=s.returnUrl:(s.error&&(this.showError(s.error),Garnish.shake(this.$loginForm)),s.message&&this.showMessage(s.message),s.html&&(this.$authContainer.html(s.html),this.stepHandler=void 0),s.footHtml&&Craft.appendFootHtml(s.footHtml))),this.enableForm()})}showError(s){this.clearErrors(),$('<p style="display: none;">'+s+"</p>").appendTo(this.$errors).velocity("fadeIn")}showMessage(s){this.clearMessages(),$('<p style="display: none;">'+s+"</p>").appendTo(this.$messages).velocity("fadeIn")}registerStepHandler(s){this.stepHandler=s}invokeStepHandler(s){if("function"==typeof this.stepHandler){const e=this.stepHandler(s);"object"==typeof e?(this.disableForm(),this.performAuthentication(e)):this.showError(e)}return!1}clearErrors(){this.$errors.empty()}clearMessages(){this.$messages.empty()}enableForm(){this.$submit.addClass("active"),this.$spinner.addClass("hidden")}disableForm(){this.$submit.removeClass("active"),this.$spinner.removeClass("hidden")}}Craft.LoginForm=new LoginForm;
//# sourceMappingURL=LoginForm.min.js.map
