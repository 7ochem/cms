{"version":3,"sources":["login/src/AuthenticationStep.js"],"names":["AuthenticationStep","constructor","validateOnInput","this","stepType","Craft","prepareData","bind","LoginForm","registerStepHandler","onInput","ev","validate","clearErrors","[object Object]","error","data","returnFormData"],"mappings":"AAAA,aACA,MAAMA,mBAANC,YAAMD,GACFC,KAAWC,iBAAW,EAClBC,KAAKD,SAALE,EACAC,MAAKD,UAAWA,oBAAhBA,EAAAD,KAAAG,YAAAC,KAAAJ,OACAE,KAAMG,WAAUC,MAAAA,UAAoBL,WAK5CM,QAAAC,GAEYR,KAAKD,kBAAuC,IAApBC,KAAKS,YAC7BP,MAAMG,UAAUK,cAI5BC,oBACA,MAAAC,EAAAZ,KAAAS,WACA,IAAA,IAAAG,EAKY,MADAZ,KAAKD,iBAAkB,EACjBa,EAHVZ,KAAMY,iBAAQ,EAMd,IAAIC,QAAab,KAAKc,iBAJlB,OADAF,EAAKX,SAAWD,KAAAC,SACXF","file":"AuthenticationStep.min.js","sourcesContent":["\"use strict\";\nclass AuthenticationStep {\n    constructor(stepType) {\n        this.validateOnInput = false;\n        this.stepType = stepType;\n        Craft.LoginForm.registerStepHandler(stepType, this.prepareData.bind(this));\n        this.$loginForm = Craft.LoginForm.$loginForm;\n    }\n    /**\n     * @param ev\n     */\n    onInput(ev) {\n        if (this.validateOnInput && this.validate() === true) {\n            Craft.LoginForm.clearErrors();\n        }\n    }\n    /**\n     *\n     * @param ev\n     */\n    async prepareData() {\n        const error = this.validate();\n        if (error !== true) {\n            this.validateOnInput = true;\n            throw error;\n        }\n        this.validateOnInput = false;\n        let data = await this.returnFormData();\n        data.stepType = this.stepType;\n        return data;\n    }\n}\n"]}